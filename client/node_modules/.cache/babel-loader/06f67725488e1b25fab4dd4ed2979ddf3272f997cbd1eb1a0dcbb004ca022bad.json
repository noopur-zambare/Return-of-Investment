{"ast":null,"code":"var _jsxFileName = \"/Users/noopurnishikantzambare/Downloads/ROI Website/client/src/components/ChartComponent.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { Bar } from 'react-chartjs-2';\nimport Papa from 'papaparse';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BarChart = () => {\n  _s();\n  const [chartData, setChartData] = useState(null);\n  useEffect(() => {\n    fetchData();\n  }, []);\n  const fetchData = () => {\n    // Replace with the path to your CSV file\n    const csvFilePath = '/static/data.csv';\n    Papa.parse(csvFilePath, {\n      header: true,\n      download: true,\n      complete: results => {\n        const data = results.data;\n        const column = 'req1Product';\n        const countMap = new Map();\n\n        // Count the occurrences of each unique value in the column\n        data.forEach(row => {\n          const value = row[column];\n          if (countMap.has(value)) {\n            countMap.set(value, countMap.get(value) + 1);\n          } else {\n            countMap.set(value, 1);\n          }\n        });\n        const labels = Array.from(countMap.keys());\n        const counts = Array.from(countMap.values());\n        const chartData = {\n          labels,\n          datasets: [{\n            label: 'Count',\n            data: counts,\n            backgroundColor: 'rgba(75, 192, 192, 0.6)',\n            borderColor: 'rgba(75, 192, 192, 1)',\n            borderWidth: 1\n          }]\n        };\n        setChartData(chartData);\n      }\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: chartData ? /*#__PURE__*/_jsxDEV(Bar, {\n      data: chartData,\n      options: {\n        scales: {\n          y: {\n            beginAtZero: true,\n            precision: 0\n          }\n        }\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading chart data...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n};\n_s(BarChart, \"9euvDhZ+n6eLTlbzwvHmNPhoqAw=\");\n_c = BarChart;\nexport default BarChart;\nvar _c;\n$RefreshReg$(_c, \"BarChart\");","map":{"version":3,"names":["React","useEffect","useState","Bar","Papa","jsxDEV","_jsxDEV","BarChart","_s","chartData","setChartData","fetchData","csvFilePath","parse","header","download","complete","results","data","column","countMap","Map","forEach","row","value","has","set","get","labels","Array","from","keys","counts","values","datasets","label","backgroundColor","borderColor","borderWidth","children","options","scales","y","beginAtZero","precision","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/noopurnishikantzambare/Downloads/ROI Website/client/src/components/ChartComponent.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { Bar } from 'react-chartjs-2';\nimport Papa from 'papaparse';\n\nconst BarChart = () => {\n  const [chartData, setChartData] = useState(null);\n\n  useEffect(() => {\n    fetchData();\n  }, []);\n\n  const fetchData = () => {\n    // Replace with the path to your CSV file\n    const csvFilePath = '/static/data.csv';\n\n    Papa.parse(csvFilePath, {\n      header: true,\n      download: true,\n      complete: (results) => {\n        const data = results.data;\n        const column = 'req1Product';\n\n        const countMap = new Map();\n\n        // Count the occurrences of each unique value in the column\n        data.forEach((row) => {\n          const value = row[column];\n          if (countMap.has(value)) {\n            countMap.set(value, countMap.get(value) + 1);\n          } else {\n            countMap.set(value, 1);\n          }\n        });\n\n        const labels = Array.from(countMap.keys());\n        const counts = Array.from(countMap.values());\n\n        const chartData = {\n          labels,\n          datasets: [\n            {\n              label: 'Count',\n              data: counts,\n              backgroundColor: 'rgba(75, 192, 192, 0.6)',\n              borderColor: 'rgba(75, 192, 192, 1)',\n              borderWidth: 1,\n            },\n          ],\n        };\n\n        setChartData(chartData);\n      },\n    });\n  };\n\n  return (\n    <div>\n      {chartData ? (\n        <Bar\n          data={chartData}\n          options={{\n            scales: {\n              y: {\n                beginAtZero: true,\n                precision: 0,\n              },\n            },\n          }}\n        />\n      ) : (\n        <p>Loading chart data...</p>\n      )}\n    </div>\n  );\n};\n\nexport default BarChart;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,GAAG,QAAQ,iBAAiB;AACrC,OAAOC,IAAI,MAAM,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE7B,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACrB,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGR,QAAQ,CAAC,IAAI,CAAC;EAEhDD,SAAS,CAAC,MAAM;IACdU,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMA,SAAS,GAAGA,CAAA,KAAM;IACtB;IACA,MAAMC,WAAW,GAAG,kBAAkB;IAEtCR,IAAI,CAACS,KAAK,CAACD,WAAW,EAAE;MACtBE,MAAM,EAAE,IAAI;MACZC,QAAQ,EAAE,IAAI;MACdC,QAAQ,EAAGC,OAAO,IAAK;QACrB,MAAMC,IAAI,GAAGD,OAAO,CAACC,IAAI;QACzB,MAAMC,MAAM,GAAG,aAAa;QAE5B,MAAMC,QAAQ,GAAG,IAAIC,GAAG,CAAC,CAAC;;QAE1B;QACAH,IAAI,CAACI,OAAO,CAAEC,GAAG,IAAK;UACpB,MAAMC,KAAK,GAAGD,GAAG,CAACJ,MAAM,CAAC;UACzB,IAAIC,QAAQ,CAACK,GAAG,CAACD,KAAK,CAAC,EAAE;YACvBJ,QAAQ,CAACM,GAAG,CAACF,KAAK,EAAEJ,QAAQ,CAACO,GAAG,CAACH,KAAK,CAAC,GAAG,CAAC,CAAC;UAC9C,CAAC,MAAM;YACLJ,QAAQ,CAACM,GAAG,CAACF,KAAK,EAAE,CAAC,CAAC;UACxB;QACF,CAAC,CAAC;QAEF,MAAMI,MAAM,GAAGC,KAAK,CAACC,IAAI,CAACV,QAAQ,CAACW,IAAI,CAAC,CAAC,CAAC;QAC1C,MAAMC,MAAM,GAAGH,KAAK,CAACC,IAAI,CAACV,QAAQ,CAACa,MAAM,CAAC,CAAC,CAAC;QAE5C,MAAMxB,SAAS,GAAG;UAChBmB,MAAM;UACNM,QAAQ,EAAE,CACR;YACEC,KAAK,EAAE,OAAO;YACdjB,IAAI,EAAEc,MAAM;YACZI,eAAe,EAAE,yBAAyB;YAC1CC,WAAW,EAAE,uBAAuB;YACpCC,WAAW,EAAE;UACf,CAAC;QAEL,CAAC;QAED5B,YAAY,CAACD,SAAS,CAAC;MACzB;IACF,CAAC,CAAC;EACJ,CAAC;EAED,oBACEH,OAAA;IAAAiC,QAAA,EACG9B,SAAS,gBACRH,OAAA,CAACH,GAAG;MACFe,IAAI,EAAET,SAAU;MAChB+B,OAAO,EAAE;QACPC,MAAM,EAAE;UACNC,CAAC,EAAE;YACDC,WAAW,EAAE,IAAI;YACjBC,SAAS,EAAE;UACb;QACF;MACF;IAAE;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,gBAEF1C,OAAA;MAAAiC,QAAA,EAAG;IAAqB;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG;EAC5B;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAACxC,EAAA,CAtEID,QAAQ;AAAA0C,EAAA,GAAR1C,QAAQ;AAwEd,eAAeA,QAAQ;AAAC,IAAA0C,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}