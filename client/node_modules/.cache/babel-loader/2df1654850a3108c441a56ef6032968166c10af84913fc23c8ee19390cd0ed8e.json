{"ast":null,"code":"var _jsxFileName = \"/Users/noopurnishikantzambare/Downloads/ROI Website/client/src/components/ImportCSV.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport './ImportCSV.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ImportCSV() {\n  _s();\n  const [trainData, settrainData] = useState(null);\n  const [testData, settestData] = useState(null);\n  const [graphUrl, setGraphUrl] = useState(null);\n  const [graphRowCount, setGraphRowCount] = useState(null);\n  const [graphColumnCount, setGraphColumnCount] = useState(null);\n  const [countRowCount, setCountRowCount] = useState(null);\n  const [countColumnCount, setCountColumnCount] = useState(null);\n  const downloadFile = (fileUrl, fileName) => {\n    const link = document.createElement('a');\n    link.href = fileUrl;\n    link.download = fileName;\n    link.click();\n  };\n  const handletrainDataUpload = event => {\n    settrainData(event.target.files[0]);\n  };\n  const handletestDataUpload = event => {\n    settestData(event.target.files[0]);\n  };\n  const handleGraphUpload = () => {\n    const formData = new FormData();\n    formData.append('file', trainData);\n    axios.post('/upload/graph', formData).then(response => {\n      console.log(response.data);\n      if (response.data.success) {\n        setGraphUrl(response.data.graph_url);\n        setGraphRowCount(response.data.rows);\n        setGraphColumnCount(response.data.columns);\n      }\n    }).catch(error => {\n      console.error(error);\n      // Handle error if necessary\n    });\n  };\n\n  const handleCountUpload = () => {\n    const formData = new FormData();\n    formData.append('file', testData);\n    axios.post('/upload/count', formData).then(response => {\n      console.log(response.data);\n      if (response.data.success) {\n        setCountRowCount(response.data.rows);\n        setCountColumnCount(response.data.columns);\n      }\n    }).catch(error => {\n      console.error(error);\n      // Handle error if necessary\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Train Data\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 3\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        onChange: handletrainDataUpload\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 3\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleGraphUpload,\n        children: \"Upload\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 3\n      }, this), graphUrl && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"result\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: graphUrl,\n          alt: \"Graph\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Graph Rows: \", graphRowCount]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Graph Columns: \", graphColumnCount]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Test Data\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 3\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        onChange: handletestDataUpload\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 3\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleCountUpload,\n        children: \"Upload\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 3\n      }, this), countRowCount !== null && countColumnCount !== null && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"result\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Count Rows: \", countRowCount]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Count Columns: \", countColumnCount]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n}\n_s(ImportCSV, \"Wg5d9PzVMR7MA96hsd2YRYFmnkQ=\");\n_c = ImportCSV;\nexport default ImportCSV;\nvar _c;\n$RefreshReg$(_c, \"ImportCSV\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","ImportCSV","_s","trainData","settrainData","testData","settestData","graphUrl","setGraphUrl","graphRowCount","setGraphRowCount","graphColumnCount","setGraphColumnCount","countRowCount","setCountRowCount","countColumnCount","setCountColumnCount","downloadFile","fileUrl","fileName","link","document","createElement","href","download","click","handletrainDataUpload","event","target","files","handletestDataUpload","handleGraphUpload","formData","FormData","append","post","then","response","console","log","data","success","graph_url","rows","columns","catch","error","handleCountUpload","className","children","_jsxFileName","lineNumber","columnNumber","type","onChange","onClick","src","alt","_c","$RefreshReg$"],"sources":["/Users/noopurnishikantzambare/Downloads/ROI Website/client/src/components/ImportCSV.js"],"sourcesContent":["import React, { useState } from 'react';\nimport axios from 'axios';\nimport'./ImportCSV.css'\n\nfunction ImportCSV() {\n  const [trainData, settrainData] = useState(null);\n  const [testData, settestData] = useState(null);\n  const [graphUrl, setGraphUrl] = useState(null);\n  const [graphRowCount, setGraphRowCount] = useState(null);\n  const [graphColumnCount, setGraphColumnCount] = useState(null);\n  const [countRowCount, setCountRowCount] = useState(null);\n  const [countColumnCount, setCountColumnCount] = useState(null);\n  const downloadFile = (fileUrl, fileName) => {\n    const link = document.createElement('a');\n    link.href = fileUrl;\n    link.download = fileName;\n    link.click();\n  };\n  \n  const handletrainDataUpload = (event) => {\n    settrainData(event.target.files[0]);\n  };\n\n  const handletestDataUpload = (event) => {\n    settestData(event.target.files[0]);\n  };\n\n  const handleGraphUpload = () => {\n    const formData = new FormData();\n    formData.append('file', trainData);\n\n    axios.post('/upload/graph', formData)\n      .then((response) => {\n        console.log(response.data);\n        if (response.data.success) {\n          setGraphUrl(response.data.graph_url);\n          setGraphRowCount(response.data.rows);\n          setGraphColumnCount(response.data.columns);\n          \n        }\n      })\n      .catch((error) => {\n        console.error(error);\n        // Handle error if necessary\n      });\n  };\n\n  const handleCountUpload = () => {\n    const formData = new FormData();\n    formData.append('file', testData);\n\n    axios.post('/upload/count', formData)\n      .then((response) => {\n        console.log(response.data);\n        if (response.data.success) {\n          setCountRowCount(response.data.rows);\n          setCountColumnCount(response.data.columns);\n        }\n      })\n      .catch((error) => {\n        console.error(error);\n        // Handle error if necessary\n      });\n  };\n\n  return (\n    <div className=\"container\">\n      <div className=\"section\">\n  <h2>Train Data</h2>\n  <input type=\"file\" onChange={handletrainDataUpload} />\n  <button onClick={handleGraphUpload}>Upload</button>\n\n  {graphUrl && (\n    <div className=\"result\">\n      <img src={graphUrl} alt=\"Graph\" />\n      <p>Graph Rows: {graphRowCount}</p>\n      <p>Graph Columns: {graphColumnCount}</p>\n    </div>\n  )}\n</div>\n\n\n      <div className=\"section\">\n  <h2>Test Data</h2>\n\n  <input type=\"file\" onChange={handletestDataUpload} />\n  <button onClick={handleCountUpload}>Upload</button>\n\n  {countRowCount !== null && countColumnCount !== null && (\n    <div className=\"result\">\n      <p>Count Rows: {countRowCount}</p>\n      <p>Count Columns: {countColumnCount}</p>\n    </div>\n  )}\n</div>\n\n    </div>\n  );\n}\n\nexport default ImportCSV;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}