{"ast":null,"code":"var _jsxFileName = \"/Users/noopurnishikantzambare/Downloads/ROI Website/client/src/components/CrossFilterChart.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { ChartRow, RowChart } from 'react-dc';\nimport crossfilter from 'crossfilter2';\nimport { DataGrid, GridToolbar } from '@mui/x-data-grid';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CrossFilterChart = () => {\n  _s();\n  const [data, setData] = useState([]);\n  useEffect(() => {\n    fetchData();\n  }, []);\n  const fetchData = async () => {\n    try {\n      const response = await axios.get('/api/data');\n      setData(response.data);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  useEffect(() => {\n    if (data && data.length > 0) {\n      createChart();\n    }\n  }, [data]);\n  const createChart = () => {\n    const ndx = crossfilter(data);\n\n    // Create dimensions and groups\n    const dimension1 = ndx.dimension(d => d.column1); // Replace \"column1\" with the actual column name from your dataset\n    const group1 = dimension1.group().reduceCount();\n    const dimension2 = ndx.dimension(d => d.column2); // Replace \"column2\" with the actual column name from your dataset\n    const group2 = dimension2.group().reduceCount();\n\n    // Render charts\n    const charts = [/*#__PURE__*/_jsxDEV(ChartRow, {\n      children: /*#__PURE__*/_jsxDEV(RowChart, {\n        dimension: dimension1,\n        group: group1,\n        width: 400,\n        height: 300\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)\n    }, \"row1\", false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ChartRow, {\n      children: /*#__PURE__*/_jsxDEV(RowChart, {\n        dimension: dimension2,\n        group: group2,\n        width: 400,\n        height: 300\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)\n    }, \"row2\", false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)];\n    const columns = Object.keys(data[0]).map(key => ({\n      field: key,\n      headerName: key,\n      flex: 1\n    }));\n    const rows = data.map((item, index) => ({\n      id: index,\n      ...item\n    }));\n    const table = /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        height: 400,\n        width: '100%'\n      },\n      children: /*#__PURE__*/_jsxDEV(DataGrid, {\n        rows: rows,\n        columns: columns,\n        components: {\n          Toolbar: GridToolbar\n        },\n        pageSize: 5,\n        rowsPerPageOptions: [5, 10, 20],\n        disableSelectionOnClick: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this);\n    const container = /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [charts, table]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this);\n    dc.renderAll();\n    return container;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: data.length > 0 ? createChart() : null\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 10\n  }, this);\n};\n_s(CrossFilterChart, \"MNW7rnkI9oNPb711ySWHHHkbM9Y=\");\n_c = CrossFilterChart;\nexport default CrossFilterChart;\nvar _c;\n$RefreshReg$(_c, \"CrossFilterChart\");","map":{"version":3,"names":["React","useEffect","useState","axios","ChartRow","RowChart","crossfilter","DataGrid","GridToolbar","jsxDEV","_jsxDEV","CrossFilterChart","_s","data","setData","fetchData","response","get","error","console","log","length","createChart","ndx","dimension1","dimension","d","column1","group1","group","reduceCount","dimension2","column2","group2","charts","children","width","height","fileName","_jsxFileName","lineNumber","columnNumber","columns","Object","keys","map","key","field","headerName","flex","rows","item","index","id","table","style","components","Toolbar","pageSize","rowsPerPageOptions","disableSelectionOnClick","container","dc","renderAll","_c","$RefreshReg$"],"sources":["/Users/noopurnishikantzambare/Downloads/ROI Website/client/src/components/CrossFilterChart.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { ChartRow, RowChart } from 'react-dc';\nimport crossfilter from 'crossfilter2';\nimport { DataGrid, GridToolbar } from '@mui/x-data-grid';\n\nconst CrossFilterChart = () => {\n  const [data, setData] = useState([]);\n\n  useEffect(() => {\n    fetchData();\n  }, []);\n\n  const fetchData = async () => {\n    try {\n      const response = await axios.get('/api/data');\n      setData(response.data);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  useEffect(() => {\n    if (data && data.length > 0) {\n      createChart();\n    }\n  }, [data]);\n\n  const createChart = () => {\n    const ndx = crossfilter(data);\n\n    // Create dimensions and groups\n    const dimension1 = ndx.dimension((d) => d.column1); // Replace \"column1\" with the actual column name from your dataset\n    const group1 = dimension1.group().reduceCount();\n\n    const dimension2 = ndx.dimension((d) => d.column2); // Replace \"column2\" with the actual column name from your dataset\n    const group2 = dimension2.group().reduceCount();\n\n    // Render charts\n    const charts = [\n      <ChartRow key=\"row1\">\n        <RowChart dimension={dimension1} group={group1} width={400} height={300} />\n      </ChartRow>,\n      <ChartRow key=\"row2\">\n        <RowChart dimension={dimension2} group={group2} width={400} height={300} />\n      </ChartRow>,\n    ];\n\n    const columns = Object.keys(data[0]).map((key) => ({\n      field: key,\n      headerName: key,\n      flex: 1,\n    }));\n\n    const rows = data.map((item, index) => ({ id: index, ...item }));\n\n    const table = (\n      <div style={{ height: 400, width: '100%' }}>\n        <DataGrid\n          rows={rows}\n          columns={columns}\n          components={{\n            Toolbar: GridToolbar,\n          }}\n          pageSize={5}\n          rowsPerPageOptions={[5, 10, 20]}\n          disableSelectionOnClick\n        />\n      </div>\n    );\n\n    const container = (\n      <div>\n        {charts}\n        {table}\n      </div>\n    );\n\n    dc.renderAll();\n\n    return container;\n  };\n\n  return <div>{data.length > 0 ? createChart() : null}</div>;\n};\n\nexport default CrossFilterChart;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}