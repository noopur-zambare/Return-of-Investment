{"ast":null,"code":"var _jsxFileName = \"/Users/noopurnishikantzambare/Downloads/ROI Website/client/src/components/ChartComponent.js\",\n  _s = $RefreshSig$();\nimport OscarData from './data.csv';\nimport Papa from 'papaparse';\nimport { useEffect, useState } from 'react';\nimport { Bar } from 'react-chartjs-2';\nimport { Chart as ChartJS, CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend } from 'chart.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend);\nfunction Home() {\n  _s();\n  const [chartData, setChartData] = useState({\n    labels: [],\n    datasets: []\n  });\n  const [chartOptions, setChartOptions] = useState({});\n  const [labelCountData, setLabelCountData] = useState([]);\n  const [clickedLabelIndex, setClickedLabelIndex] = useState(null);\n  useEffect(() => {\n    Papa.parse(OscarData, {\n      download: true,\n      header: true,\n      dynamicTyping: true,\n      delimiter: \"\",\n      complete: result => {\n        const labelCounts = {};\n        const labels = [];\n        const datasets = [];\n        result.data.forEach(item => {\n          const label = item['req1Product'];\n          if (label) {\n            if (!labels.includes(label)) {\n              labels.push(label);\n            }\n            if (labelCounts[label]) {\n              labelCounts[label] += 1;\n            } else {\n              labelCounts[label] = 1;\n            }\n          }\n        });\n        datasets.push({\n          label: \"Count\",\n          data: Object.values(labelCounts),\n          borderColor: \"black\",\n          backgroundColor: \"red\"\n        });\n        setChartData({\n          labels: labels,\n          datasets: datasets\n        });\n        setChartOptions({\n          responsive: true,\n          plugins: {\n            legend: {\n              position: 'top'\n            },\n            title: {\n              display: true,\n              text: \"Count of req1Product Values\"\n            }\n          },\n          scales: {\n            y: {\n              beginAtZero: true,\n              title: {\n                display: true,\n                text: \"Count\"\n              }\n            }\n          }\n        });\n      }\n    });\n  }, []);\n  const handleColumnClick = async (event, activeElements) => {\n    if (activeElements.length > 0) {\n      const labelIndex = activeElements[0].index;\n      setClickedLabelIndex(labelIndex);\n      const clickedLabel = chartData.labels[labelIndex];\n      const predictionLabelCounts = {};\n      await new Promise((resolve, reject) => {\n        Papa.parse(OscarData, {\n          download: true,\n          header: true,\n          dynamicTyping: true,\n          delimiter: \"\",\n          complete: result => {\n            result.data.forEach(item => {\n              const prediction = item['prediction'];\n              const label = item['req1Product'];\n              if (label === clickedLabel && prediction !== undefined) {\n                if (predictionLabelCounts[prediction]) {\n                  predictionLabelCounts[prediction] += 1;\n                } else {\n                  predictionLabelCounts[prediction] = 1;\n                }\n              }\n            });\n            const labelCountChartData = {\n              labels: Object.keys(predictionLabelCounts),\n              datasets: [{\n                label: \"Count\",\n                data: Object.values(predictionLabelCounts),\n                borderColor: \"black\",\n                backgroundColor: [\"red\", \"blue\"]\n              }]\n            };\n            const labelCountChartOptions = {\n              responsive: true,\n              plugins: {\n                legend: {\n                  position: 'top'\n                },\n                title: {\n                  display: true,\n                  text: `Label Count for ${clickedLabel}`\n                }\n              },\n              scales: {\n                y: {\n                  beginAtZero: true,\n                  title: {\n                    display: true,\n                    text: \"Count\"\n                  }\n                }\n              }\n            };\n            setLabelCountData(prevData => {\n              const newData = [...prevData];\n              newData[labelIndex] = {\n                chartData: labelCountChartData,\n                chartOptions: labelCountChartOptions\n              };\n              return newData;\n            });\n            resolve();\n          },\n          error: error => {\n            reject(error);\n          }\n        });\n      });\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"HOME PAGE\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 7\n    }, this), chartData.datasets.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Bar, {\n        options: {\n          ...chartOptions,\n          onClick: handleColumnClick\n        },\n        data: chartData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 11\n      }, this), labelCountData.length > 0 && labelCountData[clickedLabelIndex] && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: [\"Label Count for \", chartData.labels[clickedLabelIndex]]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Bar, {\n          options: labelCountData[clickedLabelIndex].chartOptions,\n          data: labelCountData[clickedLabelIndex].chartData\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 164,\n    columnNumber: 5\n  }, this);\n}\n_s(Home, \"GExeEc02o5DMgWNMphHDXeTibVU=\");\n_c = Home;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["OscarData","Papa","useEffect","useState","Bar","Chart","ChartJS","CategoryScale","LinearScale","BarElement","Title","Tooltip","Legend","jsxDEV","_jsxDEV","register","Home","_s","chartData","setChartData","labels","datasets","chartOptions","setChartOptions","labelCountData","setLabelCountData","clickedLabelIndex","setClickedLabelIndex","parse","download","header","dynamicTyping","delimiter","complete","result","labelCounts","data","forEach","item","label","includes","push","Object","values","borderColor","backgroundColor","responsive","plugins","legend","position","title","display","text","scales","y","beginAtZero","handleColumnClick","event","activeElements","length","labelIndex","index","clickedLabel","predictionLabelCounts","Promise","resolve","reject","prediction","undefined","labelCountChartData","keys","labelCountChartOptions","prevData","newData","error","children","fileName","_jsxFileName","lineNumber","columnNumber","options","onClick","_c","$RefreshReg$"],"sources":["/Users/noopurnishikantzambare/Downloads/ROI Website/client/src/components/ChartComponent.js"],"sourcesContent":["import OscarData from './data.csv';\nimport Papa from 'papaparse';\nimport { useEffect, useState } from 'react';\nimport { Bar } from 'react-chartjs-2';\nimport { Chart as ChartJS, CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend } from 'chart.js';\n\nChartJS.register(CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend);\n\nfunction Home() {\n  const [chartData, setChartData] = useState({\n    labels: [],\n    datasets: []\n  });\n  const [chartOptions, setChartOptions] = useState({});\n  const [labelCountData, setLabelCountData] = useState([]);\n  const [clickedLabelIndex, setClickedLabelIndex] = useState(null);\n\n  useEffect(() => {\n    Papa.parse(OscarData, {\n      download: true,\n      header: true,\n      dynamicTyping: true,\n      delimiter: \"\",\n      complete: ((result) => {\n        const labelCounts = {};\n        const labels = [];\n        const datasets = [];\n\n        result.data.forEach((item) => {\n          const label = item['req1Product'];\n\n          if (label) {\n            if (!labels.includes(label)) {\n              labels.push(label);\n            }\n\n            if (labelCounts[label]) {\n              labelCounts[label] += 1;\n            } else {\n              labelCounts[label] = 1;\n            }\n          }\n        });\n\n        datasets.push({\n          label: \"Count\",\n          data: Object.values(labelCounts),\n          borderColor: \"black\",\n          backgroundColor: \"red\"\n        });\n\n        setChartData({\n          labels: labels,\n          datasets: datasets\n        });\n\n        setChartOptions({\n          responsive: true,\n          plugins: {\n            legend: {\n              position: 'top'\n            },\n            title: {\n              display: true,\n              text: \"Count of req1Product Values\"\n            }\n          },\n          scales: {\n            y: {\n              beginAtZero: true,\n              title: {\n                display: true,\n                text: \"Count\"\n              }\n            }\n          }\n        });\n      })\n    });\n  }, []);\n\n  const handleColumnClick = async (event, activeElements) => {\n    if (activeElements.length > 0) {\n      const labelIndex = activeElements[0].index;\n      setClickedLabelIndex(labelIndex);\n\n      const clickedLabel = chartData.labels[labelIndex];\n      const predictionLabelCounts = {};\n\n      await new Promise((resolve, reject) => {\n        Papa.parse(OscarData, {\n          download: true,\n          header: true,\n          dynamicTyping: true,\n          delimiter: \"\",\n          complete: ((result) => {\n            result.data.forEach((item) => {\n              const prediction = item['prediction'];\n              const label = item['req1Product'];\n\n              if (label === clickedLabel && prediction !== undefined) {\n                if (predictionLabelCounts[prediction]) {\n                  predictionLabelCounts[prediction] += 1;\n                } else {\n                  predictionLabelCounts[prediction] = 1;\n                }\n              }\n            });\n\n            const labelCountChartData = {\n              labels: Object.keys(predictionLabelCounts),\n              datasets: [\n                {\n                  label: \"Count\",\n                  data: Object.values(predictionLabelCounts),\n                  borderColor: \"black\",\n                  backgroundColor: [\"red\", \"blue\"]\n                }\n              ]\n            };\n\n            const labelCountChartOptions = {\n              responsive: true,\n              plugins: {\n                legend: {\n                  position: 'top'\n                },\n                title: {\n                  display: true,\n                  text: `Label Count for ${clickedLabel}`\n                }\n              },\n              scales: {\n                y: {\n                  beginAtZero: true,\n                  title: {\n                    display: true,\n                    text: \"Count\"\n                  }\n                }\n              }\n            };\n\n            setLabelCountData(prevData => {\n              const newData = [...prevData];\n              newData[labelIndex] = {\n                chartData: labelCountChartData,\n                chartOptions: labelCountChartOptions\n              };\n              return newData;\n            });\n\n            resolve();\n          }),\n          error: ((error) => {\n            reject(error);\n          })\n        });\n      });\n    }\n  };\n\n  return (\n    <div>\n      <h1>HOME PAGE</h1>\n      {chartData.datasets.length > 0 ? (\n        <div>\n          <Bar options={{...chartOptions, onClick: handleColumnClick}} data={chartData} />\n          {labelCountData.length > 0 && labelCountData[clickedLabelIndex] && (\n            <div>\n              <h2>Label Count for {chartData.labels[clickedLabelIndex]}</h2>\n              <Bar options={labelCountData[clickedLabelIndex].chartOptions} data={labelCountData[clickedLabelIndex].chartData} />\n            </div>\n          )}\n        </div>\n      ) : (\n        <div>Loading...</div>\n      )}\n    </div>\n  );\n}\n\nexport default Home;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}