{"ast":null,"code":"/*!\n * Chart.js v3.3.2\n * https://www.chartjs.org\n * (c) 2021 Chart.js Contributors\n * Released under the MIT License\n */\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() : typeof define === 'function' && define.amd ? define(factory) : (global = typeof globalThis !== 'undefined' ? globalThis : global || self, global.Chart = factory());\n})(this, function () {\n  'use strict';\n\n  function fontString(pixelSize, fontStyle, fontFamily) {\n    return fontStyle + ' ' + pixelSize + 'px ' + fontFamily;\n  }\n  const requestAnimFrame = function () {\n    if (typeof window === 'undefined') {\n      return function (callback) {\n        return callback();\n      };\n    }\n    return window.requestAnimationFrame;\n  }();\n  function throttled(fn, thisArg, updateFn) {\n    const updateArgs = updateFn || (args => Array.prototype.slice.call(args));\n    let ticking = false;\n    let args = [];\n    return function () {\n      for (var _len = arguments.length, rest = new Array(_len), _key = 0; _key < _len; _key++) {\n        rest[_key] = arguments[_key];\n      }\n      args = updateArgs(rest);\n      if (!ticking) {\n        ticking = true;\n        requestAnimFrame.call(window, () => {\n          ticking = false;\n          fn.apply(thisArg, args);\n        });\n      }\n    };\n  }\n  function debounce(fn, delay) {\n    let timeout;\n    return function () {\n      if (delay) {\n        clearTimeout(timeout);\n        timeout = setTimeout(fn, delay);\n      } else {\n        fn();\n      }\n      return delay;\n    };\n  }\n  const _toLeftRightCenter = align => align === 'start' ? 'left' : align === 'end' ? 'right' : 'center';\n  const _alignStartEnd = (align, start, end) => align === 'start' ? start : align === 'end' ? end : (start + end) / 2;\n  const _textX = (align, left, right) => align === 'right' ? right : align === 'center' ? (left + right) / 2 : left;\n  class Animator {\n    constructor() {\n      this._request = null;\n      this._charts = new Map();\n      this._running = false;\n      this._lastDate = undefined;\n    }\n    _notify(chart, anims, date, type) {\n      const callbacks = anims.listeners[type];\n      const numSteps = anims.duration;\n      callbacks.forEach(fn => fn({\n        chart,\n        initial: anims.initial,\n        numSteps,\n        currentStep: Math.min(date - anims.start, numSteps)\n      }));\n    }\n    _refresh() {\n      const me = this;\n      if (me._request) {\n        return;\n      }\n      me._running = true;\n      me._request = requestAnimFrame.call(window, () => {\n        me._update();\n        me._request = null;\n        if (me._running) {\n          me._refresh();\n        }\n      });\n    }\n    _update() {\n      let date = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : Date.now();\n      const me = this;\n      let remaining = 0;\n      me._charts.forEach((anims, chart) => {\n        if (!anims.running || !anims.items.length) {\n          return;\n        }\n        const items = anims.items;\n        let i = items.length - 1;\n        let draw = false;\n        let item;\n        for (; i >= 0; --i) {\n          item = items[i];\n          if (item._active) {\n            if (item._total > anims.duration) {\n              anims.duration = item._total;\n            }\n            item.tick(date);\n            draw = true;\n          } else {\n            items[i] = items[items.length - 1];\n            items.pop();\n          }\n        }\n        if (draw) {\n          chart.draw();\n          me._notify(chart, anims, date, 'progress');\n        }\n        if (!items.length) {\n          anims.running = false;\n          me._notify(chart, anims, date, 'complete');\n          anims.initial = false;\n        }\n        remaining += items.length;\n      });\n      me._lastDate = date;\n      if (remaining === 0) {\n        me._running = false;\n      }\n    }\n    _getAnims(chart) {\n      const charts = this._charts;\n      let anims = charts.get(chart);\n      if (!anims) {\n        anims = {\n          running: false,\n          initial: true,\n          items: [],\n          listeners: {\n            complete: [],\n            progress: []\n          }\n        };\n        charts.set(chart, anims);\n      }\n      return anims;\n    }\n    listen(chart, event, cb) {\n      this._getAnims(chart).listeners[event].push(cb);\n    }\n    add(chart, items) {\n      if (!items || !items.length) {\n        return;\n      }\n      this._getAnims(chart).items.push(...items);\n    }\n    has(chart) {\n      return this._getAnims(chart).items.length > 0;\n    }\n    start(chart) {\n      const anims = this._charts.get(chart);\n      if (!anims) {\n        return;\n      }\n      anims.running = true;\n      anims.start = Date.now();\n      anims.duration = anims.items.reduce((acc, cur) => Math.max(acc, cur._duration), 0);\n      this._refresh();\n    }\n    running(chart) {\n      if (!this._running) {\n        return false;\n      }\n      const anims = this._charts.get(chart);\n      if (!anims || !anims.running || !anims.items.length) {\n        return false;\n      }\n      return true;\n    }\n    stop(chart) {\n      const anims = this._charts.get(chart);\n      if (!anims || !anims.items.length) {\n        return;\n      }\n      const items = anims.items;\n      let i = items.length - 1;\n      for (; i >= 0; --i) {\n        items[i].cancel();\n      }\n      anims.items = [];\n      this._notify(chart, anims, Date.now(), 'complete');\n    }\n    remove(chart) {\n      return this._charts.delete(chart);\n    }\n  }\n  var animator = new Animator();\n\n  /*!\n   * @kurkle/color v0.1.9\n   * https://github.com/kurkle/color#readme\n   * (c) 2020 Jukka Kurkela\n   * Released under the MIT License\n   */\n  const map = {\n    0: 0,\n    1: 1,\n    2: 2,\n    3: 3,\n    4: 4,\n    5: 5,\n    6: 6,\n    7: 7,\n    8: 8,\n    9: 9,\n    A: 10,\n    B: 11,\n    C: 12,\n    D: 13,\n    E: 14,\n    F: 15,\n    a: 10,\n    b: 11,\n    c: 12,\n    d: 13,\n    e: 14,\n    f: 15\n  };\n  const hex = '0123456789ABCDEF';\n  const h1 = b => hex[b & 0xF];\n  const h2 = b => hex[(b & 0xF0) >> 4] + hex[b & 0xF];\n  const eq = b => (b & 0xF0) >> 4 === (b & 0xF);\n  function isShort(v) {\n    return eq(v.r) && eq(v.g) && eq(v.b) && eq(v.a);\n  }\n  function hexParse(str) {\n    var len = str.length;\n    var ret;\n    if (str[0] === '#') {\n      if (len === 4 || len === 5) {\n        ret = {\n          r: 255 & map[str[1]] * 17,\n          g: 255 & map[str[2]] * 17,\n          b: 255 & map[str[3]] * 17,\n          a: len === 5 ? map[str[4]] * 17 : 255\n        };\n      } else if (len === 7 || len === 9) {\n        ret = {\n          r: map[str[1]] << 4 | map[str[2]],\n          g: map[str[3]] << 4 | map[str[4]],\n          b: map[str[5]] << 4 | map[str[6]],\n          a: len === 9 ? map[str[7]] << 4 | map[str[8]] : 255\n        };\n      }\n    }\n    return ret;\n  }\n  function hexString(v) {\n    var f = isShort(v) ? h1 : h2;\n    return v ? '#' + f(v.r) + f(v.g) + f(v.b) + (v.a < 255 ? f(v.a) : '') : v;\n  }\n  function round(v) {\n    return v + 0.5 | 0;\n  }\n  const lim = (v, l, h) => Math.max(Math.min(v, h), l);\n  function p2b(v) {\n    return lim(round(v * 2.55), 0, 255);\n  }\n  function n2b(v) {\n    return lim(round(v * 255), 0, 255);\n  }\n  function b2n(v) {\n    return lim(round(v / 2.55) / 100, 0, 1);\n  }\n  function n2p(v) {\n    return lim(round(v * 100), 0, 100);\n  }\n  const RGB_RE = /^rgba?\\(\\s*([-+.\\d]+)(%)?[\\s,]+([-+.e\\d]+)(%)?[\\s,]+([-+.e\\d]+)(%)?(?:[\\s,/]+([-+.e\\d]+)(%)?)?\\s*\\)$/;\n  function rgbParse(str) {\n    const m = RGB_RE.exec(str);\n    let a = 255;\n    let r, g, b;\n    if (!m) {\n      return;\n    }\n    if (m[7] !== r) {\n      const v = +m[7];\n      a = 255 & (m[8] ? p2b(v) : v * 255);\n    }\n    r = +m[1];\n    g = +m[3];\n    b = +m[5];\n    r = 255 & (m[2] ? p2b(r) : r);\n    g = 255 & (m[4] ? p2b(g) : g);\n    b = 255 & (m[6] ? p2b(b) : b);\n    return {\n      r: r,\n      g: g,\n      b: b,\n      a: a\n    };\n  }\n  function rgbString(v) {\n    return v && (v.a < 255 ? `rgba(${v.r}, ${v.g}, ${v.b}, ${b2n(v.a)})` : `rgb(${v.r}, ${v.g}, ${v.b})`);\n  }\n  const HUE_RE = /^(hsla?|hwb|hsv)\\(\\s*([-+.e\\d]+)(?:deg)?[\\s,]+([-+.e\\d]+)%[\\s,]+([-+.e\\d]+)%(?:[\\s,]+([-+.e\\d]+)(%)?)?\\s*\\)$/;\n  function hsl2rgbn(h, s, l) {\n    const a = s * Math.min(l, 1 - l);\n    const f = function (n) {\n      let k = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : (n + h / 30) % 12;\n      return l - a * Math.max(Math.min(k - 3, 9 - k, 1), -1);\n    };\n    return [f(0), f(8), f(4)];\n  }\n  function hsv2rgbn(h, s, v) {\n    const f = function (n) {\n      let k = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : (n + h / 60) % 6;\n      return v - v * s * Math.max(Math.min(k, 4 - k, 1), 0);\n    };\n    return [f(5), f(3), f(1)];\n  }\n  function hwb2rgbn(h, w, b) {\n    const rgb = hsl2rgbn(h, 1, 0.5);\n    let i;\n    if (w + b > 1) {\n      i = 1 / (w + b);\n      w *= i;\n      b *= i;\n    }\n    for (i = 0; i < 3; i++) {\n      rgb[i] *= 1 - w - b;\n      rgb[i] += w;\n    }\n    return rgb;\n  }\n  function rgb2hsl(v) {\n    const range = 255;\n    const r = v.r / range;\n    const g = v.g / range;\n    const b = v.b / range;\n    const max = Math.max(r, g, b);\n    const min = Math.min(r, g, b);\n    const l = (max + min) / 2;\n    let h, s, d;\n    if (max !== min) {\n      d = max - min;\n      s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\n      h = max === r ? (g - b) / d + (g < b ? 6 : 0) : max === g ? (b - r) / d + 2 : (r - g) / d + 4;\n      h = h * 60 + 0.5;\n    }\n    return [h | 0, s || 0, l];\n  }\n  function calln(f, a, b, c) {\n    return (Array.isArray(a) ? f(a[0], a[1], a[2]) : f(a, b, c)).map(n2b);\n  }\n  function hsl2rgb(h, s, l) {\n    return calln(hsl2rgbn, h, s, l);\n  }\n  function hwb2rgb(h, w, b) {\n    return calln(hwb2rgbn, h, w, b);\n  }\n  function hsv2rgb(h, s, v) {\n    return calln(hsv2rgbn, h, s, v);\n  }\n  function hue(h) {\n    return (h % 360 + 360) % 360;\n  }\n  function hueParse(str) {\n    const m = HUE_RE.exec(str);\n    let a = 255;\n    let v;\n    if (!m) {\n      return;\n    }\n    if (m[5] !== v) {\n      a = m[6] ? p2b(+m[5]) : n2b(+m[5]);\n    }\n    const h = hue(+m[2]);\n    const p1 = +m[3] / 100;\n    const p2 = +m[4] / 100;\n    if (m[1] === 'hwb') {\n      v = hwb2rgb(h, p1, p2);\n    } else if (m[1] === 'hsv') {\n      v = hsv2rgb(h, p1, p2);\n    } else {\n      v = hsl2rgb(h, p1, p2);\n    }\n    return {\n      r: v[0],\n      g: v[1],\n      b: v[2],\n      a: a\n    };\n  }\n  function rotate(v, deg) {\n    var h = rgb2hsl(v);\n    h[0] = hue(h[0] + deg);\n    h = hsl2rgb(h);\n    v.r = h[0];\n    v.g = h[1];\n    v.b = h[2];\n  }\n  function hslString(v) {\n    if (!v) {\n      return;\n    }\n    const a = rgb2hsl(v);\n    const h = a[0];\n    const s = n2p(a[1]);\n    const l = n2p(a[2]);\n    return v.a < 255 ? `hsla(${h}, ${s}%, ${l}%, ${b2n(v.a)})` : `hsl(${h}, ${s}%, ${l}%)`;\n  }\n  const map$1 = {\n    x: 'dark',\n    Z: 'light',\n    Y: 're',\n    X: 'blu',\n    W: 'gr',\n    V: 'medium',\n    U: 'slate',\n    A: 'ee',\n    T: 'ol',\n    S: 'or',\n    B: 'ra',\n    C: 'lateg',\n    D: 'ights',\n    R: 'in',\n    Q: 'turquois',\n    E: 'hi',\n    P: 'ro',\n    O: 'al',\n    N: 'le',\n    M: 'de',\n    L: 'yello',\n    F: 'en',\n    K: 'ch',\n    G: 'arks',\n    H: 'ea',\n    I: 'ightg',\n    J: 'wh'\n  };\n  const names = {\n    OiceXe: 'f0f8ff',\n    antiquewEte: 'faebd7',\n    aqua: 'ffff',\n    aquamarRe: '7fffd4',\n    azuY: 'f0ffff',\n    beige: 'f5f5dc',\n    bisque: 'ffe4c4',\n    black: '0',\n    blanKedOmond: 'ffebcd',\n    Xe: 'ff',\n    XeviTet: '8a2be2',\n    bPwn: 'a52a2a',\n    burlywood: 'deb887',\n    caMtXe: '5f9ea0',\n    KartYuse: '7fff00',\n    KocTate: 'd2691e',\n    cSO: 'ff7f50',\n    cSnflowerXe: '6495ed',\n    cSnsilk: 'fff8dc',\n    crimson: 'dc143c',\n    cyan: 'ffff',\n    xXe: '8b',\n    xcyan: '8b8b',\n    xgTMnPd: 'b8860b',\n    xWay: 'a9a9a9',\n    xgYF: '6400',\n    xgYy: 'a9a9a9',\n    xkhaki: 'bdb76b',\n    xmagFta: '8b008b',\n    xTivegYF: '556b2f',\n    xSange: 'ff8c00',\n    xScEd: '9932cc',\n    xYd: '8b0000',\n    xsOmon: 'e9967a',\n    xsHgYF: '8fbc8f',\n    xUXe: '483d8b',\n    xUWay: '2f4f4f',\n    xUgYy: '2f4f4f',\n    xQe: 'ced1',\n    xviTet: '9400d3',\n    dAppRk: 'ff1493',\n    dApskyXe: 'bfff',\n    dimWay: '696969',\n    dimgYy: '696969',\n    dodgerXe: '1e90ff',\n    fiYbrick: 'b22222',\n    flSOwEte: 'fffaf0',\n    foYstWAn: '228b22',\n    fuKsia: 'ff00ff',\n    gaRsbSo: 'dcdcdc',\n    ghostwEte: 'f8f8ff',\n    gTd: 'ffd700',\n    gTMnPd: 'daa520',\n    Way: '808080',\n    gYF: '8000',\n    gYFLw: 'adff2f',\n    gYy: '808080',\n    honeyMw: 'f0fff0',\n    hotpRk: 'ff69b4',\n    RdianYd: 'cd5c5c',\n    Rdigo: '4b0082',\n    ivSy: 'fffff0',\n    khaki: 'f0e68c',\n    lavFMr: 'e6e6fa',\n    lavFMrXsh: 'fff0f5',\n    lawngYF: '7cfc00',\n    NmoncEffon: 'fffacd',\n    ZXe: 'add8e6',\n    ZcSO: 'f08080',\n    Zcyan: 'e0ffff',\n    ZgTMnPdLw: 'fafad2',\n    ZWay: 'd3d3d3',\n    ZgYF: '90ee90',\n    ZgYy: 'd3d3d3',\n    ZpRk: 'ffb6c1',\n    ZsOmon: 'ffa07a',\n    ZsHgYF: '20b2aa',\n    ZskyXe: '87cefa',\n    ZUWay: '778899',\n    ZUgYy: '778899',\n    ZstAlXe: 'b0c4de',\n    ZLw: 'ffffe0',\n    lime: 'ff00',\n    limegYF: '32cd32',\n    lRF: 'faf0e6',\n    magFta: 'ff00ff',\n    maPon: '800000',\n    VaquamarRe: '66cdaa',\n    VXe: 'cd',\n    VScEd: 'ba55d3',\n    VpurpN: '9370db',\n    VsHgYF: '3cb371',\n    VUXe: '7b68ee',\n    VsprRggYF: 'fa9a',\n    VQe: '48d1cc',\n    VviTetYd: 'c71585',\n    midnightXe: '191970',\n    mRtcYam: 'f5fffa',\n    mistyPse: 'ffe4e1',\n    moccasR: 'ffe4b5',\n    navajowEte: 'ffdead',\n    navy: '80',\n    Tdlace: 'fdf5e6',\n    Tive: '808000',\n    TivedBb: '6b8e23',\n    Sange: 'ffa500',\n    SangeYd: 'ff4500',\n    ScEd: 'da70d6',\n    pOegTMnPd: 'eee8aa',\n    pOegYF: '98fb98',\n    pOeQe: 'afeeee',\n    pOeviTetYd: 'db7093',\n    papayawEp: 'ffefd5',\n    pHKpuff: 'ffdab9',\n    peru: 'cd853f',\n    pRk: 'ffc0cb',\n    plum: 'dda0dd',\n    powMrXe: 'b0e0e6',\n    purpN: '800080',\n    YbeccapurpN: '663399',\n    Yd: 'ff0000',\n    Psybrown: 'bc8f8f',\n    PyOXe: '4169e1',\n    saddNbPwn: '8b4513',\n    sOmon: 'fa8072',\n    sandybPwn: 'f4a460',\n    sHgYF: '2e8b57',\n    sHshell: 'fff5ee',\n    siFna: 'a0522d',\n    silver: 'c0c0c0',\n    skyXe: '87ceeb',\n    UXe: '6a5acd',\n    UWay: '708090',\n    UgYy: '708090',\n    snow: 'fffafa',\n    sprRggYF: 'ff7f',\n    stAlXe: '4682b4',\n    tan: 'd2b48c',\n    teO: '8080',\n    tEstN: 'd8bfd8',\n    tomato: 'ff6347',\n    Qe: '40e0d0',\n    viTet: 'ee82ee',\n    JHt: 'f5deb3',\n    wEte: 'ffffff',\n    wEtesmoke: 'f5f5f5',\n    Lw: 'ffff00',\n    LwgYF: '9acd32'\n  };\n  function unpack() {\n    const unpacked = {};\n    const keys = Object.keys(names);\n    const tkeys = Object.keys(map$1);\n    let i, j, k, ok, nk;\n    for (i = 0; i < keys.length; i++) {\n      ok = nk = keys[i];\n      for (j = 0; j < tkeys.length; j++) {\n        k = tkeys[j];\n        nk = nk.replace(k, map$1[k]);\n      }\n      k = parseInt(names[ok], 16);\n      unpacked[nk] = [k >> 16 & 0xFF, k >> 8 & 0xFF, k & 0xFF];\n    }\n    return unpacked;\n  }\n  let names$1;\n  function nameParse(str) {\n    if (!names$1) {\n      names$1 = unpack();\n      names$1.transparent = [0, 0, 0, 0];\n    }\n    const a = names$1[str.toLowerCase()];\n    return a && {\n      r: a[0],\n      g: a[1],\n      b: a[2],\n      a: a.length === 4 ? a[3] : 255\n    };\n  }\n  function modHSL(v, i, ratio) {\n    if (v) {\n      let tmp = rgb2hsl(v);\n      tmp[i] = Math.max(0, Math.min(tmp[i] + tmp[i] * ratio, i === 0 ? 360 : 1));\n      tmp = hsl2rgb(tmp);\n      v.r = tmp[0];\n      v.g = tmp[1];\n      v.b = tmp[2];\n    }\n  }\n  function clone$1(v, proto) {\n    return v ? Object.assign(proto || {}, v) : v;\n  }\n  function fromObject(input) {\n    var v = {\n      r: 0,\n      g: 0,\n      b: 0,\n      a: 255\n    };\n    if (Array.isArray(input)) {\n      if (input.length >= 3) {\n        v = {\n          r: input[0],\n          g: input[1],\n          b: input[2],\n          a: 255\n        };\n        if (input.length > 3) {\n          v.a = n2b(input[3]);\n        }\n      }\n    } else {\n      v = clone$1(input, {\n        r: 0,\n        g: 0,\n        b: 0,\n        a: 1\n      });\n      v.a = n2b(v.a);\n    }\n    return v;\n  }\n  function functionParse(str) {\n    if (str.charAt(0) === 'r') {\n      return rgbParse(str);\n    }\n    return hueParse(str);\n  }\n  class Color {\n    constructor(input) {\n      if (input instanceof Color) {\n        return input;\n      }\n      const type = typeof input;\n      let v;\n      if (type === 'object') {\n        v = fromObject(input);\n      } else if (type === 'string') {\n        v = hexParse(input) || nameParse(input) || functionParse(input);\n      }\n      this._rgb = v;\n      this._valid = !!v;\n    }\n    get valid() {\n      return this._valid;\n    }\n    get rgb() {\n      var v = clone$1(this._rgb);\n      if (v) {\n        v.a = b2n(v.a);\n      }\n      return v;\n    }\n    set rgb(obj) {\n      this._rgb = fromObject(obj);\n    }\n    rgbString() {\n      return this._valid ? rgbString(this._rgb) : this._rgb;\n    }\n    hexString() {\n      return this._valid ? hexString(this._rgb) : this._rgb;\n    }\n    hslString() {\n      return this._valid ? hslString(this._rgb) : this._rgb;\n    }\n    mix(color, weight) {\n      const me = this;\n      if (color) {\n        const c1 = me.rgb;\n        const c2 = color.rgb;\n        let w2;\n        const p = weight === w2 ? 0.5 : weight;\n        const w = 2 * p - 1;\n        const a = c1.a - c2.a;\n        const w1 = ((w * a === -1 ? w : (w + a) / (1 + w * a)) + 1) / 2.0;\n        w2 = 1 - w1;\n        c1.r = 0xFF & w1 * c1.r + w2 * c2.r + 0.5;\n        c1.g = 0xFF & w1 * c1.g + w2 * c2.g + 0.5;\n        c1.b = 0xFF & w1 * c1.b + w2 * c2.b + 0.5;\n        c1.a = p * c1.a + (1 - p) * c2.a;\n        me.rgb = c1;\n      }\n      return me;\n    }\n    clone() {\n      return new Color(this.rgb);\n    }\n    alpha(a) {\n      this._rgb.a = n2b(a);\n      return this;\n    }\n    clearer(ratio) {\n      const rgb = this._rgb;\n      rgb.a *= 1 - ratio;\n      return this;\n    }\n    greyscale() {\n      const rgb = this._rgb;\n      const val = round(rgb.r * 0.3 + rgb.g * 0.59 + rgb.b * 0.11);\n      rgb.r = rgb.g = rgb.b = val;\n      return this;\n    }\n    opaquer(ratio) {\n      const rgb = this._rgb;\n      rgb.a *= 1 + ratio;\n      return this;\n    }\n    negate() {\n      const v = this._rgb;\n      v.r = 255 - v.r;\n      v.g = 255 - v.g;\n      v.b = 255 - v.b;\n      return this;\n    }\n    lighten(ratio) {\n      modHSL(this._rgb, 2, ratio);\n      return this;\n    }\n    darken(ratio) {\n      modHSL(this._rgb, 2, -ratio);\n      return this;\n    }\n    saturate(ratio) {\n      modHSL(this._rgb, 1, ratio);\n      return this;\n    }\n    desaturate(ratio) {\n      modHSL(this._rgb, 1, -ratio);\n      return this;\n    }\n    rotate(deg) {\n      rotate(this._rgb, deg);\n      return this;\n    }\n  }\n  function index_esm(input) {\n    return new Color(input);\n  }\n  const isPatternOrGradient = value => value instanceof CanvasGradient || value instanceof CanvasPattern;\n  function color(value) {\n    return isPatternOrGradient(value) ? value : index_esm(value);\n  }\n  function getHoverColor(value) {\n    return isPatternOrGradient(value) ? value : index_esm(value).saturate(0.5).darken(0.1).hexString();\n  }\n  function noop() {}\n  const uid = function () {\n    let id = 0;\n    return function () {\n      return id++;\n    };\n  }();\n  function isNullOrUndef(value) {\n    return value === null || typeof value === 'undefined';\n  }\n  function isArray(value) {\n    if (Array.isArray && Array.isArray(value)) {\n      return true;\n    }\n    const type = Object.prototype.toString.call(value);\n    if (type.substr(0, 7) === '[object' && type.substr(-6) === 'Array]') {\n      return true;\n    }\n    return false;\n  }\n  function isObject(value) {\n    return value !== null && Object.prototype.toString.call(value) === '[object Object]';\n  }\n  const isNumberFinite = value => (typeof value === 'number' || value instanceof Number) && isFinite(+value);\n  function finiteOrDefault(value, defaultValue) {\n    return isNumberFinite(value) ? value : defaultValue;\n  }\n  function valueOrDefault(value, defaultValue) {\n    return typeof value === 'undefined' ? defaultValue : value;\n  }\n  const toPercentage = (value, dimension) => typeof value === 'string' && value.endsWith('%') ? parseFloat(value) / 100 : value / dimension;\n  const toDimension = (value, dimension) => typeof value === 'string' && value.endsWith('%') ? parseFloat(value) / 100 * dimension : +value;\n  function callback(fn, args, thisArg) {\n    if (fn && typeof fn.call === 'function') {\n      return fn.apply(thisArg, args);\n    }\n  }\n  function each(loopable, fn, thisArg, reverse) {\n    let i, len, keys;\n    if (isArray(loopable)) {\n      len = loopable.length;\n      if (reverse) {\n        for (i = len - 1; i >= 0; i--) {\n          fn.call(thisArg, loopable[i], i);\n        }\n      } else {\n        for (i = 0; i < len; i++) {\n          fn.call(thisArg, loopable[i], i);\n        }\n      }\n    } else if (isObject(loopable)) {\n      keys = Object.keys(loopable);\n      len = keys.length;\n      for (i = 0; i < len; i++) {\n        fn.call(thisArg, loopable[keys[i]], keys[i]);\n      }\n    }\n  }\n  function _elementsEqual(a0, a1) {\n    let i, ilen, v0, v1;\n    if (!a0 || !a1 || a0.length !== a1.length) {\n      return false;\n    }\n    for (i = 0, ilen = a0.length; i < ilen; ++i) {\n      v0 = a0[i];\n      v1 = a1[i];\n      if (v0.datasetIndex !== v1.datasetIndex || v0.index !== v1.index) {\n        return false;\n      }\n    }\n    return true;\n  }\n  function clone(source) {\n    if (isArray(source)) {\n      return source.map(clone);\n    }\n    if (isObject(source)) {\n      const target = Object.create(null);\n      const keys = Object.keys(source);\n      const klen = keys.length;\n      let k = 0;\n      for (; k < klen; ++k) {\n        target[keys[k]] = clone(source[keys[k]]);\n      }\n      return target;\n    }\n    return source;\n  }\n  function isValidKey(key) {\n    return ['__proto__', 'prototype', 'constructor'].indexOf(key) === -1;\n  }\n  function _merger(key, target, source, options) {\n    if (!isValidKey(key)) {\n      return;\n    }\n    const tval = target[key];\n    const sval = source[key];\n    if (isObject(tval) && isObject(sval)) {\n      merge(tval, sval, options);\n    } else {\n      target[key] = clone(sval);\n    }\n  }\n  function merge(target, source, options) {\n    const sources = isArray(source) ? source : [source];\n    const ilen = sources.length;\n    if (!isObject(target)) {\n      return target;\n    }\n    options = options || {};\n    const merger = options.merger || _merger;\n    for (let i = 0; i < ilen; ++i) {\n      source = sources[i];\n      if (!isObject(source)) {\n        continue;\n      }\n      const keys = Object.keys(source);\n      for (let k = 0, klen = keys.length; k < klen; ++k) {\n        merger(keys[k], target, source, options);\n      }\n    }\n    return target;\n  }\n  function mergeIf(target, source) {\n    return merge(target, source, {\n      merger: _mergerIf\n    });\n  }\n  function _mergerIf(key, target, source) {\n    if (!isValidKey(key)) {\n      return;\n    }\n    const tval = target[key];\n    const sval = source[key];\n    if (isObject(tval) && isObject(sval)) {\n      mergeIf(tval, sval);\n    } else if (!Object.prototype.hasOwnProperty.call(target, key)) {\n      target[key] = clone(sval);\n    }\n  }\n  function _deprecated(scope, value, previous, current) {\n    if (value !== undefined) {\n      console.warn(scope + ': \"' + previous + '\" is deprecated. Please use \"' + current + '\" instead');\n    }\n  }\n  const emptyString = '';\n  const dot = '.';\n  function indexOfDotOrLength(key, start) {\n    const idx = key.indexOf(dot, start);\n    return idx === -1 ? key.length : idx;\n  }\n  function resolveObjectKey(obj, key) {\n    if (key === emptyString) {\n      return obj;\n    }\n    let pos = 0;\n    let idx = indexOfDotOrLength(key, pos);\n    while (obj && idx > pos) {\n      obj = obj[key.substr(pos, idx - pos)];\n      pos = idx + 1;\n      idx = indexOfDotOrLength(key, pos);\n    }\n    return obj;\n  }\n  function _capitalize(str) {\n    return str.charAt(0).toUpperCase() + str.slice(1);\n  }\n  const defined = value => typeof value !== 'undefined';\n  const isFunction = value => typeof value === 'function';\n  const setsEqual = (a, b) => {\n    if (a.size !== b.size) {\n      return false;\n    }\n    for (const item of a) {\n      if (!b.has(item)) {\n        return false;\n      }\n    }\n    return true;\n  };\n  const overrides = Object.create(null);\n  const descriptors = Object.create(null);\n  function getScope$1(node, key) {\n    if (!key) {\n      return node;\n    }\n    const keys = key.split('.');\n    for (let i = 0, n = keys.length; i < n; ++i) {\n      const k = keys[i];\n      node = node[k] || (node[k] = Object.create(null));\n    }\n    return node;\n  }\n  function set(root, scope, values) {\n    if (typeof scope === 'string') {\n      return merge(getScope$1(root, scope), values);\n    }\n    return merge(getScope$1(root, ''), scope);\n  }\n  class Defaults {\n    constructor(_descriptors) {\n      this.animation = undefined;\n      this.backgroundColor = 'rgba(0,0,0,0.1)';\n      this.borderColor = 'rgba(0,0,0,0.1)';\n      this.color = '#666';\n      this.datasets = {};\n      this.devicePixelRatio = context => context.chart.platform.getDevicePixelRatio();\n      this.elements = {};\n      this.events = ['mousemove', 'mouseout', 'click', 'touchstart', 'touchmove'];\n      this.font = {\n        family: \"'Helvetica Neue', 'Helvetica', 'Arial', sans-serif\",\n        size: 12,\n        style: 'normal',\n        lineHeight: 1.2,\n        weight: null\n      };\n      this.hover = {};\n      this.hoverBackgroundColor = (ctx, options) => getHoverColor(options.backgroundColor);\n      this.hoverBorderColor = (ctx, options) => getHoverColor(options.borderColor);\n      this.hoverColor = (ctx, options) => getHoverColor(options.color);\n      this.indexAxis = 'x';\n      this.interaction = {\n        mode: 'nearest',\n        intersect: true\n      };\n      this.maintainAspectRatio = true;\n      this.onHover = null;\n      this.onClick = null;\n      this.parsing = true;\n      this.plugins = {};\n      this.responsive = true;\n      this.scale = undefined;\n      this.scales = {};\n      this.showLine = true;\n      this.describe(_descriptors);\n    }\n    set(scope, values) {\n      return set(this, scope, values);\n    }\n    get(scope) {\n      return getScope$1(this, scope);\n    }\n    describe(scope, values) {\n      return set(descriptors, scope, values);\n    }\n    override(scope, values) {\n      return set(overrides, scope, values);\n    }\n    route(scope, name, targetScope, targetName) {\n      const scopeObject = getScope$1(this, scope);\n      const targetScopeObject = getScope$1(this, targetScope);\n      const privateName = '_' + name;\n      Object.defineProperties(scopeObject, {\n        [privateName]: {\n          value: scopeObject[name],\n          writable: true\n        },\n        [name]: {\n          enumerable: true,\n          get() {\n            const local = this[privateName];\n            const target = targetScopeObject[targetName];\n            if (isObject(local)) {\n              return Object.assign({}, target, local);\n            }\n            return valueOrDefault(local, target);\n          },\n          set(value) {\n            this[privateName] = value;\n          }\n        }\n      });\n    }\n  }\n  var defaults = new Defaults({\n    _scriptable: name => !name.startsWith('on'),\n    _indexable: name => name !== 'events',\n    hover: {\n      _fallback: 'interaction'\n    },\n    interaction: {\n      _scriptable: false,\n      _indexable: false\n    }\n  });\n  const PI = Math.PI;\n  const TAU = 2 * PI;\n  const PITAU = TAU + PI;\n  const INFINITY = Number.POSITIVE_INFINITY;\n  const RAD_PER_DEG = PI / 180;\n  const HALF_PI = PI / 2;\n  const QUARTER_PI = PI / 4;\n  const TWO_THIRDS_PI = PI * 2 / 3;\n  const log10 = Math.log10;\n  const sign = Math.sign;\n  function niceNum(range) {\n    const niceRange = Math.pow(10, Math.floor(log10(range)));\n    const fraction = range / niceRange;\n    const niceFraction = fraction <= 1 ? 1 : fraction <= 2 ? 2 : fraction <= 5 ? 5 : 10;\n    return niceFraction * niceRange;\n  }\n  function _factorize(value) {\n    const result = [];\n    const sqrt = Math.sqrt(value);\n    let i;\n    for (i = 1; i < sqrt; i++) {\n      if (value % i === 0) {\n        result.push(i);\n        result.push(value / i);\n      }\n    }\n    if (sqrt === (sqrt | 0)) {\n      result.push(sqrt);\n    }\n    result.sort((a, b) => a - b).pop();\n    return result;\n  }\n  function isNumber(n) {\n    return !isNaN(parseFloat(n)) && isFinite(n);\n  }\n  function almostEquals(x, y, epsilon) {\n    return Math.abs(x - y) < epsilon;\n  }\n  function almostWhole(x, epsilon) {\n    const rounded = Math.round(x);\n    return rounded - epsilon <= x && rounded + epsilon >= x;\n  }\n  function _setMinAndMaxByKey(array, target, property) {\n    let i, ilen, value;\n    for (i = 0, ilen = array.length; i < ilen; i++) {\n      value = array[i][property];\n      if (!isNaN(value)) {\n        target.min = Math.min(target.min, value);\n        target.max = Math.max(target.max, value);\n      }\n    }\n  }\n  function toRadians(degrees) {\n    return degrees * (PI / 180);\n  }\n  function toDegrees(radians) {\n    return radians * (180 / PI);\n  }\n  function _decimalPlaces(x) {\n    if (!isNumberFinite(x)) {\n      return;\n    }\n    let e = 1;\n    let p = 0;\n    while (Math.round(x * e) / e !== x) {\n      e *= 10;\n      p++;\n    }\n    return p;\n  }\n  function getAngleFromPoint(centrePoint, anglePoint) {\n    const distanceFromXCenter = anglePoint.x - centrePoint.x;\n    const distanceFromYCenter = anglePoint.y - centrePoint.y;\n    const radialDistanceFromCenter = Math.sqrt(distanceFromXCenter * distanceFromXCenter + distanceFromYCenter * distanceFromYCenter);\n    let angle = Math.atan2(distanceFromYCenter, distanceFromXCenter);\n    if (angle < -0.5 * PI) {\n      angle += TAU;\n    }\n    return {\n      angle,\n      distance: radialDistanceFromCenter\n    };\n  }\n  function distanceBetweenPoints(pt1, pt2) {\n    return Math.sqrt(Math.pow(pt2.x - pt1.x, 2) + Math.pow(pt2.y - pt1.y, 2));\n  }\n  function _angleDiff(a, b) {\n    return (a - b + PITAU) % TAU - PI;\n  }\n  function _normalizeAngle(a) {\n    return (a % TAU + TAU) % TAU;\n  }\n  function _angleBetween(angle, start, end, sameAngleIsFullCircle) {\n    const a = _normalizeAngle(angle);\n    const s = _normalizeAngle(start);\n    const e = _normalizeAngle(end);\n    const angleToStart = _normalizeAngle(s - a);\n    const angleToEnd = _normalizeAngle(e - a);\n    const startToAngle = _normalizeAngle(a - s);\n    const endToAngle = _normalizeAngle(a - e);\n    return a === s || a === e || sameAngleIsFullCircle && s === e || angleToStart > angleToEnd && startToAngle < endToAngle;\n  }\n  function _limitValue(value, min, max) {\n    return Math.max(min, Math.min(max, value));\n  }\n  function _int16Range(value) {\n    return _limitValue(value, -32768, 32767);\n  }\n  function toFontString(font) {\n    if (!font || isNullOrUndef(font.size) || isNullOrUndef(font.family)) {\n      return null;\n    }\n    return (font.style ? font.style + ' ' : '') + (font.weight ? font.weight + ' ' : '') + font.size + 'px ' + font.family;\n  }\n  function _measureText(ctx, data, gc, longest, string) {\n    let textWidth = data[string];\n    if (!textWidth) {\n      textWidth = data[string] = ctx.measureText(string).width;\n      gc.push(string);\n    }\n    if (textWidth > longest) {\n      longest = textWidth;\n    }\n    return longest;\n  }\n  function _longestText(ctx, font, arrayOfThings, cache) {\n    cache = cache || {};\n    let data = cache.data = cache.data || {};\n    let gc = cache.garbageCollect = cache.garbageCollect || [];\n    if (cache.font !== font) {\n      data = cache.data = {};\n      gc = cache.garbageCollect = [];\n      cache.font = font;\n    }\n    ctx.save();\n    ctx.font = font;\n    let longest = 0;\n    const ilen = arrayOfThings.length;\n    let i, j, jlen, thing, nestedThing;\n    for (i = 0; i < ilen; i++) {\n      thing = arrayOfThings[i];\n      if (thing !== undefined && thing !== null && isArray(thing) !== true) {\n        longest = _measureText(ctx, data, gc, longest, thing);\n      } else if (isArray(thing)) {\n        for (j = 0, jlen = thing.length; j < jlen; j++) {\n          nestedThing = thing[j];\n          if (nestedThing !== undefined && nestedThing !== null && !isArray(nestedThing)) {\n            longest = _measureText(ctx, data, gc, longest, nestedThing);\n          }\n        }\n      }\n    }\n    ctx.restore();\n    const gcLen = gc.length / 2;\n    if (gcLen > arrayOfThings.length) {\n      for (i = 0; i < gcLen; i++) {\n        delete data[gc[i]];\n      }\n      gc.splice(0, gcLen);\n    }\n    return longest;\n  }\n  function _alignPixel(chart, pixel, width) {\n    const devicePixelRatio = chart.currentDevicePixelRatio;\n    const halfWidth = width !== 0 ? Math.max(width / 2, 0.5) : 0;\n    return Math.round((pixel - halfWidth) * devicePixelRatio) / devicePixelRatio + halfWidth;\n  }\n  function clearCanvas(canvas, ctx) {\n    ctx = ctx || canvas.getContext('2d');\n    ctx.save();\n    ctx.resetTransform();\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n    ctx.restore();\n  }\n  function drawPoint(ctx, options, x, y) {\n    let type, xOffset, yOffset, size, cornerRadius;\n    const style = options.pointStyle;\n    const rotation = options.rotation;\n    const radius = options.radius;\n    let rad = (rotation || 0) * RAD_PER_DEG;\n    if (style && typeof style === 'object') {\n      type = style.toString();\n      if (type === '[object HTMLImageElement]' || type === '[object HTMLCanvasElement]') {\n        ctx.save();\n        ctx.translate(x, y);\n        ctx.rotate(rad);\n        ctx.drawImage(style, -style.width / 2, -style.height / 2, style.width, style.height);\n        ctx.restore();\n        return;\n      }\n    }\n    if (isNaN(radius) || radius <= 0) {\n      return;\n    }\n    ctx.beginPath();\n    switch (style) {\n      default:\n        ctx.arc(x, y, radius, 0, TAU);\n        ctx.closePath();\n        break;\n      case 'triangle':\n        ctx.moveTo(x + Math.sin(rad) * radius, y - Math.cos(rad) * radius);\n        rad += TWO_THIRDS_PI;\n        ctx.lineTo(x + Math.sin(rad) * radius, y - Math.cos(rad) * radius);\n        rad += TWO_THIRDS_PI;\n        ctx.lineTo(x + Math.sin(rad) * radius, y - Math.cos(rad) * radius);\n        ctx.closePath();\n        break;\n      case 'rectRounded':\n        cornerRadius = radius * 0.516;\n        size = radius - cornerRadius;\n        xOffset = Math.cos(rad + QUARTER_PI) * size;\n        yOffset = Math.sin(rad + QUARTER_PI) * size;\n        ctx.arc(x - xOffset, y - yOffset, cornerRadius, rad - PI, rad - HALF_PI);\n        ctx.arc(x + yOffset, y - xOffset, cornerRadius, rad - HALF_PI, rad);\n        ctx.arc(x + xOffset, y + yOffset, cornerRadius, rad, rad + HALF_PI);\n        ctx.arc(x - yOffset, y + xOffset, cornerRadius, rad + HALF_PI, rad + PI);\n        ctx.closePath();\n        break;\n      case 'rect':\n        if (!rotation) {\n          size = Math.SQRT1_2 * radius;\n          ctx.rect(x - size, y - size, 2 * size, 2 * size);\n          break;\n        }\n        rad += QUARTER_PI;\n      case 'rectRot':\n        xOffset = Math.cos(rad) * radius;\n        yOffset = Math.sin(rad) * radius;\n        ctx.moveTo(x - xOffset, y - yOffset);\n        ctx.lineTo(x + yOffset, y - xOffset);\n        ctx.lineTo(x + xOffset, y + yOffset);\n        ctx.lineTo(x - yOffset, y + xOffset);\n        ctx.closePath();\n        break;\n      case 'crossRot':\n        rad += QUARTER_PI;\n      case 'cross':\n        xOffset = Math.cos(rad) * radius;\n        yOffset = Math.sin(rad) * radius;\n        ctx.moveTo(x - xOffset, y - yOffset);\n        ctx.lineTo(x + xOffset, y + yOffset);\n        ctx.moveTo(x + yOffset, y - xOffset);\n        ctx.lineTo(x - yOffset, y + xOffset);\n        break;\n      case 'star':\n        xOffset = Math.cos(rad) * radius;\n        yOffset = Math.sin(rad) * radius;\n        ctx.moveTo(x - xOffset, y - yOffset);\n        ctx.lineTo(x + xOffset, y + yOffset);\n        ctx.moveTo(x + yOffset, y - xOffset);\n        ctx.lineTo(x - yOffset, y + xOffset);\n        rad += QUARTER_PI;\n        xOffset = Math.cos(rad) * radius;\n        yOffset = Math.sin(rad) * radius;\n        ctx.moveTo(x - xOffset, y - yOffset);\n        ctx.lineTo(x + xOffset, y + yOffset);\n        ctx.moveTo(x + yOffset, y - xOffset);\n        ctx.lineTo(x - yOffset, y + xOffset);\n        break;\n      case 'line':\n        xOffset = Math.cos(rad) * radius;\n        yOffset = Math.sin(rad) * radius;\n        ctx.moveTo(x - xOffset, y - yOffset);\n        ctx.lineTo(x + xOffset, y + yOffset);\n        break;\n      case 'dash':\n        ctx.moveTo(x, y);\n        ctx.lineTo(x + Math.cos(rad) * radius, y + Math.sin(rad) * radius);\n        break;\n    }\n    ctx.fill();\n    if (options.borderWidth > 0) {\n      ctx.stroke();\n    }\n  }\n  function _isPointInArea(point, area, margin) {\n    margin = margin || 0.5;\n    return point && point.x > area.left - margin && point.x < area.right + margin && point.y > area.top - margin && point.y < area.bottom + margin;\n  }\n  function clipArea(ctx, area) {\n    ctx.save();\n    ctx.beginPath();\n    ctx.rect(area.left, area.top, area.right - area.left, area.bottom - area.top);\n    ctx.clip();\n  }\n  function unclipArea(ctx) {\n    ctx.restore();\n  }\n  function _steppedLineTo(ctx, previous, target, flip, mode) {\n    if (!previous) {\n      return ctx.lineTo(target.x, target.y);\n    }\n    if (mode === 'middle') {\n      const midpoint = (previous.x + target.x) / 2.0;\n      ctx.lineTo(midpoint, previous.y);\n      ctx.lineTo(midpoint, target.y);\n    } else if (mode === 'after' !== !!flip) {\n      ctx.lineTo(previous.x, target.y);\n    } else {\n      ctx.lineTo(target.x, previous.y);\n    }\n    ctx.lineTo(target.x, target.y);\n  }\n  function _bezierCurveTo(ctx, previous, target, flip) {\n    if (!previous) {\n      return ctx.lineTo(target.x, target.y);\n    }\n    ctx.bezierCurveTo(flip ? previous.cp1x : previous.cp2x, flip ? previous.cp1y : previous.cp2y, flip ? target.cp2x : target.cp1x, flip ? target.cp2y : target.cp1y, target.x, target.y);\n  }\n  function renderText(ctx, text, x, y, font) {\n    let opts = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : {};\n    const lines = isArray(text) ? text : [text];\n    const stroke = opts.strokeWidth > 0 && opts.strokeColor !== '';\n    let i, line;\n    ctx.save();\n    if (opts.translation) {\n      ctx.translate(opts.translation[0], opts.translation[1]);\n    }\n    if (!isNullOrUndef(opts.rotation)) {\n      ctx.rotate(opts.rotation);\n    }\n    ctx.font = font.string;\n    if (opts.color) {\n      ctx.fillStyle = opts.color;\n    }\n    if (opts.textAlign) {\n      ctx.textAlign = opts.textAlign;\n    }\n    if (opts.textBaseline) {\n      ctx.textBaseline = opts.textBaseline;\n    }\n    for (i = 0; i < lines.length; ++i) {\n      line = lines[i];\n      if (stroke) {\n        if (opts.strokeColor) {\n          ctx.strokeStyle = opts.strokeColor;\n        }\n        if (!isNullOrUndef(opts.strokeWidth)) {\n          ctx.lineWidth = opts.strokeWidth;\n        }\n        ctx.strokeText(line, x, y, opts.maxWidth);\n      }\n      ctx.fillText(line, x, y, opts.maxWidth);\n      if (opts.strikethrough || opts.underline) {\n        const metrics = ctx.measureText(line);\n        const left = x - metrics.actualBoundingBoxLeft;\n        const right = x + metrics.actualBoundingBoxRight;\n        const top = y - metrics.actualBoundingBoxAscent;\n        const bottom = y + metrics.actualBoundingBoxDescent;\n        const yDecoration = opts.strikethrough ? (top + bottom) / 2 : bottom;\n        ctx.strokeStyle = ctx.fillStyle;\n        ctx.beginPath();\n        ctx.lineWidth = opts.decorationWidth || 2;\n        ctx.moveTo(left, yDecoration);\n        ctx.lineTo(right, yDecoration);\n        ctx.stroke();\n      }\n      y += font.lineHeight;\n    }\n    ctx.restore();\n  }\n  function addRoundedRectPath(ctx, rect) {\n    const {\n      x,\n      y,\n      w,\n      h,\n      radius\n    } = rect;\n    ctx.arc(x + radius.topLeft, y + radius.topLeft, radius.topLeft, -HALF_PI, PI, true);\n    ctx.lineTo(x, y + h - radius.bottomLeft);\n    ctx.arc(x + radius.bottomLeft, y + h - radius.bottomLeft, radius.bottomLeft, PI, HALF_PI, true);\n    ctx.lineTo(x + w - radius.bottomRight, y + h);\n    ctx.arc(x + w - radius.bottomRight, y + h - radius.bottomRight, radius.bottomRight, HALF_PI, 0, true);\n    ctx.lineTo(x + w, y + radius.topRight);\n    ctx.arc(x + w - radius.topRight, y + radius.topRight, radius.topRight, 0, -HALF_PI, true);\n    ctx.lineTo(x + radius.topLeft, y);\n  }\n  function _lookup(table, value, cmp) {\n    cmp = cmp || (index => table[index] < value);\n    let hi = table.length - 1;\n    let lo = 0;\n    let mid;\n    while (hi - lo > 1) {\n      mid = lo + hi >> 1;\n      if (cmp(mid)) {\n        lo = mid;\n      } else {\n        hi = mid;\n      }\n    }\n    return {\n      lo,\n      hi\n    };\n  }\n  const _lookupByKey = (table, key, value) => _lookup(table, value, index => table[index][key] < value);\n  const _rlookupByKey = (table, key, value) => _lookup(table, value, index => table[index][key] >= value);\n  function _filterBetween(values, min, max) {\n    let start = 0;\n    let end = values.length;\n    while (start < end && values[start] < min) {\n      start++;\n    }\n    while (end > start && values[end - 1] > max) {\n      end--;\n    }\n    return start > 0 || end < values.length ? values.slice(start, end) : values;\n  }\n  const arrayEvents = ['push', 'pop', 'shift', 'splice', 'unshift'];\n  function listenArrayEvents(array, listener) {\n    if (array._chartjs) {\n      array._chartjs.listeners.push(listener);\n      return;\n    }\n    Object.defineProperty(array, '_chartjs', {\n      configurable: true,\n      enumerable: false,\n      value: {\n        listeners: [listener]\n      }\n    });\n    arrayEvents.forEach(key => {\n      const method = '_onData' + _capitalize(key);\n      const base = array[key];\n      Object.defineProperty(array, key, {\n        configurable: true,\n        enumerable: false,\n        value() {\n          for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n            args[_key2] = arguments[_key2];\n          }\n          const res = base.apply(this, args);\n          array._chartjs.listeners.forEach(object => {\n            if (typeof object[method] === 'function') {\n              object[method](...args);\n            }\n          });\n          return res;\n        }\n      });\n    });\n  }\n  function unlistenArrayEvents(array, listener) {\n    const stub = array._chartjs;\n    if (!stub) {\n      return;\n    }\n    const listeners = stub.listeners;\n    const index = listeners.indexOf(listener);\n    if (index !== -1) {\n      listeners.splice(index, 1);\n    }\n    if (listeners.length > 0) {\n      return;\n    }\n    arrayEvents.forEach(key => {\n      delete array[key];\n    });\n    delete array._chartjs;\n  }\n  function _arrayUnique(items) {\n    const set = new Set();\n    let i, ilen;\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      set.add(items[i]);\n    }\n    if (set.size === ilen) {\n      return items;\n    }\n    const result = [];\n    set.forEach(item => {\n      result.push(item);\n    });\n    return result;\n  }\n  function _getParentNode(domNode) {\n    let parent = domNode.parentNode;\n    if (parent && parent.toString() === '[object ShadowRoot]') {\n      parent = parent.host;\n    }\n    return parent;\n  }\n  function parseMaxStyle(styleValue, node, parentProperty) {\n    let valueInPixels;\n    if (typeof styleValue === 'string') {\n      valueInPixels = parseInt(styleValue, 10);\n      if (styleValue.indexOf('%') !== -1) {\n        valueInPixels = valueInPixels / 100 * node.parentNode[parentProperty];\n      }\n    } else {\n      valueInPixels = styleValue;\n    }\n    return valueInPixels;\n  }\n  const getComputedStyle = element => window.getComputedStyle(element, null);\n  function getStyle(el, property) {\n    return getComputedStyle(el).getPropertyValue(property);\n  }\n  const positions = ['top', 'right', 'bottom', 'left'];\n  function getPositionedStyle(styles, style, suffix) {\n    const result = {};\n    suffix = suffix ? '-' + suffix : '';\n    for (let i = 0; i < 4; i++) {\n      const pos = positions[i];\n      result[pos] = parseFloat(styles[style + '-' + pos + suffix]) || 0;\n    }\n    result.width = result.left + result.right;\n    result.height = result.top + result.bottom;\n    return result;\n  }\n  const useOffsetPos = (x, y, target) => (x > 0 || y > 0) && (!target || !target.shadowRoot);\n  function getCanvasPosition(evt, canvas) {\n    const e = evt.native || evt;\n    const touches = e.touches;\n    const source = touches && touches.length ? touches[0] : e;\n    const {\n      offsetX,\n      offsetY\n    } = source;\n    let box = false;\n    let x, y;\n    if (useOffsetPos(offsetX, offsetY, e.target)) {\n      x = offsetX;\n      y = offsetY;\n    } else {\n      const rect = canvas.getBoundingClientRect();\n      x = source.clientX - rect.left;\n      y = source.clientY - rect.top;\n      box = true;\n    }\n    return {\n      x,\n      y,\n      box\n    };\n  }\n  function getRelativePosition$1(evt, chart) {\n    const {\n      canvas,\n      currentDevicePixelRatio\n    } = chart;\n    const style = getComputedStyle(canvas);\n    const borderBox = style.boxSizing === 'border-box';\n    const paddings = getPositionedStyle(style, 'padding');\n    const borders = getPositionedStyle(style, 'border', 'width');\n    const {\n      x,\n      y,\n      box\n    } = getCanvasPosition(evt, canvas);\n    const xOffset = paddings.left + (box && borders.left);\n    const yOffset = paddings.top + (box && borders.top);\n    let {\n      width,\n      height\n    } = chart;\n    if (borderBox) {\n      width -= paddings.width + borders.width;\n      height -= paddings.height + borders.height;\n    }\n    return {\n      x: Math.round((x - xOffset) / width * canvas.width / currentDevicePixelRatio),\n      y: Math.round((y - yOffset) / height * canvas.height / currentDevicePixelRatio)\n    };\n  }\n  function getContainerSize(canvas, width, height) {\n    let maxWidth, maxHeight;\n    if (width === undefined || height === undefined) {\n      const container = _getParentNode(canvas);\n      if (!container) {\n        width = canvas.clientWidth;\n        height = canvas.clientHeight;\n      } else {\n        const rect = container.getBoundingClientRect();\n        const containerStyle = getComputedStyle(container);\n        const containerBorder = getPositionedStyle(containerStyle, 'border', 'width');\n        const containerPadding = getPositionedStyle(containerStyle, 'padding');\n        width = rect.width - containerPadding.width - containerBorder.width;\n        height = rect.height - containerPadding.height - containerBorder.height;\n        maxWidth = parseMaxStyle(containerStyle.maxWidth, container, 'clientWidth');\n        maxHeight = parseMaxStyle(containerStyle.maxHeight, container, 'clientHeight');\n      }\n    }\n    return {\n      width,\n      height,\n      maxWidth: maxWidth || INFINITY,\n      maxHeight: maxHeight || INFINITY\n    };\n  }\n  const round1 = v => Math.round(v * 10) / 10;\n  function getMaximumSize(canvas, bbWidth, bbHeight, aspectRatio) {\n    const style = getComputedStyle(canvas);\n    const margins = getPositionedStyle(style, 'margin');\n    const maxWidth = parseMaxStyle(style.maxWidth, canvas, 'clientWidth') || INFINITY;\n    const maxHeight = parseMaxStyle(style.maxHeight, canvas, 'clientHeight') || INFINITY;\n    const containerSize = getContainerSize(canvas, bbWidth, bbHeight);\n    let {\n      width,\n      height\n    } = containerSize;\n    if (style.boxSizing === 'content-box') {\n      const borders = getPositionedStyle(style, 'border', 'width');\n      const paddings = getPositionedStyle(style, 'padding');\n      width -= paddings.width + borders.width;\n      height -= paddings.height + borders.height;\n    }\n    width = Math.max(0, width - margins.width);\n    height = Math.max(0, aspectRatio ? Math.floor(width / aspectRatio) : height - margins.height);\n    width = round1(Math.min(width, maxWidth, containerSize.maxWidth));\n    height = round1(Math.min(height, maxHeight, containerSize.maxHeight));\n    if (width && !height) {\n      height = round1(width / 2);\n    }\n    return {\n      width,\n      height\n    };\n  }\n  function retinaScale(chart, forceRatio, forceStyle) {\n    const pixelRatio = forceRatio || 1;\n    const deviceHeight = Math.floor(chart.height * pixelRatio);\n    const deviceWidth = Math.floor(chart.width * pixelRatio);\n    chart.height = deviceHeight / pixelRatio;\n    chart.width = deviceWidth / pixelRatio;\n    const canvas = chart.canvas;\n    if (canvas.style && (forceStyle || !canvas.style.height && !canvas.style.width)) {\n      canvas.style.height = `${chart.height}px`;\n      canvas.style.width = `${chart.width}px`;\n    }\n    if (chart.currentDevicePixelRatio !== pixelRatio || canvas.height !== deviceHeight || canvas.width !== deviceWidth) {\n      chart.currentDevicePixelRatio = pixelRatio;\n      canvas.height = deviceHeight;\n      canvas.width = deviceWidth;\n      chart.ctx.setTransform(pixelRatio, 0, 0, pixelRatio, 0, 0);\n      return true;\n    }\n    return false;\n  }\n  const supportsEventListenerOptions = function () {\n    let passiveSupported = false;\n    try {\n      const options = {\n        get passive() {\n          passiveSupported = true;\n          return false;\n        }\n      };\n      window.addEventListener('test', null, options);\n      window.removeEventListener('test', null, options);\n    } catch (e) {}\n    return passiveSupported;\n  }();\n  function readUsedSize(element, property) {\n    const value = getStyle(element, property);\n    const matches = value && value.match(/^(\\d+)(\\.\\d+)?px$/);\n    return matches ? +matches[1] : undefined;\n  }\n  function getRelativePosition(e, chart) {\n    if ('native' in e) {\n      return {\n        x: e.x,\n        y: e.y\n      };\n    }\n    return getRelativePosition$1(e, chart);\n  }\n  function evaluateAllVisibleItems(chart, handler) {\n    const metasets = chart.getSortedVisibleDatasetMetas();\n    let index, data, element;\n    for (let i = 0, ilen = metasets.length; i < ilen; ++i) {\n      ({\n        index,\n        data\n      } = metasets[i]);\n      for (let j = 0, jlen = data.length; j < jlen; ++j) {\n        element = data[j];\n        if (!element.skip) {\n          handler(element, index, j);\n        }\n      }\n    }\n  }\n  function binarySearch(metaset, axis, value, intersect) {\n    const {\n      controller,\n      data,\n      _sorted\n    } = metaset;\n    const iScale = controller._cachedMeta.iScale;\n    if (iScale && axis === iScale.axis && _sorted && data.length) {\n      const lookupMethod = iScale._reversePixels ? _rlookupByKey : _lookupByKey;\n      if (!intersect) {\n        return lookupMethod(data, axis, value);\n      } else if (controller._sharedOptions) {\n        const el = data[0];\n        const range = typeof el.getRange === 'function' && el.getRange(axis);\n        if (range) {\n          const start = lookupMethod(data, axis, value - range);\n          const end = lookupMethod(data, axis, value + range);\n          return {\n            lo: start.lo,\n            hi: end.hi\n          };\n        }\n      }\n    }\n    return {\n      lo: 0,\n      hi: data.length - 1\n    };\n  }\n  function optimizedEvaluateItems(chart, axis, position, handler, intersect) {\n    const metasets = chart.getSortedVisibleDatasetMetas();\n    const value = position[axis];\n    for (let i = 0, ilen = metasets.length; i < ilen; ++i) {\n      const {\n        index,\n        data\n      } = metasets[i];\n      const {\n        lo,\n        hi\n      } = binarySearch(metasets[i], axis, value, intersect);\n      for (let j = lo; j <= hi; ++j) {\n        const element = data[j];\n        if (!element.skip) {\n          handler(element, index, j);\n        }\n      }\n    }\n  }\n  function getDistanceMetricForAxis(axis) {\n    const useX = axis.indexOf('x') !== -1;\n    const useY = axis.indexOf('y') !== -1;\n    return function (pt1, pt2) {\n      const deltaX = useX ? Math.abs(pt1.x - pt2.x) : 0;\n      const deltaY = useY ? Math.abs(pt1.y - pt2.y) : 0;\n      return Math.sqrt(Math.pow(deltaX, 2) + Math.pow(deltaY, 2));\n    };\n  }\n  function getIntersectItems(chart, position, axis, useFinalPosition) {\n    const items = [];\n    if (!_isPointInArea(position, chart.chartArea, chart._minPadding)) {\n      return items;\n    }\n    const evaluationFunc = function (element, datasetIndex, index) {\n      if (element.inRange(position.x, position.y, useFinalPosition)) {\n        items.push({\n          element,\n          datasetIndex,\n          index\n        });\n      }\n    };\n    optimizedEvaluateItems(chart, axis, position, evaluationFunc, true);\n    return items;\n  }\n  function getNearestItems(chart, position, axis, intersect, useFinalPosition) {\n    const distanceMetric = getDistanceMetricForAxis(axis);\n    let minDistance = Number.POSITIVE_INFINITY;\n    let items = [];\n    if (!_isPointInArea(position, chart.chartArea, chart._minPadding)) {\n      return items;\n    }\n    const evaluationFunc = function (element, datasetIndex, index) {\n      if (intersect && !element.inRange(position.x, position.y, useFinalPosition)) {\n        return;\n      }\n      const center = element.getCenterPoint(useFinalPosition);\n      if (!_isPointInArea(center, chart.chartArea, chart._minPadding)) {\n        return;\n      }\n      const distance = distanceMetric(position, center);\n      if (distance < minDistance) {\n        items = [{\n          element,\n          datasetIndex,\n          index\n        }];\n        minDistance = distance;\n      } else if (distance === minDistance) {\n        items.push({\n          element,\n          datasetIndex,\n          index\n        });\n      }\n    };\n    optimizedEvaluateItems(chart, axis, position, evaluationFunc);\n    return items;\n  }\n  function getAxisItems(chart, e, options, useFinalPosition) {\n    const position = getRelativePosition(e, chart);\n    const items = [];\n    const axis = options.axis;\n    const rangeMethod = axis === 'x' ? 'inXRange' : 'inYRange';\n    let intersectsItem = false;\n    evaluateAllVisibleItems(chart, (element, datasetIndex, index) => {\n      if (element[rangeMethod](position[axis], useFinalPosition)) {\n        items.push({\n          element,\n          datasetIndex,\n          index\n        });\n      }\n      if (element.inRange(position.x, position.y, useFinalPosition)) {\n        intersectsItem = true;\n      }\n    });\n    if (options.intersect && !intersectsItem) {\n      return [];\n    }\n    return items;\n  }\n  var Interaction = {\n    modes: {\n      index(chart, e, options, useFinalPosition) {\n        const position = getRelativePosition(e, chart);\n        const axis = options.axis || 'x';\n        const items = options.intersect ? getIntersectItems(chart, position, axis, useFinalPosition) : getNearestItems(chart, position, axis, false, useFinalPosition);\n        const elements = [];\n        if (!items.length) {\n          return [];\n        }\n        chart.getSortedVisibleDatasetMetas().forEach(meta => {\n          const index = items[0].index;\n          const element = meta.data[index];\n          if (element && !element.skip) {\n            elements.push({\n              element,\n              datasetIndex: meta.index,\n              index\n            });\n          }\n        });\n        return elements;\n      },\n      dataset(chart, e, options, useFinalPosition) {\n        const position = getRelativePosition(e, chart);\n        const axis = options.axis || 'xy';\n        let items = options.intersect ? getIntersectItems(chart, position, axis, useFinalPosition) : getNearestItems(chart, position, axis, false, useFinalPosition);\n        if (items.length > 0) {\n          const datasetIndex = items[0].datasetIndex;\n          const data = chart.getDatasetMeta(datasetIndex).data;\n          items = [];\n          for (let i = 0; i < data.length; ++i) {\n            items.push({\n              element: data[i],\n              datasetIndex,\n              index: i\n            });\n          }\n        }\n        return items;\n      },\n      point(chart, e, options, useFinalPosition) {\n        const position = getRelativePosition(e, chart);\n        const axis = options.axis || 'xy';\n        return getIntersectItems(chart, position, axis, useFinalPosition);\n      },\n      nearest(chart, e, options, useFinalPosition) {\n        const position = getRelativePosition(e, chart);\n        const axis = options.axis || 'xy';\n        return getNearestItems(chart, position, axis, options.intersect, useFinalPosition);\n      },\n      x(chart, e, options, useFinalPosition) {\n        options.axis = 'x';\n        return getAxisItems(chart, e, options, useFinalPosition);\n      },\n      y(chart, e, options, useFinalPosition) {\n        options.axis = 'y';\n        return getAxisItems(chart, e, options, useFinalPosition);\n      }\n    }\n  };\n  const LINE_HEIGHT = new RegExp(/^(normal|(\\d+(?:\\.\\d+)?)(px|em|%)?)$/);\n  const FONT_STYLE = new RegExp(/^(normal|italic|initial|inherit|unset|(oblique( -?[0-9]?[0-9]deg)?))$/);\n  function toLineHeight(value, size) {\n    const matches = ('' + value).match(LINE_HEIGHT);\n    if (!matches || matches[1] === 'normal') {\n      return size * 1.2;\n    }\n    value = +matches[2];\n    switch (matches[3]) {\n      case 'px':\n        return value;\n      case '%':\n        value /= 100;\n        break;\n    }\n    return size * value;\n  }\n  const numberOrZero$1 = v => +v || 0;\n  function _readValueToProps(value, props) {\n    const ret = {};\n    const objProps = isObject(props);\n    const keys = objProps ? Object.keys(props) : props;\n    const read = isObject(value) ? objProps ? prop => valueOrDefault(value[prop], value[props[prop]]) : prop => value[prop] : () => value;\n    for (const prop of keys) {\n      ret[prop] = numberOrZero$1(read(prop));\n    }\n    return ret;\n  }\n  function toTRBL(value) {\n    return _readValueToProps(value, {\n      top: 'y',\n      right: 'x',\n      bottom: 'y',\n      left: 'x'\n    });\n  }\n  function toTRBLCorners(value) {\n    return _readValueToProps(value, ['topLeft', 'topRight', 'bottomLeft', 'bottomRight']);\n  }\n  function toPadding(value) {\n    const obj = toTRBL(value);\n    obj.width = obj.left + obj.right;\n    obj.height = obj.top + obj.bottom;\n    return obj;\n  }\n  function toFont(options, fallback) {\n    options = options || {};\n    fallback = fallback || defaults.font;\n    let size = valueOrDefault(options.size, fallback.size);\n    if (typeof size === 'string') {\n      size = parseInt(size, 10);\n    }\n    let style = valueOrDefault(options.style, fallback.style);\n    if (style && !('' + style).match(FONT_STYLE)) {\n      console.warn('Invalid font style specified: \"' + style + '\"');\n      style = '';\n    }\n    const font = {\n      family: valueOrDefault(options.family, fallback.family),\n      lineHeight: toLineHeight(valueOrDefault(options.lineHeight, fallback.lineHeight), size),\n      size,\n      style,\n      weight: valueOrDefault(options.weight, fallback.weight),\n      string: ''\n    };\n    font.string = toFontString(font);\n    return font;\n  }\n  function resolve(inputs, context, index, info) {\n    let cacheable = true;\n    let i, ilen, value;\n    for (i = 0, ilen = inputs.length; i < ilen; ++i) {\n      value = inputs[i];\n      if (value === undefined) {\n        continue;\n      }\n      if (context !== undefined && typeof value === 'function') {\n        value = value(context);\n        cacheable = false;\n      }\n      if (index !== undefined && isArray(value)) {\n        value = value[index % value.length];\n        cacheable = false;\n      }\n      if (value !== undefined) {\n        if (info && !cacheable) {\n          info.cacheable = false;\n        }\n        return value;\n      }\n    }\n  }\n  function _addGrace(minmax, grace) {\n    const {\n      min,\n      max\n    } = minmax;\n    return {\n      min: min - Math.abs(toDimension(grace, min)),\n      max: max + toDimension(grace, max)\n    };\n  }\n  const STATIC_POSITIONS = ['left', 'top', 'right', 'bottom'];\n  function filterByPosition(array, position) {\n    return array.filter(v => v.pos === position);\n  }\n  function filterDynamicPositionByAxis(array, axis) {\n    return array.filter(v => STATIC_POSITIONS.indexOf(v.pos) === -1 && v.box.axis === axis);\n  }\n  function sortByWeight(array, reverse) {\n    return array.sort((a, b) => {\n      const v0 = reverse ? b : a;\n      const v1 = reverse ? a : b;\n      return v0.weight === v1.weight ? v0.index - v1.index : v0.weight - v1.weight;\n    });\n  }\n  function wrapBoxes(boxes) {\n    const layoutBoxes = [];\n    let i, ilen, box;\n    for (i = 0, ilen = (boxes || []).length; i < ilen; ++i) {\n      box = boxes[i];\n      layoutBoxes.push({\n        index: i,\n        box,\n        pos: box.position,\n        horizontal: box.isHorizontal(),\n        weight: box.weight\n      });\n    }\n    return layoutBoxes;\n  }\n  function setLayoutDims(layouts, params) {\n    let i, ilen, layout;\n    for (i = 0, ilen = layouts.length; i < ilen; ++i) {\n      layout = layouts[i];\n      if (layout.horizontal) {\n        layout.width = layout.box.fullSize && params.availableWidth;\n        layout.height = params.hBoxMaxHeight;\n      } else {\n        layout.width = params.vBoxMaxWidth;\n        layout.height = layout.box.fullSize && params.availableHeight;\n      }\n    }\n  }\n  function buildLayoutBoxes(boxes) {\n    const layoutBoxes = wrapBoxes(boxes);\n    const fullSize = sortByWeight(layoutBoxes.filter(wrap => wrap.box.fullSize), true);\n    const left = sortByWeight(filterByPosition(layoutBoxes, 'left'), true);\n    const right = sortByWeight(filterByPosition(layoutBoxes, 'right'));\n    const top = sortByWeight(filterByPosition(layoutBoxes, 'top'), true);\n    const bottom = sortByWeight(filterByPosition(layoutBoxes, 'bottom'));\n    const centerHorizontal = filterDynamicPositionByAxis(layoutBoxes, 'x');\n    const centerVertical = filterDynamicPositionByAxis(layoutBoxes, 'y');\n    return {\n      fullSize,\n      leftAndTop: left.concat(top),\n      rightAndBottom: right.concat(centerVertical).concat(bottom).concat(centerHorizontal),\n      chartArea: filterByPosition(layoutBoxes, 'chartArea'),\n      vertical: left.concat(right).concat(centerVertical),\n      horizontal: top.concat(bottom).concat(centerHorizontal)\n    };\n  }\n  function getCombinedMax(maxPadding, chartArea, a, b) {\n    return Math.max(maxPadding[a], chartArea[a]) + Math.max(maxPadding[b], chartArea[b]);\n  }\n  function updateMaxPadding(maxPadding, boxPadding) {\n    maxPadding.top = Math.max(maxPadding.top, boxPadding.top);\n    maxPadding.left = Math.max(maxPadding.left, boxPadding.left);\n    maxPadding.bottom = Math.max(maxPadding.bottom, boxPadding.bottom);\n    maxPadding.right = Math.max(maxPadding.right, boxPadding.right);\n  }\n  function updateDims(chartArea, params, layout) {\n    const box = layout.box;\n    const maxPadding = chartArea.maxPadding;\n    if (!isObject(layout.pos)) {\n      if (layout.size) {\n        chartArea[layout.pos] -= layout.size;\n      }\n      layout.size = layout.horizontal ? box.height : box.width;\n      chartArea[layout.pos] += layout.size;\n    }\n    if (box.getPadding) {\n      updateMaxPadding(maxPadding, box.getPadding());\n    }\n    const newWidth = Math.max(0, params.outerWidth - getCombinedMax(maxPadding, chartArea, 'left', 'right'));\n    const newHeight = Math.max(0, params.outerHeight - getCombinedMax(maxPadding, chartArea, 'top', 'bottom'));\n    const widthChanged = newWidth !== chartArea.w;\n    const heightChanged = newHeight !== chartArea.h;\n    chartArea.w = newWidth;\n    chartArea.h = newHeight;\n    return layout.horizontal ? {\n      same: widthChanged,\n      other: heightChanged\n    } : {\n      same: heightChanged,\n      other: widthChanged\n    };\n  }\n  function handleMaxPadding(chartArea) {\n    const maxPadding = chartArea.maxPadding;\n    function updatePos(pos) {\n      const change = Math.max(maxPadding[pos] - chartArea[pos], 0);\n      chartArea[pos] += change;\n      return change;\n    }\n    chartArea.y += updatePos('top');\n    chartArea.x += updatePos('left');\n    updatePos('right');\n    updatePos('bottom');\n  }\n  function getMargins(horizontal, chartArea) {\n    const maxPadding = chartArea.maxPadding;\n    function marginForPositions(positions) {\n      const margin = {\n        left: 0,\n        top: 0,\n        right: 0,\n        bottom: 0\n      };\n      positions.forEach(pos => {\n        margin[pos] = Math.max(chartArea[pos], maxPadding[pos]);\n      });\n      return margin;\n    }\n    return horizontal ? marginForPositions(['left', 'right']) : marginForPositions(['top', 'bottom']);\n  }\n  function fitBoxes(boxes, chartArea, params) {\n    const refitBoxes = [];\n    let i, ilen, layout, box, refit, changed;\n    for (i = 0, ilen = boxes.length, refit = 0; i < ilen; ++i) {\n      layout = boxes[i];\n      box = layout.box;\n      box.update(layout.width || chartArea.w, layout.height || chartArea.h, getMargins(layout.horizontal, chartArea));\n      const {\n        same,\n        other\n      } = updateDims(chartArea, params, layout);\n      refit |= same && refitBoxes.length;\n      changed = changed || other;\n      if (!box.fullSize) {\n        refitBoxes.push(layout);\n      }\n    }\n    return refit && fitBoxes(refitBoxes, chartArea, params) || changed;\n  }\n  function placeBoxes(boxes, chartArea, params) {\n    const userPadding = params.padding;\n    let x = chartArea.x;\n    let y = chartArea.y;\n    let i, ilen, layout, box;\n    for (i = 0, ilen = boxes.length; i < ilen; ++i) {\n      layout = boxes[i];\n      box = layout.box;\n      if (layout.horizontal) {\n        box.left = box.fullSize ? userPadding.left : chartArea.left;\n        box.right = box.fullSize ? params.outerWidth - userPadding.right : chartArea.left + chartArea.w;\n        box.top = y;\n        box.bottom = y + box.height;\n        box.width = box.right - box.left;\n        y = box.bottom;\n      } else {\n        box.left = x;\n        box.right = x + box.width;\n        box.top = box.fullSize ? userPadding.top : chartArea.top;\n        box.bottom = box.fullSize ? params.outerHeight - userPadding.right : chartArea.top + chartArea.h;\n        box.height = box.bottom - box.top;\n        x = box.right;\n      }\n    }\n    chartArea.x = x;\n    chartArea.y = y;\n  }\n  defaults.set('layout', {\n    padding: {\n      top: 0,\n      right: 0,\n      bottom: 0,\n      left: 0\n    }\n  });\n  var layouts = {\n    addBox(chart, item) {\n      if (!chart.boxes) {\n        chart.boxes = [];\n      }\n      item.fullSize = item.fullSize || false;\n      item.position = item.position || 'top';\n      item.weight = item.weight || 0;\n      item._layers = item._layers || function () {\n        return [{\n          z: 0,\n          draw(chartArea) {\n            item.draw(chartArea);\n          }\n        }];\n      };\n      chart.boxes.push(item);\n    },\n    removeBox(chart, layoutItem) {\n      const index = chart.boxes ? chart.boxes.indexOf(layoutItem) : -1;\n      if (index !== -1) {\n        chart.boxes.splice(index, 1);\n      }\n    },\n    configure(chart, item, options) {\n      item.fullSize = options.fullSize;\n      item.position = options.position;\n      item.weight = options.weight;\n    },\n    update(chart, width, height, minPadding) {\n      if (!chart) {\n        return;\n      }\n      const padding = toPadding(chart.options.layout.padding);\n      const availableWidth = Math.max(width - padding.width, 0);\n      const availableHeight = Math.max(height - padding.height, 0);\n      const boxes = buildLayoutBoxes(chart.boxes);\n      const verticalBoxes = boxes.vertical;\n      const horizontalBoxes = boxes.horizontal;\n      each(chart.boxes, box => {\n        if (typeof box.beforeLayout === 'function') {\n          box.beforeLayout();\n        }\n      });\n      const visibleVerticalBoxCount = verticalBoxes.reduce((total, wrap) => wrap.box.options && wrap.box.options.display === false ? total : total + 1, 0) || 1;\n      const params = Object.freeze({\n        outerWidth: width,\n        outerHeight: height,\n        padding,\n        availableWidth,\n        availableHeight,\n        vBoxMaxWidth: availableWidth / 2 / visibleVerticalBoxCount,\n        hBoxMaxHeight: availableHeight / 2\n      });\n      const maxPadding = Object.assign({}, padding);\n      updateMaxPadding(maxPadding, toPadding(minPadding));\n      const chartArea = Object.assign({\n        maxPadding,\n        w: availableWidth,\n        h: availableHeight,\n        x: padding.left,\n        y: padding.top\n      }, padding);\n      setLayoutDims(verticalBoxes.concat(horizontalBoxes), params);\n      fitBoxes(boxes.fullSize, chartArea, params);\n      fitBoxes(verticalBoxes, chartArea, params);\n      if (fitBoxes(horizontalBoxes, chartArea, params)) {\n        fitBoxes(verticalBoxes, chartArea, params);\n      }\n      handleMaxPadding(chartArea);\n      placeBoxes(boxes.leftAndTop, chartArea, params);\n      chartArea.x += chartArea.w;\n      chartArea.y += chartArea.h;\n      placeBoxes(boxes.rightAndBottom, chartArea, params);\n      chart.chartArea = {\n        left: chartArea.left,\n        top: chartArea.top,\n        right: chartArea.left + chartArea.w,\n        bottom: chartArea.top + chartArea.h,\n        height: chartArea.h,\n        width: chartArea.w\n      };\n      each(boxes.chartArea, layout => {\n        const box = layout.box;\n        Object.assign(box, chart.chartArea);\n        box.update(chartArea.w, chartArea.h);\n      });\n    }\n  };\n  class BasePlatform {\n    acquireContext(canvas, aspectRatio) {}\n    releaseContext(context) {\n      return false;\n    }\n    addEventListener(chart, type, listener) {}\n    removeEventListener(chart, type, listener) {}\n    getDevicePixelRatio() {\n      return 1;\n    }\n    getMaximumSize(element, width, height, aspectRatio) {\n      width = Math.max(0, width || element.width);\n      height = height || element.height;\n      return {\n        width,\n        height: Math.max(0, aspectRatio ? Math.floor(width / aspectRatio) : height)\n      };\n    }\n    isAttached(canvas) {\n      return true;\n    }\n  }\n  class BasicPlatform extends BasePlatform {\n    acquireContext(item) {\n      return item && item.getContext && item.getContext('2d') || null;\n    }\n  }\n  const EXPANDO_KEY = '$chartjs';\n  const EVENT_TYPES = {\n    touchstart: 'mousedown',\n    touchmove: 'mousemove',\n    touchend: 'mouseup',\n    pointerenter: 'mouseenter',\n    pointerdown: 'mousedown',\n    pointermove: 'mousemove',\n    pointerup: 'mouseup',\n    pointerleave: 'mouseout',\n    pointerout: 'mouseout'\n  };\n  const isNullOrEmpty = value => value === null || value === '';\n  function initCanvas(canvas, aspectRatio) {\n    const style = canvas.style;\n    const renderHeight = canvas.getAttribute('height');\n    const renderWidth = canvas.getAttribute('width');\n    canvas[EXPANDO_KEY] = {\n      initial: {\n        height: renderHeight,\n        width: renderWidth,\n        style: {\n          display: style.display,\n          height: style.height,\n          width: style.width\n        }\n      }\n    };\n    style.display = style.display || 'block';\n    style.boxSizing = style.boxSizing || 'border-box';\n    if (isNullOrEmpty(renderWidth)) {\n      const displayWidth = readUsedSize(canvas, 'width');\n      if (displayWidth !== undefined) {\n        canvas.width = displayWidth;\n      }\n    }\n    if (isNullOrEmpty(renderHeight)) {\n      if (canvas.style.height === '') {\n        canvas.height = canvas.width / (aspectRatio || 2);\n      } else {\n        const displayHeight = readUsedSize(canvas, 'height');\n        if (displayHeight !== undefined) {\n          canvas.height = displayHeight;\n        }\n      }\n    }\n    return canvas;\n  }\n  const eventListenerOptions = supportsEventListenerOptions ? {\n    passive: true\n  } : false;\n  function addListener(node, type, listener) {\n    node.addEventListener(type, listener, eventListenerOptions);\n  }\n  function removeListener(chart, type, listener) {\n    chart.canvas.removeEventListener(type, listener, eventListenerOptions);\n  }\n  function fromNativeEvent(event, chart) {\n    const type = EVENT_TYPES[event.type] || event.type;\n    const {\n      x,\n      y\n    } = getRelativePosition$1(event, chart);\n    return {\n      type,\n      chart,\n      native: event,\n      x: x !== undefined ? x : null,\n      y: y !== undefined ? y : null\n    };\n  }\n  function createAttachObserver(chart, type, listener) {\n    const canvas = chart.canvas;\n    const container = canvas && _getParentNode(canvas);\n    const element = container || canvas;\n    const observer = new MutationObserver(entries => {\n      const parent = _getParentNode(element);\n      entries.forEach(entry => {\n        for (let i = 0; i < entry.addedNodes.length; i++) {\n          const added = entry.addedNodes[i];\n          if (added === element || added === parent) {\n            listener(entry.target);\n          }\n        }\n      });\n    });\n    observer.observe(document, {\n      childList: true,\n      subtree: true\n    });\n    return observer;\n  }\n  function createDetachObserver(chart, type, listener) {\n    const canvas = chart.canvas;\n    const container = canvas && _getParentNode(canvas);\n    if (!container) {\n      return;\n    }\n    const observer = new MutationObserver(entries => {\n      entries.forEach(entry => {\n        for (let i = 0; i < entry.removedNodes.length; i++) {\n          if (entry.removedNodes[i] === canvas) {\n            listener();\n            break;\n          }\n        }\n      });\n    });\n    observer.observe(container, {\n      childList: true\n    });\n    return observer;\n  }\n  const drpListeningCharts = new Map();\n  let oldDevicePixelRatio = 0;\n  function onWindowResize() {\n    const dpr = window.devicePixelRatio;\n    if (dpr === oldDevicePixelRatio) {\n      return;\n    }\n    oldDevicePixelRatio = dpr;\n    drpListeningCharts.forEach((resize, chart) => {\n      if (chart.currentDevicePixelRatio !== dpr) {\n        resize();\n      }\n    });\n  }\n  function listenDevicePixelRatioChanges(chart, resize) {\n    if (!drpListeningCharts.size) {\n      window.addEventListener('resize', onWindowResize);\n    }\n    drpListeningCharts.set(chart, resize);\n  }\n  function unlistenDevicePixelRatioChanges(chart) {\n    drpListeningCharts.delete(chart);\n    if (!drpListeningCharts.size) {\n      window.removeEventListener('resize', onWindowResize);\n    }\n  }\n  function createResizeObserver(chart, type, listener) {\n    const canvas = chart.canvas;\n    const container = canvas && _getParentNode(canvas);\n    if (!container) {\n      return;\n    }\n    const resize = throttled((width, height) => {\n      const w = container.clientWidth;\n      listener(width, height);\n      if (w < container.clientWidth) {\n        listener();\n      }\n    }, window);\n    const observer = new ResizeObserver(entries => {\n      const entry = entries[0];\n      const width = entry.contentRect.width;\n      const height = entry.contentRect.height;\n      if (width === 0 && height === 0) {\n        return;\n      }\n      resize(width, height);\n    });\n    observer.observe(container);\n    listenDevicePixelRatioChanges(chart, resize);\n    return observer;\n  }\n  function releaseObserver(chart, type, observer) {\n    if (observer) {\n      observer.disconnect();\n    }\n    if (type === 'resize') {\n      unlistenDevicePixelRatioChanges(chart);\n    }\n  }\n  function createProxyAndListen(chart, type, listener) {\n    const canvas = chart.canvas;\n    const proxy = throttled(event => {\n      if (chart.ctx !== null) {\n        listener(fromNativeEvent(event, chart));\n      }\n    }, chart, args => {\n      const event = args[0];\n      return [event, event.offsetX, event.offsetY];\n    });\n    addListener(canvas, type, proxy);\n    return proxy;\n  }\n  class DomPlatform extends BasePlatform {\n    acquireContext(canvas, aspectRatio) {\n      const context = canvas && canvas.getContext && canvas.getContext('2d');\n      if (context && context.canvas === canvas) {\n        initCanvas(canvas, aspectRatio);\n        return context;\n      }\n      return null;\n    }\n    releaseContext(context) {\n      const canvas = context.canvas;\n      if (!canvas[EXPANDO_KEY]) {\n        return false;\n      }\n      const initial = canvas[EXPANDO_KEY].initial;\n      ['height', 'width'].forEach(prop => {\n        const value = initial[prop];\n        if (isNullOrUndef(value)) {\n          canvas.removeAttribute(prop);\n        } else {\n          canvas.setAttribute(prop, value);\n        }\n      });\n      const style = initial.style || {};\n      Object.keys(style).forEach(key => {\n        canvas.style[key] = style[key];\n      });\n      canvas.width = canvas.width;\n      delete canvas[EXPANDO_KEY];\n      return true;\n    }\n    addEventListener(chart, type, listener) {\n      this.removeEventListener(chart, type);\n      const proxies = chart.$proxies || (chart.$proxies = {});\n      const handlers = {\n        attach: createAttachObserver,\n        detach: createDetachObserver,\n        resize: createResizeObserver\n      };\n      const handler = handlers[type] || createProxyAndListen;\n      proxies[type] = handler(chart, type, listener);\n    }\n    removeEventListener(chart, type) {\n      const proxies = chart.$proxies || (chart.$proxies = {});\n      const proxy = proxies[type];\n      if (!proxy) {\n        return;\n      }\n      const handlers = {\n        attach: releaseObserver,\n        detach: releaseObserver,\n        resize: releaseObserver\n      };\n      const handler = handlers[type] || removeListener;\n      handler(chart, type, proxy);\n      proxies[type] = undefined;\n    }\n    getDevicePixelRatio() {\n      return window.devicePixelRatio;\n    }\n    getMaximumSize(canvas, width, height, aspectRatio) {\n      return getMaximumSize(canvas, width, height, aspectRatio);\n    }\n    isAttached(canvas) {\n      const container = _getParentNode(canvas);\n      return !!(container && _getParentNode(container));\n    }\n  }\n  var platforms = /*#__PURE__*/Object.freeze({\n    __proto__: null,\n    BasePlatform: BasePlatform,\n    BasicPlatform: BasicPlatform,\n    DomPlatform: DomPlatform\n  });\n  const atEdge = t => t === 0 || t === 1;\n  const elasticIn = (t, s, p) => -(Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * TAU / p));\n  const elasticOut = (t, s, p) => Math.pow(2, -10 * t) * Math.sin((t - s) * TAU / p) + 1;\n  const effects = {\n    linear: t => t,\n    easeInQuad: t => t * t,\n    easeOutQuad: t => -t * (t - 2),\n    easeInOutQuad: t => (t /= 0.5) < 1 ? 0.5 * t * t : -0.5 * (--t * (t - 2) - 1),\n    easeInCubic: t => t * t * t,\n    easeOutCubic: t => (t -= 1) * t * t + 1,\n    easeInOutCubic: t => (t /= 0.5) < 1 ? 0.5 * t * t * t : 0.5 * ((t -= 2) * t * t + 2),\n    easeInQuart: t => t * t * t * t,\n    easeOutQuart: t => -((t -= 1) * t * t * t - 1),\n    easeInOutQuart: t => (t /= 0.5) < 1 ? 0.5 * t * t * t * t : -0.5 * ((t -= 2) * t * t * t - 2),\n    easeInQuint: t => t * t * t * t * t,\n    easeOutQuint: t => (t -= 1) * t * t * t * t + 1,\n    easeInOutQuint: t => (t /= 0.5) < 1 ? 0.5 * t * t * t * t * t : 0.5 * ((t -= 2) * t * t * t * t + 2),\n    easeInSine: t => -Math.cos(t * HALF_PI) + 1,\n    easeOutSine: t => Math.sin(t * HALF_PI),\n    easeInOutSine: t => -0.5 * (Math.cos(PI * t) - 1),\n    easeInExpo: t => t === 0 ? 0 : Math.pow(2, 10 * (t - 1)),\n    easeOutExpo: t => t === 1 ? 1 : -Math.pow(2, -10 * t) + 1,\n    easeInOutExpo: t => atEdge(t) ? t : t < 0.5 ? 0.5 * Math.pow(2, 10 * (t * 2 - 1)) : 0.5 * (-Math.pow(2, -10 * (t * 2 - 1)) + 2),\n    easeInCirc: t => t >= 1 ? t : -(Math.sqrt(1 - t * t) - 1),\n    easeOutCirc: t => Math.sqrt(1 - (t -= 1) * t),\n    easeInOutCirc: t => (t /= 0.5) < 1 ? -0.5 * (Math.sqrt(1 - t * t) - 1) : 0.5 * (Math.sqrt(1 - (t -= 2) * t) + 1),\n    easeInElastic: t => atEdge(t) ? t : elasticIn(t, 0.075, 0.3),\n    easeOutElastic: t => atEdge(t) ? t : elasticOut(t, 0.075, 0.3),\n    easeInOutElastic(t) {\n      const s = 0.1125;\n      const p = 0.45;\n      return atEdge(t) ? t : t < 0.5 ? 0.5 * elasticIn(t * 2, s, p) : 0.5 + 0.5 * elasticOut(t * 2 - 1, s, p);\n    },\n    easeInBack(t) {\n      const s = 1.70158;\n      return t * t * ((s + 1) * t - s);\n    },\n    easeOutBack(t) {\n      const s = 1.70158;\n      return (t -= 1) * t * ((s + 1) * t + s) + 1;\n    },\n    easeInOutBack(t) {\n      let s = 1.70158;\n      if ((t /= 0.5) < 1) {\n        return 0.5 * (t * t * (((s *= 1.525) + 1) * t - s));\n      }\n      return 0.5 * ((t -= 2) * t * (((s *= 1.525) + 1) * t + s) + 2);\n    },\n    easeInBounce: t => 1 - effects.easeOutBounce(1 - t),\n    easeOutBounce(t) {\n      const m = 7.5625;\n      const d = 2.75;\n      if (t < 1 / d) {\n        return m * t * t;\n      }\n      if (t < 2 / d) {\n        return m * (t -= 1.5 / d) * t + 0.75;\n      }\n      if (t < 2.5 / d) {\n        return m * (t -= 2.25 / d) * t + 0.9375;\n      }\n      return m * (t -= 2.625 / d) * t + 0.984375;\n    },\n    easeInOutBounce: t => t < 0.5 ? effects.easeInBounce(t * 2) * 0.5 : effects.easeOutBounce(t * 2 - 1) * 0.5 + 0.5\n  };\n  const transparent = 'transparent';\n  const interpolators = {\n    boolean(from, to, factor) {\n      return factor > 0.5 ? to : from;\n    },\n    color(from, to, factor) {\n      const c0 = color(from || transparent);\n      const c1 = c0.valid && color(to || transparent);\n      return c1 && c1.valid ? c1.mix(c0, factor).hexString() : to;\n    },\n    number(from, to, factor) {\n      return from + (to - from) * factor;\n    }\n  };\n  class Animation {\n    constructor(cfg, target, prop, to) {\n      const currentValue = target[prop];\n      to = resolve([cfg.to, to, currentValue, cfg.from]);\n      const from = resolve([cfg.from, currentValue, to]);\n      this._active = true;\n      this._fn = cfg.fn || interpolators[cfg.type || typeof from];\n      this._easing = effects[cfg.easing] || effects.linear;\n      this._start = Math.floor(Date.now() + (cfg.delay || 0));\n      this._duration = this._total = Math.floor(cfg.duration);\n      this._loop = !!cfg.loop;\n      this._target = target;\n      this._prop = prop;\n      this._from = from;\n      this._to = to;\n      this._promises = undefined;\n    }\n    active() {\n      return this._active;\n    }\n    update(cfg, to, date) {\n      const me = this;\n      if (me._active) {\n        me._notify(false);\n        const currentValue = me._target[me._prop];\n        const elapsed = date - me._start;\n        const remain = me._duration - elapsed;\n        me._start = date;\n        me._duration = Math.floor(Math.max(remain, cfg.duration));\n        me._total += elapsed;\n        me._loop = !!cfg.loop;\n        me._to = resolve([cfg.to, to, currentValue, cfg.from]);\n        me._from = resolve([cfg.from, currentValue, to]);\n      }\n    }\n    cancel() {\n      const me = this;\n      if (me._active) {\n        me.tick(Date.now());\n        me._active = false;\n        me._notify(false);\n      }\n    }\n    tick(date) {\n      const me = this;\n      const elapsed = date - me._start;\n      const duration = me._duration;\n      const prop = me._prop;\n      const from = me._from;\n      const loop = me._loop;\n      const to = me._to;\n      let factor;\n      me._active = from !== to && (loop || elapsed < duration);\n      if (!me._active) {\n        me._target[prop] = to;\n        me._notify(true);\n        return;\n      }\n      if (elapsed < 0) {\n        me._target[prop] = from;\n        return;\n      }\n      factor = elapsed / duration % 2;\n      factor = loop && factor > 1 ? 2 - factor : factor;\n      factor = me._easing(Math.min(1, Math.max(0, factor)));\n      me._target[prop] = me._fn(from, to, factor);\n    }\n    wait() {\n      const promises = this._promises || (this._promises = []);\n      return new Promise((res, rej) => {\n        promises.push({\n          res,\n          rej\n        });\n      });\n    }\n    _notify(resolved) {\n      const method = resolved ? 'res' : 'rej';\n      const promises = this._promises || [];\n      for (let i = 0; i < promises.length; i++) {\n        promises[i][method]();\n      }\n    }\n  }\n  const numbers = ['x', 'y', 'borderWidth', 'radius', 'tension'];\n  const colors = ['color', 'borderColor', 'backgroundColor'];\n  defaults.set('animation', {\n    delay: undefined,\n    duration: 1000,\n    easing: 'easeOutQuart',\n    fn: undefined,\n    from: undefined,\n    loop: undefined,\n    to: undefined,\n    type: undefined\n  });\n  const animationOptions = Object.keys(defaults.animation);\n  defaults.describe('animation', {\n    _fallback: false,\n    _indexable: false,\n    _scriptable: name => name !== 'onProgress' && name !== 'onComplete' && name !== 'fn'\n  });\n  defaults.set('animations', {\n    colors: {\n      type: 'color',\n      properties: colors\n    },\n    numbers: {\n      type: 'number',\n      properties: numbers\n    }\n  });\n  defaults.describe('animations', {\n    _fallback: 'animation'\n  });\n  defaults.set('transitions', {\n    active: {\n      animation: {\n        duration: 400\n      }\n    },\n    resize: {\n      animation: {\n        duration: 0\n      }\n    },\n    show: {\n      animations: {\n        colors: {\n          from: 'transparent'\n        },\n        visible: {\n          type: 'boolean',\n          duration: 0\n        }\n      }\n    },\n    hide: {\n      animations: {\n        colors: {\n          to: 'transparent'\n        },\n        visible: {\n          type: 'boolean',\n          easing: 'linear',\n          fn: v => v | 0\n        }\n      }\n    }\n  });\n  class Animations {\n    constructor(chart, config) {\n      this._chart = chart;\n      this._properties = new Map();\n      this.configure(config);\n    }\n    configure(config) {\n      if (!isObject(config)) {\n        return;\n      }\n      const animatedProps = this._properties;\n      Object.getOwnPropertyNames(config).forEach(key => {\n        const cfg = config[key];\n        if (!isObject(cfg)) {\n          return;\n        }\n        const resolved = {};\n        for (const option of animationOptions) {\n          resolved[option] = cfg[option];\n        }\n        (isArray(cfg.properties) && cfg.properties || [key]).forEach(prop => {\n          if (prop === key || !animatedProps.has(prop)) {\n            animatedProps.set(prop, resolved);\n          }\n        });\n      });\n    }\n    _animateOptions(target, values) {\n      const newOptions = values.options;\n      const options = resolveTargetOptions(target, newOptions);\n      if (!options) {\n        return [];\n      }\n      const animations = this._createAnimations(options, newOptions);\n      if (newOptions.$shared) {\n        awaitAll(target.options.$animations, newOptions).then(() => {\n          target.options = newOptions;\n        }, () => {});\n      }\n      return animations;\n    }\n    _createAnimations(target, values) {\n      const animatedProps = this._properties;\n      const animations = [];\n      const running = target.$animations || (target.$animations = {});\n      const props = Object.keys(values);\n      const date = Date.now();\n      let i;\n      for (i = props.length - 1; i >= 0; --i) {\n        const prop = props[i];\n        if (prop.charAt(0) === '$') {\n          continue;\n        }\n        if (prop === 'options') {\n          animations.push(...this._animateOptions(target, values));\n          continue;\n        }\n        const value = values[prop];\n        let animation = running[prop];\n        const cfg = animatedProps.get(prop);\n        if (animation) {\n          if (cfg && animation.active()) {\n            animation.update(cfg, value, date);\n            continue;\n          } else {\n            animation.cancel();\n          }\n        }\n        if (!cfg || !cfg.duration) {\n          target[prop] = value;\n          continue;\n        }\n        running[prop] = animation = new Animation(cfg, target, prop, value);\n        animations.push(animation);\n      }\n      return animations;\n    }\n    update(target, values) {\n      if (this._properties.size === 0) {\n        Object.assign(target, values);\n        return;\n      }\n      const animations = this._createAnimations(target, values);\n      if (animations.length) {\n        animator.add(this._chart, animations);\n        return true;\n      }\n    }\n  }\n  function awaitAll(animations, properties) {\n    const running = [];\n    const keys = Object.keys(properties);\n    for (let i = 0; i < keys.length; i++) {\n      const anim = animations[keys[i]];\n      if (anim && anim.active()) {\n        running.push(anim.wait());\n      }\n    }\n    return Promise.all(running);\n  }\n  function resolveTargetOptions(target, newOptions) {\n    if (!newOptions) {\n      return;\n    }\n    let options = target.options;\n    if (!options) {\n      target.options = newOptions;\n      return;\n    }\n    if (options.$shared) {\n      target.options = options = Object.assign({}, options, {\n        $shared: false,\n        $animations: {}\n      });\n    }\n    return options;\n  }\n  function scaleClip(scale, allowedOverflow) {\n    const opts = scale && scale.options || {};\n    const reverse = opts.reverse;\n    const min = opts.min === undefined ? allowedOverflow : 0;\n    const max = opts.max === undefined ? allowedOverflow : 0;\n    return {\n      start: reverse ? max : min,\n      end: reverse ? min : max\n    };\n  }\n  function defaultClip(xScale, yScale, allowedOverflow) {\n    if (allowedOverflow === false) {\n      return false;\n    }\n    const x = scaleClip(xScale, allowedOverflow);\n    const y = scaleClip(yScale, allowedOverflow);\n    return {\n      top: y.end,\n      right: x.end,\n      bottom: y.start,\n      left: x.start\n    };\n  }\n  function toClip(value) {\n    let t, r, b, l;\n    if (isObject(value)) {\n      t = value.top;\n      r = value.right;\n      b = value.bottom;\n      l = value.left;\n    } else {\n      t = r = b = l = value;\n    }\n    return {\n      top: t,\n      right: r,\n      bottom: b,\n      left: l\n    };\n  }\n  function getSortedDatasetIndices(chart, filterVisible) {\n    const keys = [];\n    const metasets = chart._getSortedDatasetMetas(filterVisible);\n    let i, ilen;\n    for (i = 0, ilen = metasets.length; i < ilen; ++i) {\n      keys.push(metasets[i].index);\n    }\n    return keys;\n  }\n  function applyStack(stack, value, dsIndex, options) {\n    const keys = stack.keys;\n    const singleMode = options.mode === 'single';\n    let i, ilen, datasetIndex, otherValue;\n    if (value === null) {\n      return;\n    }\n    for (i = 0, ilen = keys.length; i < ilen; ++i) {\n      datasetIndex = +keys[i];\n      if (datasetIndex === dsIndex) {\n        if (options.all) {\n          continue;\n        }\n        break;\n      }\n      otherValue = stack.values[datasetIndex];\n      if (isNumberFinite(otherValue) && (singleMode || value === 0 || sign(value) === sign(otherValue))) {\n        value += otherValue;\n      }\n    }\n    return value;\n  }\n  function convertObjectDataToArray(data) {\n    const keys = Object.keys(data);\n    const adata = new Array(keys.length);\n    let i, ilen, key;\n    for (i = 0, ilen = keys.length; i < ilen; ++i) {\n      key = keys[i];\n      adata[i] = {\n        x: key,\n        y: data[key]\n      };\n    }\n    return adata;\n  }\n  function isStacked(scale, meta) {\n    const stacked = scale && scale.options.stacked;\n    return stacked || stacked === undefined && meta.stack !== undefined;\n  }\n  function getStackKey(indexScale, valueScale, meta) {\n    return `${indexScale.id}.${valueScale.id}.${meta.stack || meta.type}`;\n  }\n  function getUserBounds(scale) {\n    const {\n      min,\n      max,\n      minDefined,\n      maxDefined\n    } = scale.getUserBounds();\n    return {\n      min: minDefined ? min : Number.NEGATIVE_INFINITY,\n      max: maxDefined ? max : Number.POSITIVE_INFINITY\n    };\n  }\n  function getOrCreateStack(stacks, stackKey, indexValue) {\n    const subStack = stacks[stackKey] || (stacks[stackKey] = {});\n    return subStack[indexValue] || (subStack[indexValue] = {});\n  }\n  function getLastIndexInStack(stack, vScale, positive) {\n    for (const meta of vScale.getMatchingVisibleMetas('bar').reverse()) {\n      const value = stack[meta.index];\n      if (positive && value > 0 || !positive && value < 0) {\n        return meta.index;\n      }\n    }\n    return null;\n  }\n  function updateStacks(controller, parsed) {\n    const {\n      chart,\n      _cachedMeta: meta\n    } = controller;\n    const stacks = chart._stacks || (chart._stacks = {});\n    const {\n      iScale,\n      vScale,\n      index: datasetIndex\n    } = meta;\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const key = getStackKey(iScale, vScale, meta);\n    const ilen = parsed.length;\n    let stack;\n    for (let i = 0; i < ilen; ++i) {\n      const item = parsed[i];\n      const {\n        [iAxis]: index,\n        [vAxis]: value\n      } = item;\n      const itemStacks = item._stacks || (item._stacks = {});\n      stack = itemStacks[vAxis] = getOrCreateStack(stacks, key, index);\n      stack[datasetIndex] = value;\n      stack._top = getLastIndexInStack(stack, vScale, true);\n      stack._bottom = getLastIndexInStack(stack, vScale, false);\n    }\n  }\n  function getFirstScaleId(chart, axis) {\n    const scales = chart.scales;\n    return Object.keys(scales).filter(key => scales[key].axis === axis).shift();\n  }\n  function createDatasetContext(parent, index) {\n    return Object.assign(Object.create(parent), {\n      active: false,\n      dataset: undefined,\n      datasetIndex: index,\n      index,\n      mode: 'default',\n      type: 'dataset'\n    });\n  }\n  function createDataContext(parent, index, element) {\n    return Object.assign(Object.create(parent), {\n      active: false,\n      dataIndex: index,\n      parsed: undefined,\n      raw: undefined,\n      element,\n      index,\n      mode: 'default',\n      type: 'data'\n    });\n  }\n  function clearStacks(meta, items) {\n    const axis = meta.vScale && meta.vScale.axis;\n    if (!axis) {\n      return;\n    }\n    items = items || meta._parsed;\n    for (const parsed of items) {\n      const stacks = parsed._stacks;\n      if (!stacks || stacks[axis] === undefined || stacks[axis][meta.index] === undefined) {\n        return;\n      }\n      delete stacks[axis][meta.index];\n    }\n  }\n  const isDirectUpdateMode = mode => mode === 'reset' || mode === 'none';\n  const cloneIfNotShared = (cached, shared) => shared ? cached : Object.assign({}, cached);\n  class DatasetController {\n    constructor(chart, datasetIndex) {\n      this.chart = chart;\n      this._ctx = chart.ctx;\n      this.index = datasetIndex;\n      this._cachedDataOpts = {};\n      this._cachedMeta = this.getMeta();\n      this._type = this._cachedMeta.type;\n      this.options = undefined;\n      this._parsing = false;\n      this._data = undefined;\n      this._objectData = undefined;\n      this._sharedOptions = undefined;\n      this._drawStart = undefined;\n      this._drawCount = undefined;\n      this.enableOptionSharing = false;\n      this.$context = undefined;\n      this._syncList = [];\n      this.initialize();\n    }\n    initialize() {\n      const me = this;\n      const meta = me._cachedMeta;\n      me.configure();\n      me.linkScales();\n      meta._stacked = isStacked(meta.vScale, meta);\n      me.addElements();\n    }\n    updateIndex(datasetIndex) {\n      if (this.index !== datasetIndex) {\n        clearStacks(this._cachedMeta);\n      }\n      this.index = datasetIndex;\n    }\n    linkScales() {\n      const me = this;\n      const chart = me.chart;\n      const meta = me._cachedMeta;\n      const dataset = me.getDataset();\n      const chooseId = (axis, x, y, r) => axis === 'x' ? x : axis === 'r' ? r : y;\n      const xid = meta.xAxisID = valueOrDefault(dataset.xAxisID, getFirstScaleId(chart, 'x'));\n      const yid = meta.yAxisID = valueOrDefault(dataset.yAxisID, getFirstScaleId(chart, 'y'));\n      const rid = meta.rAxisID = valueOrDefault(dataset.rAxisID, getFirstScaleId(chart, 'r'));\n      const indexAxis = meta.indexAxis;\n      const iid = meta.iAxisID = chooseId(indexAxis, xid, yid, rid);\n      const vid = meta.vAxisID = chooseId(indexAxis, yid, xid, rid);\n      meta.xScale = me.getScaleForId(xid);\n      meta.yScale = me.getScaleForId(yid);\n      meta.rScale = me.getScaleForId(rid);\n      meta.iScale = me.getScaleForId(iid);\n      meta.vScale = me.getScaleForId(vid);\n    }\n    getDataset() {\n      return this.chart.data.datasets[this.index];\n    }\n    getMeta() {\n      return this.chart.getDatasetMeta(this.index);\n    }\n    getScaleForId(scaleID) {\n      return this.chart.scales[scaleID];\n    }\n    _getOtherScale(scale) {\n      const meta = this._cachedMeta;\n      return scale === meta.iScale ? meta.vScale : meta.iScale;\n    }\n    reset() {\n      this._update('reset');\n    }\n    _destroy() {\n      const meta = this._cachedMeta;\n      if (this._data) {\n        unlistenArrayEvents(this._data, this);\n      }\n      if (meta._stacked) {\n        clearStacks(meta);\n      }\n    }\n    _dataCheck() {\n      const me = this;\n      const dataset = me.getDataset();\n      const data = dataset.data || (dataset.data = []);\n      const _data = me._data;\n      if (isObject(data)) {\n        me._data = convertObjectDataToArray(data);\n      } else if (_data !== data) {\n        if (_data) {\n          unlistenArrayEvents(_data, me);\n          const meta = me._cachedMeta;\n          clearStacks(meta);\n          meta._parsed = [];\n        }\n        if (data && Object.isExtensible(data)) {\n          listenArrayEvents(data, me);\n        }\n        me._syncList = [];\n        me._data = data;\n      }\n    }\n    addElements() {\n      const me = this;\n      const meta = me._cachedMeta;\n      me._dataCheck();\n      if (me.datasetElementType) {\n        meta.dataset = new me.datasetElementType();\n      }\n    }\n    buildOrUpdateElements(resetNewElements) {\n      const me = this;\n      const meta = me._cachedMeta;\n      const dataset = me.getDataset();\n      let stackChanged = false;\n      me._dataCheck();\n      const oldStacked = meta._stacked;\n      meta._stacked = isStacked(meta.vScale, meta);\n      if (meta.stack !== dataset.stack) {\n        stackChanged = true;\n        clearStacks(meta);\n        meta.stack = dataset.stack;\n      }\n      me._resyncElements(resetNewElements);\n      if (stackChanged || oldStacked !== meta._stacked) {\n        updateStacks(me, meta._parsed);\n      }\n    }\n    configure() {\n      const me = this;\n      const config = me.chart.config;\n      const scopeKeys = config.datasetScopeKeys(me._type);\n      const scopes = config.getOptionScopes(me.getDataset(), scopeKeys, true);\n      me.options = config.createResolver(scopes, me.getContext());\n      me._parsing = me.options.parsing;\n    }\n    parse(start, count) {\n      const me = this;\n      const {\n        _cachedMeta: meta,\n        _data: data\n      } = me;\n      const {\n        iScale,\n        _stacked\n      } = meta;\n      const iAxis = iScale.axis;\n      let sorted = start === 0 && count === data.length ? true : meta._sorted;\n      let prev = start > 0 && meta._parsed[start - 1];\n      let i, cur, parsed;\n      if (me._parsing === false) {\n        meta._parsed = data;\n        meta._sorted = true;\n        parsed = data;\n      } else {\n        if (isArray(data[start])) {\n          parsed = me.parseArrayData(meta, data, start, count);\n        } else if (isObject(data[start])) {\n          parsed = me.parseObjectData(meta, data, start, count);\n        } else {\n          parsed = me.parsePrimitiveData(meta, data, start, count);\n        }\n        const isNotInOrderComparedToPrev = () => cur[iAxis] === null || prev && cur[iAxis] < prev[iAxis];\n        for (i = 0; i < count; ++i) {\n          meta._parsed[i + start] = cur = parsed[i];\n          if (sorted) {\n            if (isNotInOrderComparedToPrev()) {\n              sorted = false;\n            }\n            prev = cur;\n          }\n        }\n        meta._sorted = sorted;\n      }\n      if (_stacked) {\n        updateStacks(me, parsed);\n      }\n    }\n    parsePrimitiveData(meta, data, start, count) {\n      const {\n        iScale,\n        vScale\n      } = meta;\n      const iAxis = iScale.axis;\n      const vAxis = vScale.axis;\n      const labels = iScale.getLabels();\n      const singleScale = iScale === vScale;\n      const parsed = new Array(count);\n      let i, ilen, index;\n      for (i = 0, ilen = count; i < ilen; ++i) {\n        index = i + start;\n        parsed[i] = {\n          [iAxis]: singleScale || iScale.parse(labels[index], index),\n          [vAxis]: vScale.parse(data[index], index)\n        };\n      }\n      return parsed;\n    }\n    parseArrayData(meta, data, start, count) {\n      const {\n        xScale,\n        yScale\n      } = meta;\n      const parsed = new Array(count);\n      let i, ilen, index, item;\n      for (i = 0, ilen = count; i < ilen; ++i) {\n        index = i + start;\n        item = data[index];\n        parsed[i] = {\n          x: xScale.parse(item[0], index),\n          y: yScale.parse(item[1], index)\n        };\n      }\n      return parsed;\n    }\n    parseObjectData(meta, data, start, count) {\n      const {\n        xScale,\n        yScale\n      } = meta;\n      const {\n        xAxisKey = 'x',\n        yAxisKey = 'y'\n      } = this._parsing;\n      const parsed = new Array(count);\n      let i, ilen, index, item;\n      for (i = 0, ilen = count; i < ilen; ++i) {\n        index = i + start;\n        item = data[index];\n        parsed[i] = {\n          x: xScale.parse(resolveObjectKey(item, xAxisKey), index),\n          y: yScale.parse(resolveObjectKey(item, yAxisKey), index)\n        };\n      }\n      return parsed;\n    }\n    getParsed(index) {\n      return this._cachedMeta._parsed[index];\n    }\n    getDataElement(index) {\n      return this._cachedMeta.data[index];\n    }\n    applyStack(scale, parsed, mode) {\n      const chart = this.chart;\n      const meta = this._cachedMeta;\n      const value = parsed[scale.axis];\n      const stack = {\n        keys: getSortedDatasetIndices(chart, true),\n        values: parsed._stacks[scale.axis]\n      };\n      return applyStack(stack, value, meta.index, {\n        mode\n      });\n    }\n    updateRangeFromParsed(range, scale, parsed, stack) {\n      const parsedValue = parsed[scale.axis];\n      let value = parsedValue === null ? NaN : parsedValue;\n      const values = stack && parsed._stacks[scale.axis];\n      if (stack && values) {\n        stack.values = values;\n        range.min = Math.min(range.min, value);\n        range.max = Math.max(range.max, value);\n        value = applyStack(stack, parsedValue, this._cachedMeta.index, {\n          all: true\n        });\n      }\n      range.min = Math.min(range.min, value);\n      range.max = Math.max(range.max, value);\n    }\n    getMinMax(scale, canStack) {\n      const me = this;\n      const meta = me._cachedMeta;\n      const _parsed = meta._parsed;\n      const sorted = meta._sorted && scale === meta.iScale;\n      const ilen = _parsed.length;\n      const otherScale = me._getOtherScale(scale);\n      const stack = canStack && meta._stacked && {\n        keys: getSortedDatasetIndices(me.chart, true),\n        values: null\n      };\n      const range = {\n        min: Number.POSITIVE_INFINITY,\n        max: Number.NEGATIVE_INFINITY\n      };\n      const {\n        min: otherMin,\n        max: otherMax\n      } = getUserBounds(otherScale);\n      let i, value, parsed, otherValue;\n      function _skip() {\n        parsed = _parsed[i];\n        value = parsed[scale.axis];\n        otherValue = parsed[otherScale.axis];\n        return !isNumberFinite(value) || otherMin > otherValue || otherMax < otherValue;\n      }\n      for (i = 0; i < ilen; ++i) {\n        if (_skip()) {\n          continue;\n        }\n        me.updateRangeFromParsed(range, scale, parsed, stack);\n        if (sorted) {\n          break;\n        }\n      }\n      if (sorted) {\n        for (i = ilen - 1; i >= 0; --i) {\n          if (_skip()) {\n            continue;\n          }\n          me.updateRangeFromParsed(range, scale, parsed, stack);\n          break;\n        }\n      }\n      return range;\n    }\n    getAllParsedValues(scale) {\n      const parsed = this._cachedMeta._parsed;\n      const values = [];\n      let i, ilen, value;\n      for (i = 0, ilen = parsed.length; i < ilen; ++i) {\n        value = parsed[i][scale.axis];\n        if (isNumberFinite(value)) {\n          values.push(value);\n        }\n      }\n      return values;\n    }\n    getMaxOverflow() {\n      return false;\n    }\n    getLabelAndValue(index) {\n      const me = this;\n      const meta = me._cachedMeta;\n      const iScale = meta.iScale;\n      const vScale = meta.vScale;\n      const parsed = me.getParsed(index);\n      return {\n        label: iScale ? '' + iScale.getLabelForValue(parsed[iScale.axis]) : '',\n        value: vScale ? '' + vScale.getLabelForValue(parsed[vScale.axis]) : ''\n      };\n    }\n    _update(mode) {\n      const me = this;\n      const meta = me._cachedMeta;\n      me.configure();\n      me._cachedDataOpts = {};\n      me.update(mode || 'default');\n      meta._clip = toClip(valueOrDefault(me.options.clip, defaultClip(meta.xScale, meta.yScale, me.getMaxOverflow())));\n    }\n    update(mode) {}\n    draw() {\n      const me = this;\n      const ctx = me._ctx;\n      const chart = me.chart;\n      const meta = me._cachedMeta;\n      const elements = meta.data || [];\n      const area = chart.chartArea;\n      const active = [];\n      const start = me._drawStart || 0;\n      const count = me._drawCount || elements.length - start;\n      let i;\n      if (meta.dataset) {\n        meta.dataset.draw(ctx, area, start, count);\n      }\n      for (i = start; i < start + count; ++i) {\n        const element = elements[i];\n        if (element.active) {\n          active.push(element);\n        } else {\n          element.draw(ctx, area);\n        }\n      }\n      for (i = 0; i < active.length; ++i) {\n        active[i].draw(ctx, area);\n      }\n    }\n    getStyle(index, active) {\n      const mode = active ? 'active' : 'default';\n      return index === undefined && this._cachedMeta.dataset ? this.resolveDatasetElementOptions(mode) : this.resolveDataElementOptions(index || 0, mode);\n    }\n    getContext(index, active, mode) {\n      const me = this;\n      const dataset = me.getDataset();\n      let context;\n      if (index >= 0 && index < me._cachedMeta.data.length) {\n        const element = me._cachedMeta.data[index];\n        context = element.$context || (element.$context = createDataContext(me.getContext(), index, element));\n        context.parsed = me.getParsed(index);\n        context.raw = dataset.data[index];\n        context.index = context.dataIndex = index;\n      } else {\n        context = me.$context || (me.$context = createDatasetContext(me.chart.getContext(), me.index));\n        context.dataset = dataset;\n        context.index = context.datasetIndex = me.index;\n      }\n      context.active = !!active;\n      context.mode = mode;\n      return context;\n    }\n    resolveDatasetElementOptions(mode) {\n      return this._resolveElementOptions(this.datasetElementType.id, mode);\n    }\n    resolveDataElementOptions(index, mode) {\n      return this._resolveElementOptions(this.dataElementType.id, mode, index);\n    }\n    _resolveElementOptions(elementType) {\n      let mode = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'default';\n      let index = arguments.length > 2 ? arguments[2] : undefined;\n      const me = this;\n      const active = mode === 'active';\n      const cache = me._cachedDataOpts;\n      const cacheKey = elementType + '-' + mode;\n      const cached = cache[cacheKey];\n      const sharing = me.enableOptionSharing && defined(index);\n      if (cached) {\n        return cloneIfNotShared(cached, sharing);\n      }\n      const config = me.chart.config;\n      const scopeKeys = config.datasetElementScopeKeys(me._type, elementType);\n      const prefixes = active ? [`${elementType}Hover`, 'hover', elementType, ''] : [elementType, ''];\n      const scopes = config.getOptionScopes(me.getDataset(), scopeKeys);\n      const names = Object.keys(defaults.elements[elementType]);\n      const context = () => me.getContext(index, active);\n      const values = config.resolveNamedOptions(scopes, names, context, prefixes);\n      if (values.$shared) {\n        values.$shared = sharing;\n        cache[cacheKey] = Object.freeze(cloneIfNotShared(values, sharing));\n      }\n      return values;\n    }\n    _resolveAnimations(index, transition, active) {\n      const me = this;\n      const chart = me.chart;\n      const cache = me._cachedDataOpts;\n      const cacheKey = `animation-${transition}`;\n      const cached = cache[cacheKey];\n      if (cached) {\n        return cached;\n      }\n      let options;\n      if (chart.options.animation !== false) {\n        const config = me.chart.config;\n        const scopeKeys = config.datasetAnimationScopeKeys(me._type, transition);\n        const scopes = config.getOptionScopes(me.getDataset(), scopeKeys);\n        options = config.createResolver(scopes, me.getContext(index, active, transition));\n      }\n      const animations = new Animations(chart, options && options.animations);\n      if (options && options._cacheable) {\n        cache[cacheKey] = Object.freeze(animations);\n      }\n      return animations;\n    }\n    getSharedOptions(options) {\n      if (!options.$shared) {\n        return;\n      }\n      return this._sharedOptions || (this._sharedOptions = Object.assign({}, options));\n    }\n    includeOptions(mode, sharedOptions) {\n      return !sharedOptions || isDirectUpdateMode(mode) || this.chart._animationsDisabled;\n    }\n    updateElement(element, index, properties, mode) {\n      if (isDirectUpdateMode(mode)) {\n        Object.assign(element, properties);\n      } else {\n        this._resolveAnimations(index, mode).update(element, properties);\n      }\n    }\n    updateSharedOptions(sharedOptions, mode, newOptions) {\n      if (sharedOptions && !isDirectUpdateMode(mode)) {\n        this._resolveAnimations(undefined, mode).update(sharedOptions, newOptions);\n      }\n    }\n    _setStyle(element, index, mode, active) {\n      element.active = active;\n      const options = this.getStyle(index, active);\n      this._resolveAnimations(index, mode, active).update(element, {\n        options: !active && this.getSharedOptions(options) || options\n      });\n    }\n    removeHoverStyle(element, datasetIndex, index) {\n      this._setStyle(element, index, 'active', false);\n    }\n    setHoverStyle(element, datasetIndex, index) {\n      this._setStyle(element, index, 'active', true);\n    }\n    _removeDatasetHoverStyle() {\n      const element = this._cachedMeta.dataset;\n      if (element) {\n        this._setStyle(element, undefined, 'active', false);\n      }\n    }\n    _setDatasetHoverStyle() {\n      const element = this._cachedMeta.dataset;\n      if (element) {\n        this._setStyle(element, undefined, 'active', true);\n      }\n    }\n    _resyncElements(resetNewElements) {\n      const me = this;\n      const data = me._data;\n      const elements = me._cachedMeta.data;\n      for (const [method, arg1, arg2] of me._syncList) {\n        me[method](arg1, arg2);\n      }\n      me._syncList = [];\n      const numMeta = elements.length;\n      const numData = data.length;\n      const count = Math.min(numData, numMeta);\n      if (count) {\n        me.parse(0, count);\n      }\n      if (numData > numMeta) {\n        me._insertElements(numMeta, numData - numMeta, resetNewElements);\n      } else if (numData < numMeta) {\n        me._removeElements(numData, numMeta - numData);\n      }\n    }\n    _insertElements(start, count) {\n      let resetNewElements = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n      const me = this;\n      const meta = me._cachedMeta;\n      const data = meta.data;\n      const end = start + count;\n      let i;\n      const move = arr => {\n        arr.length += count;\n        for (i = arr.length - 1; i >= end; i--) {\n          arr[i] = arr[i - count];\n        }\n      };\n      move(data);\n      for (i = start; i < end; ++i) {\n        data[i] = new me.dataElementType();\n      }\n      if (me._parsing) {\n        move(meta._parsed);\n      }\n      me.parse(start, count);\n      if (resetNewElements) {\n        me.updateElements(data, start, count, 'reset');\n      }\n    }\n    updateElements(element, start, count, mode) {}\n    _removeElements(start, count) {\n      const me = this;\n      const meta = me._cachedMeta;\n      if (me._parsing) {\n        const removed = meta._parsed.splice(start, count);\n        if (meta._stacked) {\n          clearStacks(meta, removed);\n        }\n      }\n      meta.data.splice(start, count);\n    }\n    _onDataPush() {\n      const count = arguments.length;\n      this._syncList.push(['_insertElements', this.getDataset().data.length - count, count]);\n    }\n    _onDataPop() {\n      this._syncList.push(['_removeElements', this._cachedMeta.data.length - 1, 1]);\n    }\n    _onDataShift() {\n      this._syncList.push(['_removeElements', 0, 1]);\n    }\n    _onDataSplice(start, count) {\n      this._syncList.push(['_removeElements', start, count]);\n      this._syncList.push(['_insertElements', start, arguments.length - 2]);\n    }\n    _onDataUnshift() {\n      this._syncList.push(['_insertElements', 0, arguments.length]);\n    }\n  }\n  DatasetController.defaults = {};\n  DatasetController.prototype.datasetElementType = null;\n  DatasetController.prototype.dataElementType = null;\n  class Element {\n    constructor() {\n      this.x = undefined;\n      this.y = undefined;\n      this.active = false;\n      this.options = undefined;\n      this.$animations = undefined;\n    }\n    tooltipPosition(useFinalPosition) {\n      const {\n        x,\n        y\n      } = this.getProps(['x', 'y'], useFinalPosition);\n      return {\n        x,\n        y\n      };\n    }\n    hasValue() {\n      return isNumber(this.x) && isNumber(this.y);\n    }\n    getProps(props, final) {\n      const me = this;\n      const anims = this.$animations;\n      if (!final || !anims) {\n        return me;\n      }\n      const ret = {};\n      props.forEach(prop => {\n        ret[prop] = anims[prop] && anims[prop].active() ? anims[prop]._to : me[prop];\n      });\n      return ret;\n    }\n  }\n  Element.defaults = {};\n  Element.defaultRoutes = undefined;\n  const intlCache = new Map();\n  function getNumberFormat(locale, options) {\n    options = options || {};\n    const cacheKey = locale + JSON.stringify(options);\n    let formatter = intlCache.get(cacheKey);\n    if (!formatter) {\n      formatter = new Intl.NumberFormat(locale, options);\n      intlCache.set(cacheKey, formatter);\n    }\n    return formatter;\n  }\n  function formatNumber(num, locale, options) {\n    return getNumberFormat(locale, options).format(num);\n  }\n  const formatters = {\n    values(value) {\n      return isArray(value) ? value : '' + value;\n    },\n    numeric(tickValue, index, ticks) {\n      if (tickValue === 0) {\n        return '0';\n      }\n      const locale = this.chart.options.locale;\n      let notation;\n      let delta = tickValue;\n      if (ticks.length > 1) {\n        const maxTick = Math.max(Math.abs(ticks[0].value), Math.abs(ticks[ticks.length - 1].value));\n        if (maxTick < 1e-4 || maxTick > 1e+15) {\n          notation = 'scientific';\n        }\n        delta = calculateDelta(tickValue, ticks);\n      }\n      const logDelta = log10(Math.abs(delta));\n      const numDecimal = Math.max(Math.min(-1 * Math.floor(logDelta), 20), 0);\n      const options = {\n        notation,\n        minimumFractionDigits: numDecimal,\n        maximumFractionDigits: numDecimal\n      };\n      Object.assign(options, this.options.ticks.format);\n      return formatNumber(tickValue, locale, options);\n    },\n    logarithmic(tickValue, index, ticks) {\n      if (tickValue === 0) {\n        return '0';\n      }\n      const remain = tickValue / Math.pow(10, Math.floor(log10(tickValue)));\n      if (remain === 1 || remain === 2 || remain === 5) {\n        return formatters.numeric.call(this, tickValue, index, ticks);\n      }\n      return '';\n    }\n  };\n  function calculateDelta(tickValue, ticks) {\n    let delta = ticks.length > 3 ? ticks[2].value - ticks[1].value : ticks[1].value - ticks[0].value;\n    if (Math.abs(delta) >= 1 && tickValue !== Math.floor(tickValue)) {\n      delta = tickValue - Math.floor(tickValue);\n    }\n    return delta;\n  }\n  var Ticks = {\n    formatters\n  };\n  defaults.set('scale', {\n    display: true,\n    offset: false,\n    reverse: false,\n    beginAtZero: false,\n    bounds: 'ticks',\n    grace: 0,\n    grid: {\n      display: true,\n      lineWidth: 1,\n      drawBorder: true,\n      drawOnChartArea: true,\n      drawTicks: true,\n      tickLength: 8,\n      tickWidth: (_ctx, options) => options.lineWidth,\n      tickColor: (_ctx, options) => options.color,\n      offset: false,\n      borderDash: [],\n      borderDashOffset: 0.0,\n      borderWidth: 1\n    },\n    title: {\n      display: false,\n      text: '',\n      padding: {\n        top: 4,\n        bottom: 4\n      }\n    },\n    ticks: {\n      minRotation: 0,\n      maxRotation: 50,\n      mirror: false,\n      textStrokeWidth: 0,\n      textStrokeColor: '',\n      padding: 3,\n      display: true,\n      autoSkip: true,\n      autoSkipPadding: 3,\n      labelOffset: 0,\n      callback: Ticks.formatters.values,\n      minor: {},\n      major: {},\n      align: 'center',\n      crossAlign: 'near',\n      showLabelBackdrop: false,\n      backdropColor: 'rgba(255, 255, 255, 0.75)',\n      backdropPadding: 2\n    }\n  });\n  defaults.route('scale.ticks', 'color', '', 'color');\n  defaults.route('scale.grid', 'color', '', 'borderColor');\n  defaults.route('scale.grid', 'borderColor', '', 'borderColor');\n  defaults.route('scale.title', 'color', '', 'color');\n  defaults.describe('scale', {\n    _fallback: false,\n    _scriptable: name => !name.startsWith('before') && !name.startsWith('after') && name !== 'callback' && name !== 'parser',\n    _indexable: name => name !== 'borderDash' && name !== 'tickBorderDash'\n  });\n  defaults.describe('scales', {\n    _fallback: 'scale'\n  });\n  function autoSkip(scale, ticks) {\n    const tickOpts = scale.options.ticks;\n    const ticksLimit = tickOpts.maxTicksLimit || determineMaxTicks(scale);\n    const majorIndices = tickOpts.major.enabled ? getMajorIndices(ticks) : [];\n    const numMajorIndices = majorIndices.length;\n    const first = majorIndices[0];\n    const last = majorIndices[numMajorIndices - 1];\n    const newTicks = [];\n    if (numMajorIndices > ticksLimit) {\n      skipMajors(ticks, newTicks, majorIndices, numMajorIndices / ticksLimit);\n      return newTicks;\n    }\n    const spacing = calculateSpacing(majorIndices, ticks, ticksLimit);\n    if (numMajorIndices > 0) {\n      let i, ilen;\n      const avgMajorSpacing = numMajorIndices > 1 ? Math.round((last - first) / (numMajorIndices - 1)) : null;\n      skip(ticks, newTicks, spacing, isNullOrUndef(avgMajorSpacing) ? 0 : first - avgMajorSpacing, first);\n      for (i = 0, ilen = numMajorIndices - 1; i < ilen; i++) {\n        skip(ticks, newTicks, spacing, majorIndices[i], majorIndices[i + 1]);\n      }\n      skip(ticks, newTicks, spacing, last, isNullOrUndef(avgMajorSpacing) ? ticks.length : last + avgMajorSpacing);\n      return newTicks;\n    }\n    skip(ticks, newTicks, spacing);\n    return newTicks;\n  }\n  function determineMaxTicks(scale) {\n    const offset = scale.options.offset;\n    const tickLength = scale._tickSize();\n    const maxScale = scale._length / tickLength + (offset ? 0 : 1);\n    const maxChart = scale._maxLength / tickLength;\n    return Math.floor(Math.min(maxScale, maxChart));\n  }\n  function calculateSpacing(majorIndices, ticks, ticksLimit) {\n    const evenMajorSpacing = getEvenSpacing(majorIndices);\n    const spacing = ticks.length / ticksLimit;\n    if (!evenMajorSpacing) {\n      return Math.max(spacing, 1);\n    }\n    const factors = _factorize(evenMajorSpacing);\n    for (let i = 0, ilen = factors.length - 1; i < ilen; i++) {\n      const factor = factors[i];\n      if (factor > spacing) {\n        return factor;\n      }\n    }\n    return Math.max(spacing, 1);\n  }\n  function getMajorIndices(ticks) {\n    const result = [];\n    let i, ilen;\n    for (i = 0, ilen = ticks.length; i < ilen; i++) {\n      if (ticks[i].major) {\n        result.push(i);\n      }\n    }\n    return result;\n  }\n  function skipMajors(ticks, newTicks, majorIndices, spacing) {\n    let count = 0;\n    let next = majorIndices[0];\n    let i;\n    spacing = Math.ceil(spacing);\n    for (i = 0; i < ticks.length; i++) {\n      if (i === next) {\n        newTicks.push(ticks[i]);\n        count++;\n        next = majorIndices[count * spacing];\n      }\n    }\n  }\n  function skip(ticks, newTicks, spacing, majorStart, majorEnd) {\n    const start = valueOrDefault(majorStart, 0);\n    const end = Math.min(valueOrDefault(majorEnd, ticks.length), ticks.length);\n    let count = 0;\n    let length, i, next;\n    spacing = Math.ceil(spacing);\n    if (majorEnd) {\n      length = majorEnd - majorStart;\n      spacing = length / Math.floor(length / spacing);\n    }\n    next = start;\n    while (next < 0) {\n      count++;\n      next = Math.round(start + count * spacing);\n    }\n    for (i = Math.max(start, 0); i < end; i++) {\n      if (i === next) {\n        newTicks.push(ticks[i]);\n        count++;\n        next = Math.round(start + count * spacing);\n      }\n    }\n  }\n  function getEvenSpacing(arr) {\n    const len = arr.length;\n    let i, diff;\n    if (len < 2) {\n      return false;\n    }\n    for (diff = arr[0], i = 1; i < len; ++i) {\n      if (arr[i] - arr[i - 1] !== diff) {\n        return false;\n      }\n    }\n    return diff;\n  }\n  const reverseAlign = align => align === 'left' ? 'right' : align === 'right' ? 'left' : align;\n  const offsetFromEdge = (scale, edge, offset) => edge === 'top' || edge === 'left' ? scale[edge] + offset : scale[edge] - offset;\n  function sample(arr, numItems) {\n    const result = [];\n    const increment = arr.length / numItems;\n    const len = arr.length;\n    let i = 0;\n    for (; i < len; i += increment) {\n      result.push(arr[Math.floor(i)]);\n    }\n    return result;\n  }\n  function getPixelForGridLine(scale, index, offsetGridLines) {\n    const length = scale.ticks.length;\n    const validIndex = Math.min(index, length - 1);\n    const start = scale._startPixel;\n    const end = scale._endPixel;\n    const epsilon = 1e-6;\n    let lineValue = scale.getPixelForTick(validIndex);\n    let offset;\n    if (offsetGridLines) {\n      if (length === 1) {\n        offset = Math.max(lineValue - start, end - lineValue);\n      } else if (index === 0) {\n        offset = (scale.getPixelForTick(1) - lineValue) / 2;\n      } else {\n        offset = (lineValue - scale.getPixelForTick(validIndex - 1)) / 2;\n      }\n      lineValue += validIndex < index ? offset : -offset;\n      if (lineValue < start - epsilon || lineValue > end + epsilon) {\n        return;\n      }\n    }\n    return lineValue;\n  }\n  function garbageCollect(caches, length) {\n    each(caches, cache => {\n      const gc = cache.gc;\n      const gcLen = gc.length / 2;\n      let i;\n      if (gcLen > length) {\n        for (i = 0; i < gcLen; ++i) {\n          delete cache.data[gc[i]];\n        }\n        gc.splice(0, gcLen);\n      }\n    });\n  }\n  function getTickMarkLength(options) {\n    return options.drawTicks ? options.tickLength : 0;\n  }\n  function getTitleHeight(options, fallback) {\n    if (!options.display) {\n      return 0;\n    }\n    const font = toFont(options.font, fallback);\n    const padding = toPadding(options.padding);\n    const lines = isArray(options.text) ? options.text.length : 1;\n    return lines * font.lineHeight + padding.height;\n  }\n  function createScaleContext(parent, scale) {\n    return Object.assign(Object.create(parent), {\n      scale,\n      type: 'scale'\n    });\n  }\n  function createTickContext(parent, index, tick) {\n    return Object.assign(Object.create(parent), {\n      tick,\n      index,\n      type: 'tick'\n    });\n  }\n  function titleAlign(align, position, reverse) {\n    let ret = _toLeftRightCenter(align);\n    if (reverse && position !== 'right' || !reverse && position === 'right') {\n      ret = reverseAlign(ret);\n    }\n    return ret;\n  }\n  function titleArgs(scale, offset, position, align) {\n    const {\n      top,\n      left,\n      bottom,\n      right\n    } = scale;\n    let rotation = 0;\n    let maxWidth, titleX, titleY;\n    if (scale.isHorizontal()) {\n      titleX = _alignStartEnd(align, left, right);\n      titleY = offsetFromEdge(scale, position, offset);\n      maxWidth = right - left;\n    } else {\n      titleX = offsetFromEdge(scale, position, offset);\n      titleY = _alignStartEnd(align, bottom, top);\n      rotation = position === 'left' ? -HALF_PI : HALF_PI;\n    }\n    return {\n      titleX,\n      titleY,\n      maxWidth,\n      rotation\n    };\n  }\n  class Scale extends Element {\n    constructor(cfg) {\n      super();\n      this.id = cfg.id;\n      this.type = cfg.type;\n      this.options = undefined;\n      this.ctx = cfg.ctx;\n      this.chart = cfg.chart;\n      this.top = undefined;\n      this.bottom = undefined;\n      this.left = undefined;\n      this.right = undefined;\n      this.width = undefined;\n      this.height = undefined;\n      this._margins = {\n        left: 0,\n        right: 0,\n        top: 0,\n        bottom: 0\n      };\n      this.maxWidth = undefined;\n      this.maxHeight = undefined;\n      this.paddingTop = undefined;\n      this.paddingBottom = undefined;\n      this.paddingLeft = undefined;\n      this.paddingRight = undefined;\n      this.axis = undefined;\n      this.labelRotation = undefined;\n      this.min = undefined;\n      this.max = undefined;\n      this._range = undefined;\n      this.ticks = [];\n      this._gridLineItems = null;\n      this._labelItems = null;\n      this._labelSizes = null;\n      this._length = 0;\n      this._maxLength = 0;\n      this._longestTextCache = {};\n      this._startPixel = undefined;\n      this._endPixel = undefined;\n      this._reversePixels = false;\n      this._userMax = undefined;\n      this._userMin = undefined;\n      this._suggestedMax = undefined;\n      this._suggestedMin = undefined;\n      this._ticksLength = 0;\n      this._borderValue = 0;\n      this._cache = {};\n      this._dataLimitsCached = false;\n      this.$context = undefined;\n    }\n    init(options) {\n      const me = this;\n      me.options = options.setContext(me.getContext());\n      me.axis = options.axis;\n      me._userMin = me.parse(options.min);\n      me._userMax = me.parse(options.max);\n      me._suggestedMin = me.parse(options.suggestedMin);\n      me._suggestedMax = me.parse(options.suggestedMax);\n    }\n    parse(raw, index) {\n      return raw;\n    }\n    getUserBounds() {\n      let {\n        _userMin,\n        _userMax,\n        _suggestedMin,\n        _suggestedMax\n      } = this;\n      _userMin = finiteOrDefault(_userMin, Number.POSITIVE_INFINITY);\n      _userMax = finiteOrDefault(_userMax, Number.NEGATIVE_INFINITY);\n      _suggestedMin = finiteOrDefault(_suggestedMin, Number.POSITIVE_INFINITY);\n      _suggestedMax = finiteOrDefault(_suggestedMax, Number.NEGATIVE_INFINITY);\n      return {\n        min: finiteOrDefault(_userMin, _suggestedMin),\n        max: finiteOrDefault(_userMax, _suggestedMax),\n        minDefined: isNumberFinite(_userMin),\n        maxDefined: isNumberFinite(_userMax)\n      };\n    }\n    getMinMax(canStack) {\n      const me = this;\n      let {\n        min,\n        max,\n        minDefined,\n        maxDefined\n      } = me.getUserBounds();\n      let range;\n      if (minDefined && maxDefined) {\n        return {\n          min,\n          max\n        };\n      }\n      const metas = me.getMatchingVisibleMetas();\n      for (let i = 0, ilen = metas.length; i < ilen; ++i) {\n        range = metas[i].controller.getMinMax(me, canStack);\n        if (!minDefined) {\n          min = Math.min(min, range.min);\n        }\n        if (!maxDefined) {\n          max = Math.max(max, range.max);\n        }\n      }\n      return {\n        min: finiteOrDefault(min, finiteOrDefault(max, min)),\n        max: finiteOrDefault(max, finiteOrDefault(min, max))\n      };\n    }\n    getPadding() {\n      const me = this;\n      return {\n        left: me.paddingLeft || 0,\n        top: me.paddingTop || 0,\n        right: me.paddingRight || 0,\n        bottom: me.paddingBottom || 0\n      };\n    }\n    getTicks() {\n      return this.ticks;\n    }\n    getLabels() {\n      const data = this.chart.data;\n      return this.options.labels || (this.isHorizontal() ? data.xLabels : data.yLabels) || data.labels || [];\n    }\n    beforeLayout() {\n      this._cache = {};\n      this._dataLimitsCached = false;\n    }\n    beforeUpdate() {\n      callback(this.options.beforeUpdate, [this]);\n    }\n    update(maxWidth, maxHeight, margins) {\n      const me = this;\n      const tickOpts = me.options.ticks;\n      const sampleSize = tickOpts.sampleSize;\n      me.beforeUpdate();\n      me.maxWidth = maxWidth;\n      me.maxHeight = maxHeight;\n      me._margins = margins = Object.assign({\n        left: 0,\n        right: 0,\n        top: 0,\n        bottom: 0\n      }, margins);\n      me.ticks = null;\n      me._labelSizes = null;\n      me._gridLineItems = null;\n      me._labelItems = null;\n      me.beforeSetDimensions();\n      me.setDimensions();\n      me.afterSetDimensions();\n      me._maxLength = me.isHorizontal() ? me.width + margins.left + margins.right : me.height + margins.top + margins.bottom;\n      if (!me._dataLimitsCached) {\n        me.beforeDataLimits();\n        me.determineDataLimits();\n        me.afterDataLimits();\n        me._range = _addGrace(me, me.options.grace);\n        me._dataLimitsCached = true;\n      }\n      me.beforeBuildTicks();\n      me.ticks = me.buildTicks() || [];\n      me.afterBuildTicks();\n      const samplingEnabled = sampleSize < me.ticks.length;\n      me._convertTicksToLabels(samplingEnabled ? sample(me.ticks, sampleSize) : me.ticks);\n      me.configure();\n      me.beforeCalculateLabelRotation();\n      me.calculateLabelRotation();\n      me.afterCalculateLabelRotation();\n      if (tickOpts.display && (tickOpts.autoSkip || tickOpts.source === 'auto')) {\n        me.ticks = autoSkip(me, me.ticks);\n        me._labelSizes = null;\n      }\n      if (samplingEnabled) {\n        me._convertTicksToLabels(me.ticks);\n      }\n      me.beforeFit();\n      me.fit();\n      me.afterFit();\n      me.afterUpdate();\n    }\n    configure() {\n      const me = this;\n      let reversePixels = me.options.reverse;\n      let startPixel, endPixel;\n      if (me.isHorizontal()) {\n        startPixel = me.left;\n        endPixel = me.right;\n      } else {\n        startPixel = me.top;\n        endPixel = me.bottom;\n        reversePixels = !reversePixels;\n      }\n      me._startPixel = startPixel;\n      me._endPixel = endPixel;\n      me._reversePixels = reversePixels;\n      me._length = endPixel - startPixel;\n      me._alignToPixels = me.options.alignToPixels;\n    }\n    afterUpdate() {\n      callback(this.options.afterUpdate, [this]);\n    }\n    beforeSetDimensions() {\n      callback(this.options.beforeSetDimensions, [this]);\n    }\n    setDimensions() {\n      const me = this;\n      if (me.isHorizontal()) {\n        me.width = me.maxWidth;\n        me.left = 0;\n        me.right = me.width;\n      } else {\n        me.height = me.maxHeight;\n        me.top = 0;\n        me.bottom = me.height;\n      }\n      me.paddingLeft = 0;\n      me.paddingTop = 0;\n      me.paddingRight = 0;\n      me.paddingBottom = 0;\n    }\n    afterSetDimensions() {\n      callback(this.options.afterSetDimensions, [this]);\n    }\n    _callHooks(name) {\n      const me = this;\n      me.chart.notifyPlugins(name, me.getContext());\n      callback(me.options[name], [me]);\n    }\n    beforeDataLimits() {\n      this._callHooks('beforeDataLimits');\n    }\n    determineDataLimits() {}\n    afterDataLimits() {\n      this._callHooks('afterDataLimits');\n    }\n    beforeBuildTicks() {\n      this._callHooks('beforeBuildTicks');\n    }\n    buildTicks() {\n      return [];\n    }\n    afterBuildTicks() {\n      this._callHooks('afterBuildTicks');\n    }\n    beforeTickToLabelConversion() {\n      callback(this.options.beforeTickToLabelConversion, [this]);\n    }\n    generateTickLabels(ticks) {\n      const me = this;\n      const tickOpts = me.options.ticks;\n      let i, ilen, tick;\n      for (i = 0, ilen = ticks.length; i < ilen; i++) {\n        tick = ticks[i];\n        tick.label = callback(tickOpts.callback, [tick.value, i, ticks], me);\n      }\n      for (i = 0; i < ilen; i++) {\n        if (isNullOrUndef(ticks[i].label)) {\n          ticks.splice(i, 1);\n          ilen--;\n          i--;\n        }\n      }\n    }\n    afterTickToLabelConversion() {\n      callback(this.options.afterTickToLabelConversion, [this]);\n    }\n    beforeCalculateLabelRotation() {\n      callback(this.options.beforeCalculateLabelRotation, [this]);\n    }\n    calculateLabelRotation() {\n      const me = this;\n      const options = me.options;\n      const tickOpts = options.ticks;\n      const numTicks = me.ticks.length;\n      const minRotation = tickOpts.minRotation || 0;\n      const maxRotation = tickOpts.maxRotation;\n      let labelRotation = minRotation;\n      let tickWidth, maxHeight, maxLabelDiagonal;\n      if (!me._isVisible() || !tickOpts.display || minRotation >= maxRotation || numTicks <= 1 || !me.isHorizontal()) {\n        me.labelRotation = minRotation;\n        return;\n      }\n      const labelSizes = me._getLabelSizes();\n      const maxLabelWidth = labelSizes.widest.width;\n      const maxLabelHeight = labelSizes.highest.height;\n      const maxWidth = _limitValue(me.chart.width - maxLabelWidth, 0, me.maxWidth);\n      tickWidth = options.offset ? me.maxWidth / numTicks : maxWidth / (numTicks - 1);\n      if (maxLabelWidth + 6 > tickWidth) {\n        tickWidth = maxWidth / (numTicks - (options.offset ? 0.5 : 1));\n        maxHeight = me.maxHeight - getTickMarkLength(options.grid) - tickOpts.padding - getTitleHeight(options.title, me.chart.options.font);\n        maxLabelDiagonal = Math.sqrt(maxLabelWidth * maxLabelWidth + maxLabelHeight * maxLabelHeight);\n        labelRotation = toDegrees(Math.min(Math.asin(Math.min((labelSizes.highest.height + 6) / tickWidth, 1)), Math.asin(Math.min(maxHeight / maxLabelDiagonal, 1)) - Math.asin(maxLabelHeight / maxLabelDiagonal)));\n        labelRotation = Math.max(minRotation, Math.min(maxRotation, labelRotation));\n      }\n      me.labelRotation = labelRotation;\n    }\n    afterCalculateLabelRotation() {\n      callback(this.options.afterCalculateLabelRotation, [this]);\n    }\n    beforeFit() {\n      callback(this.options.beforeFit, [this]);\n    }\n    fit() {\n      const me = this;\n      const minSize = {\n        width: 0,\n        height: 0\n      };\n      const {\n        chart,\n        options: {\n          ticks: tickOpts,\n          title: titleOpts,\n          grid: gridOpts\n        }\n      } = me;\n      const display = me._isVisible();\n      const isHorizontal = me.isHorizontal();\n      if (display) {\n        const titleHeight = getTitleHeight(titleOpts, chart.options.font);\n        if (isHorizontal) {\n          minSize.width = me.maxWidth;\n          minSize.height = getTickMarkLength(gridOpts) + titleHeight;\n        } else {\n          minSize.height = me.maxHeight;\n          minSize.width = getTickMarkLength(gridOpts) + titleHeight;\n        }\n        if (tickOpts.display && me.ticks.length) {\n          const {\n            first,\n            last,\n            widest,\n            highest\n          } = me._getLabelSizes();\n          const tickPadding = tickOpts.padding * 2;\n          const angleRadians = toRadians(me.labelRotation);\n          const cos = Math.cos(angleRadians);\n          const sin = Math.sin(angleRadians);\n          if (isHorizontal) {\n            const labelHeight = tickOpts.mirror ? 0 : sin * widest.width + cos * highest.height;\n            minSize.height = Math.min(me.maxHeight, minSize.height + labelHeight + tickPadding);\n          } else {\n            const labelWidth = tickOpts.mirror ? 0 : cos * widest.width + sin * highest.height;\n            minSize.width = Math.min(me.maxWidth, minSize.width + labelWidth + tickPadding);\n          }\n          me._calculatePadding(first, last, sin, cos);\n        }\n      }\n      me._handleMargins();\n      if (isHorizontal) {\n        me.width = me._length = chart.width - me._margins.left - me._margins.right;\n        me.height = minSize.height;\n      } else {\n        me.width = minSize.width;\n        me.height = me._length = chart.height - me._margins.top - me._margins.bottom;\n      }\n    }\n    _calculatePadding(first, last, sin, cos) {\n      const me = this;\n      const {\n        ticks: {\n          align,\n          padding\n        },\n        position\n      } = me.options;\n      const isRotated = me.labelRotation !== 0;\n      const labelsBelowTicks = position !== 'top' && me.axis === 'x';\n      if (me.isHorizontal()) {\n        const offsetLeft = me.getPixelForTick(0) - me.left;\n        const offsetRight = me.right - me.getPixelForTick(me.ticks.length - 1);\n        let paddingLeft = 0;\n        let paddingRight = 0;\n        if (isRotated) {\n          if (labelsBelowTicks) {\n            paddingLeft = cos * first.width;\n            paddingRight = sin * last.height;\n          } else {\n            paddingLeft = sin * first.height;\n            paddingRight = cos * last.width;\n          }\n        } else if (align === 'start') {\n          paddingRight = last.width;\n        } else if (align === 'end') {\n          paddingLeft = first.width;\n        } else {\n          paddingLeft = first.width / 2;\n          paddingRight = last.width / 2;\n        }\n        me.paddingLeft = Math.max((paddingLeft - offsetLeft + padding) * me.width / (me.width - offsetLeft), 0);\n        me.paddingRight = Math.max((paddingRight - offsetRight + padding) * me.width / (me.width - offsetRight), 0);\n      } else {\n        let paddingTop = last.height / 2;\n        let paddingBottom = first.height / 2;\n        if (align === 'start') {\n          paddingTop = 0;\n          paddingBottom = first.height;\n        } else if (align === 'end') {\n          paddingTop = last.height;\n          paddingBottom = 0;\n        }\n        me.paddingTop = paddingTop + padding;\n        me.paddingBottom = paddingBottom + padding;\n      }\n    }\n    _handleMargins() {\n      const me = this;\n      if (me._margins) {\n        me._margins.left = Math.max(me.paddingLeft, me._margins.left);\n        me._margins.top = Math.max(me.paddingTop, me._margins.top);\n        me._margins.right = Math.max(me.paddingRight, me._margins.right);\n        me._margins.bottom = Math.max(me.paddingBottom, me._margins.bottom);\n      }\n    }\n    afterFit() {\n      callback(this.options.afterFit, [this]);\n    }\n    isHorizontal() {\n      const {\n        axis,\n        position\n      } = this.options;\n      return position === 'top' || position === 'bottom' || axis === 'x';\n    }\n    isFullSize() {\n      return this.options.fullSize;\n    }\n    _convertTicksToLabels(ticks) {\n      const me = this;\n      me.beforeTickToLabelConversion();\n      me.generateTickLabels(ticks);\n      me.afterTickToLabelConversion();\n    }\n    _getLabelSizes() {\n      const me = this;\n      let labelSizes = me._labelSizes;\n      if (!labelSizes) {\n        const sampleSize = me.options.ticks.sampleSize;\n        let ticks = me.ticks;\n        if (sampleSize < ticks.length) {\n          ticks = sample(ticks, sampleSize);\n        }\n        me._labelSizes = labelSizes = me._computeLabelSizes(ticks, ticks.length);\n      }\n      return labelSizes;\n    }\n    _computeLabelSizes(ticks, length) {\n      const {\n        ctx,\n        _longestTextCache: caches\n      } = this;\n      const widths = [];\n      const heights = [];\n      let widestLabelSize = 0;\n      let highestLabelSize = 0;\n      let i, j, jlen, label, tickFont, fontString, cache, lineHeight, width, height, nestedLabel;\n      for (i = 0; i < length; ++i) {\n        label = ticks[i].label;\n        tickFont = this._resolveTickFontOptions(i);\n        ctx.font = fontString = tickFont.string;\n        cache = caches[fontString] = caches[fontString] || {\n          data: {},\n          gc: []\n        };\n        lineHeight = tickFont.lineHeight;\n        width = height = 0;\n        if (!isNullOrUndef(label) && !isArray(label)) {\n          width = _measureText(ctx, cache.data, cache.gc, width, label);\n          height = lineHeight;\n        } else if (isArray(label)) {\n          for (j = 0, jlen = label.length; j < jlen; ++j) {\n            nestedLabel = label[j];\n            if (!isNullOrUndef(nestedLabel) && !isArray(nestedLabel)) {\n              width = _measureText(ctx, cache.data, cache.gc, width, nestedLabel);\n              height += lineHeight;\n            }\n          }\n        }\n        widths.push(width);\n        heights.push(height);\n        widestLabelSize = Math.max(width, widestLabelSize);\n        highestLabelSize = Math.max(height, highestLabelSize);\n      }\n      garbageCollect(caches, length);\n      const widest = widths.indexOf(widestLabelSize);\n      const highest = heights.indexOf(highestLabelSize);\n      const valueAt = idx => ({\n        width: widths[idx] || 0,\n        height: heights[idx] || 0\n      });\n      return {\n        first: valueAt(0),\n        last: valueAt(length - 1),\n        widest: valueAt(widest),\n        highest: valueAt(highest),\n        widths,\n        heights\n      };\n    }\n    getLabelForValue(value) {\n      return value;\n    }\n    getPixelForValue(value, index) {\n      return NaN;\n    }\n    getValueForPixel(pixel) {}\n    getPixelForTick(index) {\n      const ticks = this.ticks;\n      if (index < 0 || index > ticks.length - 1) {\n        return null;\n      }\n      return this.getPixelForValue(ticks[index].value);\n    }\n    getPixelForDecimal(decimal) {\n      const me = this;\n      if (me._reversePixels) {\n        decimal = 1 - decimal;\n      }\n      const pixel = me._startPixel + decimal * me._length;\n      return _int16Range(me._alignToPixels ? _alignPixel(me.chart, pixel, 0) : pixel);\n    }\n    getDecimalForPixel(pixel) {\n      const decimal = (pixel - this._startPixel) / this._length;\n      return this._reversePixels ? 1 - decimal : decimal;\n    }\n    getBasePixel() {\n      return this.getPixelForValue(this.getBaseValue());\n    }\n    getBaseValue() {\n      const {\n        min,\n        max\n      } = this;\n      return min < 0 && max < 0 ? max : min > 0 && max > 0 ? min : 0;\n    }\n    getContext(index) {\n      const me = this;\n      const ticks = me.ticks || [];\n      if (index >= 0 && index < ticks.length) {\n        const tick = ticks[index];\n        return tick.$context || (tick.$context = createTickContext(me.getContext(), index, tick));\n      }\n      return me.$context || (me.$context = createScaleContext(me.chart.getContext(), me));\n    }\n    _tickSize() {\n      const me = this;\n      const optionTicks = me.options.ticks;\n      const rot = toRadians(me.labelRotation);\n      const cos = Math.abs(Math.cos(rot));\n      const sin = Math.abs(Math.sin(rot));\n      const labelSizes = me._getLabelSizes();\n      const padding = optionTicks.autoSkipPadding || 0;\n      const w = labelSizes ? labelSizes.widest.width + padding : 0;\n      const h = labelSizes ? labelSizes.highest.height + padding : 0;\n      return me.isHorizontal() ? h * cos > w * sin ? w / cos : h / sin : h * sin < w * cos ? h / cos : w / sin;\n    }\n    _isVisible() {\n      const display = this.options.display;\n      if (display !== 'auto') {\n        return !!display;\n      }\n      return this.getMatchingVisibleMetas().length > 0;\n    }\n    _computeGridLineItems(chartArea) {\n      const me = this;\n      const axis = me.axis;\n      const chart = me.chart;\n      const options = me.options;\n      const {\n        grid,\n        position\n      } = options;\n      const offset = grid.offset;\n      const isHorizontal = me.isHorizontal();\n      const ticks = me.ticks;\n      const ticksLength = ticks.length + (offset ? 1 : 0);\n      const tl = getTickMarkLength(grid);\n      const items = [];\n      const borderOpts = grid.setContext(me.getContext());\n      const axisWidth = borderOpts.drawBorder ? borderOpts.borderWidth : 0;\n      const axisHalfWidth = axisWidth / 2;\n      const alignBorderValue = function (pixel) {\n        return _alignPixel(chart, pixel, axisWidth);\n      };\n      let borderValue, i, lineValue, alignedLineValue;\n      let tx1, ty1, tx2, ty2, x1, y1, x2, y2;\n      if (position === 'top') {\n        borderValue = alignBorderValue(me.bottom);\n        ty1 = me.bottom - tl;\n        ty2 = borderValue - axisHalfWidth;\n        y1 = alignBorderValue(chartArea.top) + axisHalfWidth;\n        y2 = chartArea.bottom;\n      } else if (position === 'bottom') {\n        borderValue = alignBorderValue(me.top);\n        y1 = chartArea.top;\n        y2 = alignBorderValue(chartArea.bottom) - axisHalfWidth;\n        ty1 = borderValue + axisHalfWidth;\n        ty2 = me.top + tl;\n      } else if (position === 'left') {\n        borderValue = alignBorderValue(me.right);\n        tx1 = me.right - tl;\n        tx2 = borderValue - axisHalfWidth;\n        x1 = alignBorderValue(chartArea.left) + axisHalfWidth;\n        x2 = chartArea.right;\n      } else if (position === 'right') {\n        borderValue = alignBorderValue(me.left);\n        x1 = chartArea.left;\n        x2 = alignBorderValue(chartArea.right) - axisHalfWidth;\n        tx1 = borderValue + axisHalfWidth;\n        tx2 = me.left + tl;\n      } else if (axis === 'x') {\n        if (position === 'center') {\n          borderValue = alignBorderValue((chartArea.top + chartArea.bottom) / 2 + 0.5);\n        } else if (isObject(position)) {\n          const positionAxisID = Object.keys(position)[0];\n          const value = position[positionAxisID];\n          borderValue = alignBorderValue(me.chart.scales[positionAxisID].getPixelForValue(value));\n        }\n        y1 = chartArea.top;\n        y2 = chartArea.bottom;\n        ty1 = borderValue + axisHalfWidth;\n        ty2 = ty1 + tl;\n      } else if (axis === 'y') {\n        if (position === 'center') {\n          borderValue = alignBorderValue((chartArea.left + chartArea.right) / 2);\n        } else if (isObject(position)) {\n          const positionAxisID = Object.keys(position)[0];\n          const value = position[positionAxisID];\n          borderValue = alignBorderValue(me.chart.scales[positionAxisID].getPixelForValue(value));\n        }\n        tx1 = borderValue - axisHalfWidth;\n        tx2 = tx1 - tl;\n        x1 = chartArea.left;\n        x2 = chartArea.right;\n      }\n      for (i = 0; i < ticksLength; ++i) {\n        const optsAtIndex = grid.setContext(me.getContext(i));\n        const lineWidth = optsAtIndex.lineWidth;\n        const lineColor = optsAtIndex.color;\n        const borderDash = grid.borderDash || [];\n        const borderDashOffset = optsAtIndex.borderDashOffset;\n        const tickWidth = optsAtIndex.tickWidth;\n        const tickColor = optsAtIndex.tickColor;\n        const tickBorderDash = optsAtIndex.tickBorderDash || [];\n        const tickBorderDashOffset = optsAtIndex.tickBorderDashOffset;\n        lineValue = getPixelForGridLine(me, i, offset);\n        if (lineValue === undefined) {\n          continue;\n        }\n        alignedLineValue = _alignPixel(chart, lineValue, lineWidth);\n        if (isHorizontal) {\n          tx1 = tx2 = x1 = x2 = alignedLineValue;\n        } else {\n          ty1 = ty2 = y1 = y2 = alignedLineValue;\n        }\n        items.push({\n          tx1,\n          ty1,\n          tx2,\n          ty2,\n          x1,\n          y1,\n          x2,\n          y2,\n          width: lineWidth,\n          color: lineColor,\n          borderDash,\n          borderDashOffset,\n          tickWidth,\n          tickColor,\n          tickBorderDash,\n          tickBorderDashOffset\n        });\n      }\n      me._ticksLength = ticksLength;\n      me._borderValue = borderValue;\n      return items;\n    }\n    _computeLabelItems(chartArea) {\n      const me = this;\n      const axis = me.axis;\n      const options = me.options;\n      const {\n        position,\n        ticks: optionTicks\n      } = options;\n      const isHorizontal = me.isHorizontal();\n      const ticks = me.ticks;\n      const {\n        align,\n        crossAlign,\n        padding,\n        mirror\n      } = optionTicks;\n      const tl = getTickMarkLength(options.grid);\n      const tickAndPadding = tl + padding;\n      const hTickAndPadding = mirror ? -padding : tickAndPadding;\n      const rotation = -toRadians(me.labelRotation);\n      const items = [];\n      let i, ilen, tick, label, x, y, textAlign, pixel, font, lineHeight, lineCount, textOffset;\n      let textBaseline = 'middle';\n      if (position === 'top') {\n        y = me.bottom - hTickAndPadding;\n        textAlign = me._getXAxisLabelAlignment();\n      } else if (position === 'bottom') {\n        y = me.top + hTickAndPadding;\n        textAlign = me._getXAxisLabelAlignment();\n      } else if (position === 'left') {\n        const ret = me._getYAxisLabelAlignment(tl);\n        textAlign = ret.textAlign;\n        x = ret.x;\n      } else if (position === 'right') {\n        const ret = me._getYAxisLabelAlignment(tl);\n        textAlign = ret.textAlign;\n        x = ret.x;\n      } else if (axis === 'x') {\n        if (position === 'center') {\n          y = (chartArea.top + chartArea.bottom) / 2 + tickAndPadding;\n        } else if (isObject(position)) {\n          const positionAxisID = Object.keys(position)[0];\n          const value = position[positionAxisID];\n          y = me.chart.scales[positionAxisID].getPixelForValue(value) + tickAndPadding;\n        }\n        textAlign = me._getXAxisLabelAlignment();\n      } else if (axis === 'y') {\n        if (position === 'center') {\n          x = (chartArea.left + chartArea.right) / 2 - tickAndPadding;\n        } else if (isObject(position)) {\n          const positionAxisID = Object.keys(position)[0];\n          const value = position[positionAxisID];\n          x = me.chart.scales[positionAxisID].getPixelForValue(value);\n        }\n        textAlign = me._getYAxisLabelAlignment(tl).textAlign;\n      }\n      if (axis === 'y') {\n        if (align === 'start') {\n          textBaseline = 'top';\n        } else if (align === 'end') {\n          textBaseline = 'bottom';\n        }\n      }\n      const labelSizes = me._getLabelSizes();\n      for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n        tick = ticks[i];\n        label = tick.label;\n        const optsAtIndex = optionTicks.setContext(me.getContext(i));\n        pixel = me.getPixelForTick(i) + optionTicks.labelOffset;\n        font = me._resolveTickFontOptions(i);\n        lineHeight = font.lineHeight;\n        lineCount = isArray(label) ? label.length : 1;\n        const halfCount = lineCount / 2;\n        const color = optsAtIndex.color;\n        const strokeColor = optsAtIndex.textStrokeColor;\n        const strokeWidth = optsAtIndex.textStrokeWidth;\n        if (isHorizontal) {\n          x = pixel;\n          if (position === 'top') {\n            if (crossAlign === 'near' || rotation !== 0) {\n              textOffset = -lineCount * lineHeight + lineHeight / 2;\n            } else if (crossAlign === 'center') {\n              textOffset = -labelSizes.highest.height / 2 - halfCount * lineHeight + lineHeight;\n            } else {\n              textOffset = -labelSizes.highest.height + lineHeight / 2;\n            }\n          } else {\n            if (crossAlign === 'near' || rotation !== 0) {\n              textOffset = lineHeight / 2;\n            } else if (crossAlign === 'center') {\n              textOffset = labelSizes.highest.height / 2 - halfCount * lineHeight;\n            } else {\n              textOffset = labelSizes.highest.height - lineCount * lineHeight;\n            }\n          }\n          if (mirror) {\n            textOffset *= -1;\n          }\n        } else {\n          y = pixel;\n          textOffset = (1 - lineCount) * lineHeight / 2;\n        }\n        let backdrop;\n        if (optsAtIndex.showLabelBackdrop) {\n          const labelPadding = toPadding(optsAtIndex.backdropPadding);\n          const height = labelSizes.heights[i];\n          const width = labelSizes.widths[i];\n          let top = y + textOffset - labelPadding.top;\n          let left = x - labelPadding.left;\n          switch (textBaseline) {\n            case 'middle':\n              top -= height / 2;\n              break;\n            case 'bottom':\n              top -= height;\n              break;\n          }\n          switch (textAlign) {\n            case 'center':\n              left -= width / 2;\n              break;\n            case 'right':\n              left -= width;\n              break;\n          }\n          backdrop = {\n            left,\n            top,\n            width: width + labelPadding.width,\n            height: height + labelPadding.height,\n            color: optsAtIndex.backdropColor\n          };\n        }\n        items.push({\n          rotation,\n          label,\n          font,\n          color,\n          strokeColor,\n          strokeWidth,\n          textOffset,\n          textAlign,\n          textBaseline,\n          translation: [x, y],\n          backdrop\n        });\n      }\n      return items;\n    }\n    _getXAxisLabelAlignment() {\n      const me = this;\n      const {\n        position,\n        ticks\n      } = me.options;\n      const rotation = -toRadians(me.labelRotation);\n      if (rotation) {\n        return position === 'top' ? 'left' : 'right';\n      }\n      let align = 'center';\n      if (ticks.align === 'start') {\n        align = 'left';\n      } else if (ticks.align === 'end') {\n        align = 'right';\n      }\n      return align;\n    }\n    _getYAxisLabelAlignment(tl) {\n      const me = this;\n      const {\n        position,\n        ticks: {\n          crossAlign,\n          mirror,\n          padding\n        }\n      } = me.options;\n      const labelSizes = me._getLabelSizes();\n      const tickAndPadding = tl + padding;\n      const widest = labelSizes.widest.width;\n      let textAlign;\n      let x;\n      if (position === 'left') {\n        if (mirror) {\n          textAlign = 'left';\n          x = me.right + padding;\n        } else {\n          x = me.right - tickAndPadding;\n          if (crossAlign === 'near') {\n            textAlign = 'right';\n          } else if (crossAlign === 'center') {\n            textAlign = 'center';\n            x -= widest / 2;\n          } else {\n            textAlign = 'left';\n            x = me.left;\n          }\n        }\n      } else if (position === 'right') {\n        if (mirror) {\n          textAlign = 'right';\n          x = me.left + padding;\n        } else {\n          x = me.left + tickAndPadding;\n          if (crossAlign === 'near') {\n            textAlign = 'left';\n          } else if (crossAlign === 'center') {\n            textAlign = 'center';\n            x += widest / 2;\n          } else {\n            textAlign = 'right';\n            x = me.right;\n          }\n        }\n      } else {\n        textAlign = 'right';\n      }\n      return {\n        textAlign,\n        x\n      };\n    }\n    _computeLabelArea() {\n      const me = this;\n      if (me.options.ticks.mirror) {\n        return;\n      }\n      const chart = me.chart;\n      const position = me.options.position;\n      if (position === 'left' || position === 'right') {\n        return {\n          top: 0,\n          left: me.left,\n          bottom: chart.height,\n          right: me.right\n        };\n      }\n      if (position === 'top' || position === 'bottom') {\n        return {\n          top: me.top,\n          left: 0,\n          bottom: me.bottom,\n          right: chart.width\n        };\n      }\n    }\n    drawBackground() {\n      const {\n        ctx,\n        options: {\n          backgroundColor\n        },\n        left,\n        top,\n        width,\n        height\n      } = this;\n      if (backgroundColor) {\n        ctx.save();\n        ctx.fillStyle = backgroundColor;\n        ctx.fillRect(left, top, width, height);\n        ctx.restore();\n      }\n    }\n    getLineWidthForValue(value) {\n      const me = this;\n      const grid = me.options.grid;\n      if (!me._isVisible() || !grid.display) {\n        return 0;\n      }\n      const ticks = me.ticks;\n      const index = ticks.findIndex(t => t.value === value);\n      if (index >= 0) {\n        const opts = grid.setContext(me.getContext(index));\n        return opts.lineWidth;\n      }\n      return 0;\n    }\n    drawGrid(chartArea) {\n      const me = this;\n      const grid = me.options.grid;\n      const ctx = me.ctx;\n      const items = me._gridLineItems || (me._gridLineItems = me._computeGridLineItems(chartArea));\n      let i, ilen;\n      const drawLine = (p1, p2, style) => {\n        if (!style.width || !style.color) {\n          return;\n        }\n        ctx.save();\n        ctx.lineWidth = style.width;\n        ctx.strokeStyle = style.color;\n        ctx.setLineDash(style.borderDash || []);\n        ctx.lineDashOffset = style.borderDashOffset;\n        ctx.beginPath();\n        ctx.moveTo(p1.x, p1.y);\n        ctx.lineTo(p2.x, p2.y);\n        ctx.stroke();\n        ctx.restore();\n      };\n      if (grid.display) {\n        for (i = 0, ilen = items.length; i < ilen; ++i) {\n          const item = items[i];\n          if (grid.drawOnChartArea) {\n            drawLine({\n              x: item.x1,\n              y: item.y1\n            }, {\n              x: item.x2,\n              y: item.y2\n            }, item);\n          }\n          if (grid.drawTicks) {\n            drawLine({\n              x: item.tx1,\n              y: item.ty1\n            }, {\n              x: item.tx2,\n              y: item.ty2\n            }, {\n              color: item.tickColor,\n              width: item.tickWidth,\n              borderDash: item.tickBorderDash,\n              borderDashOffset: item.tickBorderDashOffset\n            });\n          }\n        }\n      }\n    }\n    drawBorder() {\n      const me = this;\n      const {\n        chart,\n        ctx,\n        options: {\n          grid\n        }\n      } = me;\n      const borderOpts = grid.setContext(me.getContext());\n      const axisWidth = grid.drawBorder ? borderOpts.borderWidth : 0;\n      if (!axisWidth) {\n        return;\n      }\n      const lastLineWidth = grid.setContext(me.getContext(0)).lineWidth;\n      const borderValue = me._borderValue;\n      let x1, x2, y1, y2;\n      if (me.isHorizontal()) {\n        x1 = _alignPixel(chart, me.left, axisWidth) - axisWidth / 2;\n        x2 = _alignPixel(chart, me.right, lastLineWidth) + lastLineWidth / 2;\n        y1 = y2 = borderValue;\n      } else {\n        y1 = _alignPixel(chart, me.top, axisWidth) - axisWidth / 2;\n        y2 = _alignPixel(chart, me.bottom, lastLineWidth) + lastLineWidth / 2;\n        x1 = x2 = borderValue;\n      }\n      ctx.save();\n      ctx.lineWidth = borderOpts.borderWidth;\n      ctx.strokeStyle = borderOpts.borderColor;\n      ctx.beginPath();\n      ctx.moveTo(x1, y1);\n      ctx.lineTo(x2, y2);\n      ctx.stroke();\n      ctx.restore();\n    }\n    drawLabels(chartArea) {\n      const me = this;\n      const optionTicks = me.options.ticks;\n      if (!optionTicks.display) {\n        return;\n      }\n      const ctx = me.ctx;\n      const area = me._computeLabelArea();\n      if (area) {\n        clipArea(ctx, area);\n      }\n      const items = me._labelItems || (me._labelItems = me._computeLabelItems(chartArea));\n      let i, ilen;\n      for (i = 0, ilen = items.length; i < ilen; ++i) {\n        const item = items[i];\n        const tickFont = item.font;\n        const label = item.label;\n        if (item.backdrop) {\n          ctx.fillStyle = item.backdrop.color;\n          ctx.fillRect(item.backdrop.left, item.backdrop.top, item.backdrop.width, item.backdrop.height);\n        }\n        let y = item.textOffset;\n        renderText(ctx, label, 0, y, tickFont, item);\n      }\n      if (area) {\n        unclipArea(ctx);\n      }\n    }\n    drawTitle() {\n      const {\n        ctx,\n        options: {\n          position,\n          title,\n          reverse\n        }\n      } = this;\n      if (!title.display) {\n        return;\n      }\n      const font = toFont(title.font);\n      const padding = toPadding(title.padding);\n      const align = title.align;\n      let offset = font.lineHeight / 2;\n      if (position === 'bottom') {\n        offset += padding.bottom;\n        if (isArray(title.text)) {\n          offset += font.lineHeight * (title.text.length - 1);\n        }\n      } else {\n        offset += padding.top;\n      }\n      const {\n        titleX,\n        titleY,\n        maxWidth,\n        rotation\n      } = titleArgs(this, offset, position, align);\n      renderText(ctx, title.text, 0, 0, font, {\n        color: title.color,\n        maxWidth,\n        rotation,\n        textAlign: titleAlign(align, position, reverse),\n        textBaseline: 'middle',\n        translation: [titleX, titleY]\n      });\n    }\n    draw(chartArea) {\n      const me = this;\n      if (!me._isVisible()) {\n        return;\n      }\n      me.drawBackground();\n      me.drawGrid(chartArea);\n      me.drawBorder();\n      me.drawTitle();\n      me.drawLabels(chartArea);\n    }\n    _layers() {\n      const me = this;\n      const opts = me.options;\n      const tz = opts.ticks && opts.ticks.z || 0;\n      const gz = opts.grid && opts.grid.z || 0;\n      if (!me._isVisible() || me.draw !== Scale.prototype.draw) {\n        return [{\n          z: tz,\n          draw(chartArea) {\n            me.draw(chartArea);\n          }\n        }];\n      }\n      return [{\n        z: gz,\n        draw(chartArea) {\n          me.drawBackground();\n          me.drawGrid(chartArea);\n          me.drawTitle();\n        }\n      }, {\n        z: gz + 1,\n        draw() {\n          me.drawBorder();\n        }\n      }, {\n        z: tz,\n        draw(chartArea) {\n          me.drawLabels(chartArea);\n        }\n      }];\n    }\n    getMatchingVisibleMetas(type) {\n      const me = this;\n      const metas = me.chart.getSortedVisibleDatasetMetas();\n      const axisID = me.axis + 'AxisID';\n      const result = [];\n      let i, ilen;\n      for (i = 0, ilen = metas.length; i < ilen; ++i) {\n        const meta = metas[i];\n        if (meta[axisID] === me.id && (!type || meta.type === type)) {\n          result.push(meta);\n        }\n      }\n      return result;\n    }\n    _resolveTickFontOptions(index) {\n      const opts = this.options.ticks.setContext(this.getContext(index));\n      return toFont(opts.font);\n    }\n    _maxDigits() {\n      const me = this;\n      const fontSize = me._resolveTickFontOptions(0).lineHeight;\n      return (me.isHorizontal() ? me.width : me.height) / fontSize;\n    }\n  }\n  function _createResolver(scopes) {\n    let prefixes = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [''];\n    let rootScopes = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : scopes;\n    let fallback = arguments.length > 3 ? arguments[3] : undefined;\n    let getTarget = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : () => scopes[0];\n    if (!defined(fallback)) {\n      fallback = _resolve('_fallback', scopes);\n    }\n    const cache = {\n      [Symbol.toStringTag]: 'Object',\n      _cacheable: true,\n      _scopes: scopes,\n      _rootScopes: rootScopes,\n      _fallback: fallback,\n      _getTarget: getTarget,\n      override: scope => _createResolver([scope, ...scopes], prefixes, rootScopes, fallback)\n    };\n    return new Proxy(cache, {\n      deleteProperty(target, prop) {\n        delete target[prop];\n        delete target._keys;\n        delete scopes[0][prop];\n        return true;\n      },\n      get(target, prop) {\n        return _cached(target, prop, () => _resolveWithPrefixes(prop, prefixes, scopes, target));\n      },\n      getOwnPropertyDescriptor(target, prop) {\n        return Reflect.getOwnPropertyDescriptor(target._scopes[0], prop);\n      },\n      getPrototypeOf() {\n        return Reflect.getPrototypeOf(scopes[0]);\n      },\n      has(target, prop) {\n        return getKeysFromAllScopes(target).includes(prop);\n      },\n      ownKeys(target) {\n        return getKeysFromAllScopes(target);\n      },\n      set(target, prop, value) {\n        const storage = target._storage || (target._storage = getTarget());\n        storage[prop] = value;\n        delete target[prop];\n        delete target._keys;\n        return true;\n      }\n    });\n  }\n  function _attachContext(proxy, context, subProxy, descriptorDefaults) {\n    const cache = {\n      _cacheable: false,\n      _proxy: proxy,\n      _context: context,\n      _subProxy: subProxy,\n      _stack: new Set(),\n      _descriptors: _descriptors(proxy, descriptorDefaults),\n      setContext: ctx => _attachContext(proxy, ctx, subProxy, descriptorDefaults),\n      override: scope => _attachContext(proxy.override(scope), context, subProxy, descriptorDefaults)\n    };\n    return new Proxy(cache, {\n      deleteProperty(target, prop) {\n        delete target[prop];\n        delete proxy[prop];\n        return true;\n      },\n      get(target, prop, receiver) {\n        return _cached(target, prop, () => _resolveWithContext(target, prop, receiver));\n      },\n      getOwnPropertyDescriptor(target, prop) {\n        return target._descriptors.allKeys ? Reflect.has(proxy, prop) ? {\n          enumerable: true,\n          configurable: true\n        } : undefined : Reflect.getOwnPropertyDescriptor(proxy, prop);\n      },\n      getPrototypeOf() {\n        return Reflect.getPrototypeOf(proxy);\n      },\n      has(target, prop) {\n        return Reflect.has(proxy, prop);\n      },\n      ownKeys() {\n        return Reflect.ownKeys(proxy);\n      },\n      set(target, prop, value) {\n        proxy[prop] = value;\n        delete target[prop];\n        return true;\n      }\n    });\n  }\n  function _descriptors(proxy) {\n    let defaults = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {\n      scriptable: true,\n      indexable: true\n    };\n    const {\n      _scriptable = defaults.scriptable,\n      _indexable = defaults.indexable,\n      _allKeys = defaults.allKeys\n    } = proxy;\n    return {\n      allKeys: _allKeys,\n      scriptable: _scriptable,\n      indexable: _indexable,\n      isScriptable: isFunction(_scriptable) ? _scriptable : () => _scriptable,\n      isIndexable: isFunction(_indexable) ? _indexable : () => _indexable\n    };\n  }\n  const readKey = (prefix, name) => prefix ? prefix + _capitalize(name) : name;\n  const needsSubResolver = (prop, value) => isObject(value) && prop !== 'adapters';\n  function _cached(target, prop, resolve) {\n    let value = target[prop];\n    if (defined(value)) {\n      return value;\n    }\n    value = resolve();\n    if (defined(value)) {\n      target[prop] = value;\n    }\n    return value;\n  }\n  function _resolveWithContext(target, prop, receiver) {\n    const {\n      _proxy,\n      _context,\n      _subProxy,\n      _descriptors: descriptors\n    } = target;\n    let value = _proxy[prop];\n    if (isFunction(value) && descriptors.isScriptable(prop)) {\n      value = _resolveScriptable(prop, value, target, receiver);\n    }\n    if (isArray(value) && value.length) {\n      value = _resolveArray(prop, value, target, descriptors.isIndexable);\n    }\n    if (needsSubResolver(prop, value)) {\n      value = _attachContext(value, _context, _subProxy && _subProxy[prop], descriptors);\n    }\n    return value;\n  }\n  function _resolveScriptable(prop, value, target, receiver) {\n    const {\n      _proxy,\n      _context,\n      _subProxy,\n      _stack\n    } = target;\n    if (_stack.has(prop)) {\n      throw new Error('Recursion detected: ' + [..._stack].join('->') + '->' + prop);\n    }\n    _stack.add(prop);\n    value = value(_context, _subProxy || receiver);\n    _stack.delete(prop);\n    if (isObject(value)) {\n      value = createSubResolver(_proxy._scopes, _proxy, prop, value);\n    }\n    return value;\n  }\n  function _resolveArray(prop, value, target, isIndexable) {\n    const {\n      _proxy,\n      _context,\n      _subProxy,\n      _descriptors: descriptors\n    } = target;\n    if (defined(_context.index) && isIndexable(prop)) {\n      value = value[_context.index % value.length];\n    } else if (isObject(value[0])) {\n      const arr = value;\n      const scopes = _proxy._scopes.filter(s => s !== arr);\n      value = [];\n      for (const item of arr) {\n        const resolver = createSubResolver(scopes, _proxy, prop, item);\n        value.push(_attachContext(resolver, _context, _subProxy && _subProxy[prop], descriptors));\n      }\n    }\n    return value;\n  }\n  function resolveFallback(fallback, prop, value) {\n    return isFunction(fallback) ? fallback(prop, value) : fallback;\n  }\n  const getScope = (key, parent) => key === true ? parent : typeof key === 'string' ? resolveObjectKey(parent, key) : undefined;\n  function addScopes(set, parentScopes, key, parentFallback) {\n    for (const parent of parentScopes) {\n      const scope = getScope(key, parent);\n      if (scope) {\n        set.add(scope);\n        const fallback = resolveFallback(scope._fallback, key, scope);\n        if (defined(fallback) && fallback !== key && fallback !== parentFallback) {\n          return fallback;\n        }\n      } else if (scope === false && defined(parentFallback) && key !== parentFallback) {\n        return null;\n      }\n    }\n    return false;\n  }\n  function createSubResolver(parentScopes, resolver, prop, value) {\n    const rootScopes = resolver._rootScopes;\n    const fallback = resolveFallback(resolver._fallback, prop, value);\n    const allScopes = [...parentScopes, ...rootScopes];\n    const set = new Set();\n    set.add(value);\n    let key = addScopesFromKey(set, allScopes, prop, fallback || prop);\n    if (key === null) {\n      return false;\n    }\n    if (defined(fallback) && fallback !== prop) {\n      key = addScopesFromKey(set, allScopes, fallback, key);\n      if (key === null) {\n        return false;\n      }\n    }\n    return _createResolver([...set], [''], rootScopes, fallback, () => subGetTarget(resolver, prop, value));\n  }\n  function addScopesFromKey(set, allScopes, key, fallback) {\n    while (key) {\n      key = addScopes(set, allScopes, key, fallback);\n    }\n    return key;\n  }\n  function subGetTarget(resolver, prop, value) {\n    const parent = resolver._getTarget();\n    if (!(prop in parent)) {\n      parent[prop] = {};\n    }\n    const target = parent[prop];\n    if (isArray(target) && isObject(value)) {\n      return value;\n    }\n    return target;\n  }\n  function _resolveWithPrefixes(prop, prefixes, scopes, proxy) {\n    let value;\n    for (const prefix of prefixes) {\n      value = _resolve(readKey(prefix, prop), scopes);\n      if (defined(value)) {\n        return needsSubResolver(prop, value) ? createSubResolver(scopes, proxy, prop, value) : value;\n      }\n    }\n  }\n  function _resolve(key, scopes) {\n    for (const scope of scopes) {\n      if (!scope) {\n        continue;\n      }\n      const value = scope[key];\n      if (defined(value)) {\n        return value;\n      }\n    }\n  }\n  function getKeysFromAllScopes(target) {\n    let keys = target._keys;\n    if (!keys) {\n      keys = target._keys = resolveKeysFromAllScopes(target._scopes);\n    }\n    return keys;\n  }\n  function resolveKeysFromAllScopes(scopes) {\n    const set = new Set();\n    for (const scope of scopes) {\n      for (const key of Object.keys(scope).filter(k => !k.startsWith('_'))) {\n        set.add(key);\n      }\n    }\n    return [...set];\n  }\n  const EPSILON = Number.EPSILON || 1e-14;\n  const getPoint = (points, i) => i < points.length && !points[i].skip && points[i];\n  const getValueAxis = indexAxis => indexAxis === 'x' ? 'y' : 'x';\n  function splineCurve(firstPoint, middlePoint, afterPoint, t) {\n    const previous = firstPoint.skip ? middlePoint : firstPoint;\n    const current = middlePoint;\n    const next = afterPoint.skip ? middlePoint : afterPoint;\n    const d01 = distanceBetweenPoints(current, previous);\n    const d12 = distanceBetweenPoints(next, current);\n    let s01 = d01 / (d01 + d12);\n    let s12 = d12 / (d01 + d12);\n    s01 = isNaN(s01) ? 0 : s01;\n    s12 = isNaN(s12) ? 0 : s12;\n    const fa = t * s01;\n    const fb = t * s12;\n    return {\n      previous: {\n        x: current.x - fa * (next.x - previous.x),\n        y: current.y - fa * (next.y - previous.y)\n      },\n      next: {\n        x: current.x + fb * (next.x - previous.x),\n        y: current.y + fb * (next.y - previous.y)\n      }\n    };\n  }\n  function monotoneAdjust(points, deltaK, mK) {\n    const pointsLen = points.length;\n    let alphaK, betaK, tauK, squaredMagnitude, pointCurrent;\n    let pointAfter = getPoint(points, 0);\n    for (let i = 0; i < pointsLen - 1; ++i) {\n      pointCurrent = pointAfter;\n      pointAfter = getPoint(points, i + 1);\n      if (!pointCurrent || !pointAfter) {\n        continue;\n      }\n      if (almostEquals(deltaK[i], 0, EPSILON)) {\n        mK[i] = mK[i + 1] = 0;\n        continue;\n      }\n      alphaK = mK[i] / deltaK[i];\n      betaK = mK[i + 1] / deltaK[i];\n      squaredMagnitude = Math.pow(alphaK, 2) + Math.pow(betaK, 2);\n      if (squaredMagnitude <= 9) {\n        continue;\n      }\n      tauK = 3 / Math.sqrt(squaredMagnitude);\n      mK[i] = alphaK * tauK * deltaK[i];\n      mK[i + 1] = betaK * tauK * deltaK[i];\n    }\n  }\n  function monotoneCompute(points, mK) {\n    let indexAxis = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 'x';\n    const valueAxis = getValueAxis(indexAxis);\n    const pointsLen = points.length;\n    let delta, pointBefore, pointCurrent;\n    let pointAfter = getPoint(points, 0);\n    for (let i = 0; i < pointsLen; ++i) {\n      pointBefore = pointCurrent;\n      pointCurrent = pointAfter;\n      pointAfter = getPoint(points, i + 1);\n      if (!pointCurrent) {\n        continue;\n      }\n      const iPixel = pointCurrent[indexAxis];\n      const vPixel = pointCurrent[valueAxis];\n      if (pointBefore) {\n        delta = (iPixel - pointBefore[indexAxis]) / 3;\n        pointCurrent[`cp1${indexAxis}`] = iPixel - delta;\n        pointCurrent[`cp1${valueAxis}`] = vPixel - delta * mK[i];\n      }\n      if (pointAfter) {\n        delta = (pointAfter[indexAxis] - iPixel) / 3;\n        pointCurrent[`cp2${indexAxis}`] = iPixel + delta;\n        pointCurrent[`cp2${valueAxis}`] = vPixel + delta * mK[i];\n      }\n    }\n  }\n  function splineCurveMonotone(points) {\n    let indexAxis = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'x';\n    const valueAxis = getValueAxis(indexAxis);\n    const pointsLen = points.length;\n    const deltaK = Array(pointsLen).fill(0);\n    const mK = Array(pointsLen);\n    let i, pointBefore, pointCurrent;\n    let pointAfter = getPoint(points, 0);\n    for (i = 0; i < pointsLen; ++i) {\n      pointBefore = pointCurrent;\n      pointCurrent = pointAfter;\n      pointAfter = getPoint(points, i + 1);\n      if (!pointCurrent) {\n        continue;\n      }\n      if (pointAfter) {\n        const slopeDelta = pointAfter[indexAxis] - pointCurrent[indexAxis];\n        deltaK[i] = slopeDelta !== 0 ? (pointAfter[valueAxis] - pointCurrent[valueAxis]) / slopeDelta : 0;\n      }\n      mK[i] = !pointBefore ? deltaK[i] : !pointAfter ? deltaK[i - 1] : sign(deltaK[i - 1]) !== sign(deltaK[i]) ? 0 : (deltaK[i - 1] + deltaK[i]) / 2;\n    }\n    monotoneAdjust(points, deltaK, mK);\n    monotoneCompute(points, mK, indexAxis);\n  }\n  function capControlPoint(pt, min, max) {\n    return Math.max(Math.min(pt, max), min);\n  }\n  function capBezierPoints(points, area) {\n    let i, ilen, point, inArea, inAreaPrev;\n    let inAreaNext = _isPointInArea(points[0], area);\n    for (i = 0, ilen = points.length; i < ilen; ++i) {\n      inAreaPrev = inArea;\n      inArea = inAreaNext;\n      inAreaNext = i < ilen - 1 && _isPointInArea(points[i + 1], area);\n      if (!inArea) {\n        continue;\n      }\n      point = points[i];\n      if (inAreaPrev) {\n        point.cp1x = capControlPoint(point.cp1x, area.left, area.right);\n        point.cp1y = capControlPoint(point.cp1y, area.top, area.bottom);\n      }\n      if (inAreaNext) {\n        point.cp2x = capControlPoint(point.cp2x, area.left, area.right);\n        point.cp2y = capControlPoint(point.cp2y, area.top, area.bottom);\n      }\n    }\n  }\n  function _updateBezierControlPoints(points, options, area, loop, indexAxis) {\n    let i, ilen, point, controlPoints;\n    if (options.spanGaps) {\n      points = points.filter(pt => !pt.skip);\n    }\n    if (options.cubicInterpolationMode === 'monotone') {\n      splineCurveMonotone(points, indexAxis);\n    } else {\n      let prev = loop ? points[points.length - 1] : points[0];\n      for (i = 0, ilen = points.length; i < ilen; ++i) {\n        point = points[i];\n        controlPoints = splineCurve(prev, point, points[Math.min(i + 1, ilen - (loop ? 0 : 1)) % ilen], options.tension);\n        point.cp1x = controlPoints.previous.x;\n        point.cp1y = controlPoints.previous.y;\n        point.cp2x = controlPoints.next.x;\n        point.cp2y = controlPoints.next.y;\n        prev = point;\n      }\n    }\n    if (options.capBezierPoints) {\n      capBezierPoints(points, area);\n    }\n  }\n  function _pointInLine(p1, p2, t, mode) {\n    return {\n      x: p1.x + t * (p2.x - p1.x),\n      y: p1.y + t * (p2.y - p1.y)\n    };\n  }\n  function _steppedInterpolation(p1, p2, t, mode) {\n    return {\n      x: p1.x + t * (p2.x - p1.x),\n      y: mode === 'middle' ? t < 0.5 ? p1.y : p2.y : mode === 'after' ? t < 1 ? p1.y : p2.y : t > 0 ? p2.y : p1.y\n    };\n  }\n  function _bezierInterpolation(p1, p2, t, mode) {\n    const cp1 = {\n      x: p1.cp2x,\n      y: p1.cp2y\n    };\n    const cp2 = {\n      x: p2.cp1x,\n      y: p2.cp1y\n    };\n    const a = _pointInLine(p1, cp1, t);\n    const b = _pointInLine(cp1, cp2, t);\n    const c = _pointInLine(cp2, p2, t);\n    const d = _pointInLine(a, b, t);\n    const e = _pointInLine(b, c, t);\n    return _pointInLine(d, e, t);\n  }\n  const getRightToLeftAdapter = function (rectX, width) {\n    return {\n      x(x) {\n        return rectX + rectX + width - x;\n      },\n      setWidth(w) {\n        width = w;\n      },\n      textAlign(align) {\n        if (align === 'center') {\n          return align;\n        }\n        return align === 'right' ? 'left' : 'right';\n      },\n      xPlus(x, value) {\n        return x - value;\n      },\n      leftForLtr(x, itemWidth) {\n        return x - itemWidth;\n      }\n    };\n  };\n  const getLeftToRightAdapter = function () {\n    return {\n      x(x) {\n        return x;\n      },\n      setWidth(w) {},\n      textAlign(align) {\n        return align;\n      },\n      xPlus(x, value) {\n        return x + value;\n      },\n      leftForLtr(x, _itemWidth) {\n        return x;\n      }\n    };\n  };\n  function getRtlAdapter(rtl, rectX, width) {\n    return rtl ? getRightToLeftAdapter(rectX, width) : getLeftToRightAdapter();\n  }\n  function overrideTextDirection(ctx, direction) {\n    let style, original;\n    if (direction === 'ltr' || direction === 'rtl') {\n      style = ctx.canvas.style;\n      original = [style.getPropertyValue('direction'), style.getPropertyPriority('direction')];\n      style.setProperty('direction', direction, 'important');\n      ctx.prevTextDirection = original;\n    }\n  }\n  function restoreTextDirection(ctx, original) {\n    if (original !== undefined) {\n      delete ctx.prevTextDirection;\n      ctx.canvas.style.setProperty('direction', original[0], original[1]);\n    }\n  }\n  function propertyFn(property) {\n    if (property === 'angle') {\n      return {\n        between: _angleBetween,\n        compare: _angleDiff,\n        normalize: _normalizeAngle\n      };\n    }\n    return {\n      between: (n, s, e) => n >= Math.min(s, e) && n <= Math.max(e, s),\n      compare: (a, b) => a - b,\n      normalize: x => x\n    };\n  }\n  function normalizeSegment(_ref) {\n    let {\n      start,\n      end,\n      count,\n      loop,\n      style\n    } = _ref;\n    return {\n      start: start % count,\n      end: end % count,\n      loop: loop && (end - start + 1) % count === 0,\n      style\n    };\n  }\n  function getSegment(segment, points, bounds) {\n    const {\n      property,\n      start: startBound,\n      end: endBound\n    } = bounds;\n    const {\n      between,\n      normalize\n    } = propertyFn(property);\n    const count = points.length;\n    let {\n      start,\n      end,\n      loop\n    } = segment;\n    let i, ilen;\n    if (loop) {\n      start += count;\n      end += count;\n      for (i = 0, ilen = count; i < ilen; ++i) {\n        if (!between(normalize(points[start % count][property]), startBound, endBound)) {\n          break;\n        }\n        start--;\n        end--;\n      }\n      start %= count;\n      end %= count;\n    }\n    if (end < start) {\n      end += count;\n    }\n    return {\n      start,\n      end,\n      loop,\n      style: segment.style\n    };\n  }\n  function _boundSegment(segment, points, bounds) {\n    if (!bounds) {\n      return [segment];\n    }\n    const {\n      property,\n      start: startBound,\n      end: endBound\n    } = bounds;\n    const count = points.length;\n    const {\n      compare,\n      between,\n      normalize\n    } = propertyFn(property);\n    const {\n      start,\n      end,\n      loop,\n      style\n    } = getSegment(segment, points, bounds);\n    const result = [];\n    let inside = false;\n    let subStart = null;\n    let value, point, prevValue;\n    const startIsBefore = () => between(startBound, prevValue, value) && compare(startBound, prevValue) !== 0;\n    const endIsBefore = () => compare(endBound, value) === 0 || between(endBound, prevValue, value);\n    const shouldStart = () => inside || startIsBefore();\n    const shouldStop = () => !inside || endIsBefore();\n    for (let i = start, prev = start; i <= end; ++i) {\n      point = points[i % count];\n      if (point.skip) {\n        continue;\n      }\n      value = normalize(point[property]);\n      if (value === prevValue) {\n        continue;\n      }\n      inside = between(value, startBound, endBound);\n      if (subStart === null && shouldStart()) {\n        subStart = compare(value, startBound) === 0 ? i : prev;\n      }\n      if (subStart !== null && shouldStop()) {\n        result.push(normalizeSegment({\n          start: subStart,\n          end: i,\n          loop,\n          count,\n          style\n        }));\n        subStart = null;\n      }\n      prev = i;\n      prevValue = value;\n    }\n    if (subStart !== null) {\n      result.push(normalizeSegment({\n        start: subStart,\n        end,\n        loop,\n        count,\n        style\n      }));\n    }\n    return result;\n  }\n  function _boundSegments(line, bounds) {\n    const result = [];\n    const segments = line.segments;\n    for (let i = 0; i < segments.length; i++) {\n      const sub = _boundSegment(segments[i], line.points, bounds);\n      if (sub.length) {\n        result.push(...sub);\n      }\n    }\n    return result;\n  }\n  function findStartAndEnd(points, count, loop, spanGaps) {\n    let start = 0;\n    let end = count - 1;\n    if (loop && !spanGaps) {\n      while (start < count && !points[start].skip) {\n        start++;\n      }\n    }\n    while (start < count && points[start].skip) {\n      start++;\n    }\n    start %= count;\n    if (loop) {\n      end += start;\n    }\n    while (end > start && points[end % count].skip) {\n      end--;\n    }\n    end %= count;\n    return {\n      start,\n      end\n    };\n  }\n  function solidSegments(points, start, max, loop) {\n    const count = points.length;\n    const result = [];\n    let last = start;\n    let prev = points[start];\n    let end;\n    for (end = start + 1; end <= max; ++end) {\n      const cur = points[end % count];\n      if (cur.skip || cur.stop) {\n        if (!prev.skip) {\n          loop = false;\n          result.push({\n            start: start % count,\n            end: (end - 1) % count,\n            loop\n          });\n          start = last = cur.stop ? end : null;\n        }\n      } else {\n        last = end;\n        if (prev.skip) {\n          start = end;\n        }\n      }\n      prev = cur;\n    }\n    if (last !== null) {\n      result.push({\n        start: start % count,\n        end: last % count,\n        loop\n      });\n    }\n    return result;\n  }\n  function _computeSegments(line, segmentOptions) {\n    const points = line.points;\n    const spanGaps = line.options.spanGaps;\n    const count = points.length;\n    if (!count) {\n      return [];\n    }\n    const loop = !!line._loop;\n    const {\n      start,\n      end\n    } = findStartAndEnd(points, count, loop, spanGaps);\n    if (spanGaps === true) {\n      return splitByStyles([{\n        start,\n        end,\n        loop\n      }], points, segmentOptions);\n    }\n    const max = end < start ? end + count : end;\n    const completeLoop = !!line._fullLoop && start === 0 && end === count - 1;\n    return splitByStyles(solidSegments(points, start, max, completeLoop), points, segmentOptions);\n  }\n  function splitByStyles(segments, points, segmentOptions) {\n    if (!segmentOptions || !segmentOptions.setContext || !points) {\n      return segments;\n    }\n    return doSplitByStyles(segments, points, segmentOptions);\n  }\n  function doSplitByStyles(segments, points, segmentOptions) {\n    const count = points.length;\n    const result = [];\n    let start = segments[0].start;\n    let i = start;\n    for (const segment of segments) {\n      let prevStyle, style;\n      let prev = points[start % count];\n      for (i = start + 1; i <= segment.end; i++) {\n        const pt = points[i % count];\n        style = readStyle(segmentOptions.setContext({\n          type: 'segment',\n          p0: prev,\n          p1: pt\n        }));\n        if (styleChanged(style, prevStyle)) {\n          result.push({\n            start: start,\n            end: i - 1,\n            loop: segment.loop,\n            style: prevStyle\n          });\n          prevStyle = style;\n          start = i - 1;\n        }\n        prev = pt;\n        prevStyle = style;\n      }\n      if (start < i - 1) {\n        result.push({\n          start,\n          end: i - 1,\n          loop: segment.loop,\n          style\n        });\n        start = i - 1;\n      }\n    }\n    return result;\n  }\n  function readStyle(options) {\n    return {\n      backgroundColor: options.backgroundColor,\n      borderCapStyle: options.borderCapStyle,\n      borderDash: options.borderDash,\n      borderDashOffset: options.borderDashOffset,\n      borderJoinStyle: options.borderJoinStyle,\n      borderWidth: options.borderWidth,\n      borderColor: options.borderColor\n    };\n  }\n  function styleChanged(style, prevStyle) {\n    return prevStyle && JSON.stringify(style) !== JSON.stringify(prevStyle);\n  }\n  var helpers = /*#__PURE__*/Object.freeze({\n    __proto__: null,\n    easingEffects: effects,\n    color: color,\n    getHoverColor: getHoverColor,\n    noop: noop,\n    uid: uid,\n    isNullOrUndef: isNullOrUndef,\n    isArray: isArray,\n    isObject: isObject,\n    isFinite: isNumberFinite,\n    finiteOrDefault: finiteOrDefault,\n    valueOrDefault: valueOrDefault,\n    toPercentage: toPercentage,\n    toDimension: toDimension,\n    callback: callback,\n    each: each,\n    _elementsEqual: _elementsEqual,\n    clone: clone,\n    _merger: _merger,\n    merge: merge,\n    mergeIf: mergeIf,\n    _mergerIf: _mergerIf,\n    _deprecated: _deprecated,\n    resolveObjectKey: resolveObjectKey,\n    _capitalize: _capitalize,\n    defined: defined,\n    isFunction: isFunction,\n    setsEqual: setsEqual,\n    toFontString: toFontString,\n    _measureText: _measureText,\n    _longestText: _longestText,\n    _alignPixel: _alignPixel,\n    clearCanvas: clearCanvas,\n    drawPoint: drawPoint,\n    _isPointInArea: _isPointInArea,\n    clipArea: clipArea,\n    unclipArea: unclipArea,\n    _steppedLineTo: _steppedLineTo,\n    _bezierCurveTo: _bezierCurveTo,\n    renderText: renderText,\n    addRoundedRectPath: addRoundedRectPath,\n    _lookup: _lookup,\n    _lookupByKey: _lookupByKey,\n    _rlookupByKey: _rlookupByKey,\n    _filterBetween: _filterBetween,\n    listenArrayEvents: listenArrayEvents,\n    unlistenArrayEvents: unlistenArrayEvents,\n    _arrayUnique: _arrayUnique,\n    _createResolver: _createResolver,\n    _attachContext: _attachContext,\n    _descriptors: _descriptors,\n    splineCurve: splineCurve,\n    splineCurveMonotone: splineCurveMonotone,\n    _updateBezierControlPoints: _updateBezierControlPoints,\n    _getParentNode: _getParentNode,\n    getStyle: getStyle,\n    getRelativePosition: getRelativePosition$1,\n    getMaximumSize: getMaximumSize,\n    retinaScale: retinaScale,\n    supportsEventListenerOptions: supportsEventListenerOptions,\n    readUsedSize: readUsedSize,\n    fontString: fontString,\n    requestAnimFrame: requestAnimFrame,\n    throttled: throttled,\n    debounce: debounce,\n    _toLeftRightCenter: _toLeftRightCenter,\n    _alignStartEnd: _alignStartEnd,\n    _textX: _textX,\n    _pointInLine: _pointInLine,\n    _steppedInterpolation: _steppedInterpolation,\n    _bezierInterpolation: _bezierInterpolation,\n    formatNumber: formatNumber,\n    toLineHeight: toLineHeight,\n    _readValueToProps: _readValueToProps,\n    toTRBL: toTRBL,\n    toTRBLCorners: toTRBLCorners,\n    toPadding: toPadding,\n    toFont: toFont,\n    resolve: resolve,\n    _addGrace: _addGrace,\n    PI: PI,\n    TAU: TAU,\n    PITAU: PITAU,\n    INFINITY: INFINITY,\n    RAD_PER_DEG: RAD_PER_DEG,\n    HALF_PI: HALF_PI,\n    QUARTER_PI: QUARTER_PI,\n    TWO_THIRDS_PI: TWO_THIRDS_PI,\n    log10: log10,\n    sign: sign,\n    niceNum: niceNum,\n    _factorize: _factorize,\n    isNumber: isNumber,\n    almostEquals: almostEquals,\n    almostWhole: almostWhole,\n    _setMinAndMaxByKey: _setMinAndMaxByKey,\n    toRadians: toRadians,\n    toDegrees: toDegrees,\n    _decimalPlaces: _decimalPlaces,\n    getAngleFromPoint: getAngleFromPoint,\n    distanceBetweenPoints: distanceBetweenPoints,\n    _angleDiff: _angleDiff,\n    _normalizeAngle: _normalizeAngle,\n    _angleBetween: _angleBetween,\n    _limitValue: _limitValue,\n    _int16Range: _int16Range,\n    getRtlAdapter: getRtlAdapter,\n    overrideTextDirection: overrideTextDirection,\n    restoreTextDirection: restoreTextDirection,\n    _boundSegment: _boundSegment,\n    _boundSegments: _boundSegments,\n    _computeSegments: _computeSegments\n  });\n  class TypedRegistry {\n    constructor(type, scope, override) {\n      this.type = type;\n      this.scope = scope;\n      this.override = override;\n      this.items = Object.create(null);\n    }\n    isForType(type) {\n      return Object.prototype.isPrototypeOf.call(this.type.prototype, type.prototype);\n    }\n    register(item) {\n      const me = this;\n      const proto = Object.getPrototypeOf(item);\n      let parentScope;\n      if (isIChartComponent(proto)) {\n        parentScope = me.register(proto);\n      }\n      const items = me.items;\n      const id = item.id;\n      const scope = me.scope + '.' + id;\n      if (!id) {\n        throw new Error('class does not have id: ' + item);\n      }\n      if (id in items) {\n        return scope;\n      }\n      items[id] = item;\n      registerDefaults(item, scope, parentScope);\n      if (me.override) {\n        defaults.override(item.id, item.overrides);\n      }\n      return scope;\n    }\n    get(id) {\n      return this.items[id];\n    }\n    unregister(item) {\n      const items = this.items;\n      const id = item.id;\n      const scope = this.scope;\n      if (id in items) {\n        delete items[id];\n      }\n      if (scope && id in defaults[scope]) {\n        delete defaults[scope][id];\n        if (this.override) {\n          delete overrides[id];\n        }\n      }\n    }\n  }\n  function registerDefaults(item, scope, parentScope) {\n    const itemDefaults = merge(Object.create(null), [parentScope ? defaults.get(parentScope) : {}, defaults.get(scope), item.defaults]);\n    defaults.set(scope, itemDefaults);\n    if (item.defaultRoutes) {\n      routeDefaults(scope, item.defaultRoutes);\n    }\n    if (item.descriptors) {\n      defaults.describe(scope, item.descriptors);\n    }\n  }\n  function routeDefaults(scope, routes) {\n    Object.keys(routes).forEach(property => {\n      const propertyParts = property.split('.');\n      const sourceName = propertyParts.pop();\n      const sourceScope = [scope].concat(propertyParts).join('.');\n      const parts = routes[property].split('.');\n      const targetName = parts.pop();\n      const targetScope = parts.join('.');\n      defaults.route(sourceScope, sourceName, targetScope, targetName);\n    });\n  }\n  function isIChartComponent(proto) {\n    return 'id' in proto && 'defaults' in proto;\n  }\n  class Registry {\n    constructor() {\n      this.controllers = new TypedRegistry(DatasetController, 'datasets', true);\n      this.elements = new TypedRegistry(Element, 'elements');\n      this.plugins = new TypedRegistry(Object, 'plugins');\n      this.scales = new TypedRegistry(Scale, 'scales');\n      this._typedRegistries = [this.controllers, this.scales, this.elements];\n    }\n    add() {\n      for (var _len3 = arguments.length, args = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n        args[_key3] = arguments[_key3];\n      }\n      this._each('register', args);\n    }\n    remove() {\n      for (var _len4 = arguments.length, args = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {\n        args[_key4] = arguments[_key4];\n      }\n      this._each('unregister', args);\n    }\n    addControllers() {\n      for (var _len5 = arguments.length, args = new Array(_len5), _key5 = 0; _key5 < _len5; _key5++) {\n        args[_key5] = arguments[_key5];\n      }\n      this._each('register', args, this.controllers);\n    }\n    addElements() {\n      for (var _len6 = arguments.length, args = new Array(_len6), _key6 = 0; _key6 < _len6; _key6++) {\n        args[_key6] = arguments[_key6];\n      }\n      this._each('register', args, this.elements);\n    }\n    addPlugins() {\n      for (var _len7 = arguments.length, args = new Array(_len7), _key7 = 0; _key7 < _len7; _key7++) {\n        args[_key7] = arguments[_key7];\n      }\n      this._each('register', args, this.plugins);\n    }\n    addScales() {\n      for (var _len8 = arguments.length, args = new Array(_len8), _key8 = 0; _key8 < _len8; _key8++) {\n        args[_key8] = arguments[_key8];\n      }\n      this._each('register', args, this.scales);\n    }\n    getController(id) {\n      return this._get(id, this.controllers, 'controller');\n    }\n    getElement(id) {\n      return this._get(id, this.elements, 'element');\n    }\n    getPlugin(id) {\n      return this._get(id, this.plugins, 'plugin');\n    }\n    getScale(id) {\n      return this._get(id, this.scales, 'scale');\n    }\n    removeControllers() {\n      for (var _len9 = arguments.length, args = new Array(_len9), _key9 = 0; _key9 < _len9; _key9++) {\n        args[_key9] = arguments[_key9];\n      }\n      this._each('unregister', args, this.controllers);\n    }\n    removeElements() {\n      for (var _len10 = arguments.length, args = new Array(_len10), _key10 = 0; _key10 < _len10; _key10++) {\n        args[_key10] = arguments[_key10];\n      }\n      this._each('unregister', args, this.elements);\n    }\n    removePlugins() {\n      for (var _len11 = arguments.length, args = new Array(_len11), _key11 = 0; _key11 < _len11; _key11++) {\n        args[_key11] = arguments[_key11];\n      }\n      this._each('unregister', args, this.plugins);\n    }\n    removeScales() {\n      for (var _len12 = arguments.length, args = new Array(_len12), _key12 = 0; _key12 < _len12; _key12++) {\n        args[_key12] = arguments[_key12];\n      }\n      this._each('unregister', args, this.scales);\n    }\n    _each(method, args, typedRegistry) {\n      const me = this;\n      [...args].forEach(arg => {\n        const reg = typedRegistry || me._getRegistryForType(arg);\n        if (typedRegistry || reg.isForType(arg) || reg === me.plugins && arg.id) {\n          me._exec(method, reg, arg);\n        } else {\n          each(arg, item => {\n            const itemReg = typedRegistry || me._getRegistryForType(item);\n            me._exec(method, itemReg, item);\n          });\n        }\n      });\n    }\n    _exec(method, registry, component) {\n      const camelMethod = _capitalize(method);\n      callback(component['before' + camelMethod], [], component);\n      registry[method](component);\n      callback(component['after' + camelMethod], [], component);\n    }\n    _getRegistryForType(type) {\n      for (let i = 0; i < this._typedRegistries.length; i++) {\n        const reg = this._typedRegistries[i];\n        if (reg.isForType(type)) {\n          return reg;\n        }\n      }\n      return this.plugins;\n    }\n    _get(id, typedRegistry, type) {\n      const item = typedRegistry.get(id);\n      if (item === undefined) {\n        throw new Error('\"' + id + '\" is not a registered ' + type + '.');\n      }\n      return item;\n    }\n  }\n  var registry = new Registry();\n  class PluginService {\n    constructor() {\n      this._init = [];\n    }\n    notify(chart, hook, args, filter) {\n      const me = this;\n      if (hook === 'beforeInit') {\n        me._init = me._createDescriptors(chart, true);\n        me._notify(me._init, chart, 'install');\n      }\n      const descriptors = filter ? me._descriptors(chart).filter(filter) : me._descriptors(chart);\n      const result = me._notify(descriptors, chart, hook, args);\n      if (hook === 'destroy') {\n        me._notify(descriptors, chart, 'stop');\n        me._notify(me._init, chart, 'uninstall');\n      }\n      return result;\n    }\n    _notify(descriptors, chart, hook, args) {\n      args = args || {};\n      for (const descriptor of descriptors) {\n        const plugin = descriptor.plugin;\n        const method = plugin[hook];\n        const params = [chart, args, descriptor.options];\n        if (callback(method, params, plugin) === false && args.cancelable) {\n          return false;\n        }\n      }\n      return true;\n    }\n    invalidate() {\n      if (!isNullOrUndef(this._cache)) {\n        this._oldCache = this._cache;\n        this._cache = undefined;\n      }\n    }\n    _descriptors(chart) {\n      if (this._cache) {\n        return this._cache;\n      }\n      const descriptors = this._cache = this._createDescriptors(chart);\n      this._notifyStateChanges(chart);\n      return descriptors;\n    }\n    _createDescriptors(chart, all) {\n      const config = chart && chart.config;\n      const options = valueOrDefault(config.options && config.options.plugins, {});\n      const plugins = allPlugins(config);\n      return options === false && !all ? [] : createDescriptors(chart, plugins, options, all);\n    }\n    _notifyStateChanges(chart) {\n      const previousDescriptors = this._oldCache || [];\n      const descriptors = this._cache;\n      const diff = (a, b) => a.filter(x => !b.some(y => x.plugin.id === y.plugin.id));\n      this._notify(diff(previousDescriptors, descriptors), chart, 'stop');\n      this._notify(diff(descriptors, previousDescriptors), chart, 'start');\n    }\n  }\n  function allPlugins(config) {\n    const plugins = [];\n    const keys = Object.keys(registry.plugins.items);\n    for (let i = 0; i < keys.length; i++) {\n      plugins.push(registry.getPlugin(keys[i]));\n    }\n    const local = config.plugins || [];\n    for (let i = 0; i < local.length; i++) {\n      const plugin = local[i];\n      if (plugins.indexOf(plugin) === -1) {\n        plugins.push(plugin);\n      }\n    }\n    return plugins;\n  }\n  function getOpts(options, all) {\n    if (!all && options === false) {\n      return null;\n    }\n    if (options === true) {\n      return {};\n    }\n    return options;\n  }\n  function createDescriptors(chart, plugins, options, all) {\n    const result = [];\n    const context = chart.getContext();\n    for (let i = 0; i < plugins.length; i++) {\n      const plugin = plugins[i];\n      const id = plugin.id;\n      const opts = getOpts(options[id], all);\n      if (opts === null) {\n        continue;\n      }\n      result.push({\n        plugin,\n        options: pluginOpts(chart.config, plugin, opts, context)\n      });\n    }\n    return result;\n  }\n  function pluginOpts(config, plugin, opts, context) {\n    const keys = config.pluginScopeKeys(plugin);\n    const scopes = config.getOptionScopes(opts, keys);\n    return config.createResolver(scopes, context, [''], {\n      scriptable: false,\n      indexable: false,\n      allKeys: true\n    });\n  }\n  function getIndexAxis(type, options) {\n    const datasetDefaults = defaults.datasets[type] || {};\n    const datasetOptions = (options.datasets || {})[type] || {};\n    return datasetOptions.indexAxis || options.indexAxis || datasetDefaults.indexAxis || 'x';\n  }\n  function getAxisFromDefaultScaleID(id, indexAxis) {\n    let axis = id;\n    if (id === '_index_') {\n      axis = indexAxis;\n    } else if (id === '_value_') {\n      axis = indexAxis === 'x' ? 'y' : 'x';\n    }\n    return axis;\n  }\n  function getDefaultScaleIDFromAxis(axis, indexAxis) {\n    return axis === indexAxis ? '_index_' : '_value_';\n  }\n  function axisFromPosition(position) {\n    if (position === 'top' || position === 'bottom') {\n      return 'x';\n    }\n    if (position === 'left' || position === 'right') {\n      return 'y';\n    }\n  }\n  function determineAxis(id, scaleOptions) {\n    if (id === 'x' || id === 'y') {\n      return id;\n    }\n    return scaleOptions.axis || axisFromPosition(scaleOptions.position) || id.charAt(0).toLowerCase();\n  }\n  function mergeScaleConfig(config, options) {\n    const chartDefaults = overrides[config.type] || {\n      scales: {}\n    };\n    const configScales = options.scales || {};\n    const chartIndexAxis = getIndexAxis(config.type, options);\n    const firstIDs = Object.create(null);\n    const scales = Object.create(null);\n    Object.keys(configScales).forEach(id => {\n      const scaleConf = configScales[id];\n      const axis = determineAxis(id, scaleConf);\n      const defaultId = getDefaultScaleIDFromAxis(axis, chartIndexAxis);\n      const defaultScaleOptions = chartDefaults.scales || {};\n      firstIDs[axis] = firstIDs[axis] || id;\n      scales[id] = mergeIf(Object.create(null), [{\n        axis\n      }, scaleConf, defaultScaleOptions[axis], defaultScaleOptions[defaultId]]);\n    });\n    config.data.datasets.forEach(dataset => {\n      const type = dataset.type || config.type;\n      const indexAxis = dataset.indexAxis || getIndexAxis(type, options);\n      const datasetDefaults = overrides[type] || {};\n      const defaultScaleOptions = datasetDefaults.scales || {};\n      Object.keys(defaultScaleOptions).forEach(defaultID => {\n        const axis = getAxisFromDefaultScaleID(defaultID, indexAxis);\n        const id = dataset[axis + 'AxisID'] || firstIDs[axis] || axis;\n        scales[id] = scales[id] || Object.create(null);\n        mergeIf(scales[id], [{\n          axis\n        }, configScales[id], defaultScaleOptions[defaultID]]);\n      });\n    });\n    Object.keys(scales).forEach(key => {\n      const scale = scales[key];\n      mergeIf(scale, [defaults.scales[scale.type], defaults.scale]);\n    });\n    return scales;\n  }\n  function initOptions(config) {\n    const options = config.options || (config.options = {});\n    options.plugins = valueOrDefault(options.plugins, {});\n    options.scales = mergeScaleConfig(config, options);\n  }\n  function initData(data) {\n    data = data || {};\n    data.datasets = data.datasets || [];\n    data.labels = data.labels || [];\n    return data;\n  }\n  function initConfig(config) {\n    config = config || {};\n    config.data = initData(config.data);\n    initOptions(config);\n    return config;\n  }\n  const keyCache = new Map();\n  const keysCached = new Set();\n  function cachedKeys(cacheKey, generate) {\n    let keys = keyCache.get(cacheKey);\n    if (!keys) {\n      keys = generate();\n      keyCache.set(cacheKey, keys);\n      keysCached.add(keys);\n    }\n    return keys;\n  }\n  const addIfFound = (set, obj, key) => {\n    const opts = resolveObjectKey(obj, key);\n    if (opts !== undefined) {\n      set.add(opts);\n    }\n  };\n  class Config {\n    constructor(config) {\n      this._config = initConfig(config);\n      this._scopeCache = new Map();\n      this._resolverCache = new Map();\n    }\n    get type() {\n      return this._config.type;\n    }\n    set type(type) {\n      this._config.type = type;\n    }\n    get data() {\n      return this._config.data;\n    }\n    set data(data) {\n      this._config.data = initData(data);\n    }\n    get options() {\n      return this._config.options;\n    }\n    set options(options) {\n      this._config.options = options;\n    }\n    get plugins() {\n      return this._config.plugins;\n    }\n    update() {\n      const config = this._config;\n      this.clearCache();\n      initOptions(config);\n    }\n    clearCache() {\n      this._scopeCache.clear();\n      this._resolverCache.clear();\n    }\n    datasetScopeKeys(datasetType) {\n      return cachedKeys(datasetType, () => [[`datasets.${datasetType}`, '']]);\n    }\n    datasetAnimationScopeKeys(datasetType, transition) {\n      return cachedKeys(`${datasetType}.transition.${transition}`, () => [[`datasets.${datasetType}.transitions.${transition}`, `transitions.${transition}`], [`datasets.${datasetType}`, '']]);\n    }\n    datasetElementScopeKeys(datasetType, elementType) {\n      return cachedKeys(`${datasetType}-${elementType}`, () => [[`datasets.${datasetType}.elements.${elementType}`, `datasets.${datasetType}`, `elements.${elementType}`, '']]);\n    }\n    pluginScopeKeys(plugin) {\n      const id = plugin.id;\n      const type = this.type;\n      return cachedKeys(`${type}-plugin-${id}`, () => [[`plugins.${id}`, ...(plugin.additionalOptionScopes || [])]]);\n    }\n    _cachedScopes(mainScope, resetCache) {\n      const _scopeCache = this._scopeCache;\n      let cache = _scopeCache.get(mainScope);\n      if (!cache || resetCache) {\n        cache = new Map();\n        _scopeCache.set(mainScope, cache);\n      }\n      return cache;\n    }\n    getOptionScopes(mainScope, keyLists, resetCache) {\n      const {\n        options,\n        type\n      } = this;\n      const cache = this._cachedScopes(mainScope, resetCache);\n      const cached = cache.get(keyLists);\n      if (cached) {\n        return cached;\n      }\n      const scopes = new Set();\n      keyLists.forEach(keys => {\n        if (mainScope) {\n          scopes.add(mainScope);\n          keys.forEach(key => addIfFound(scopes, mainScope, key));\n        }\n        keys.forEach(key => addIfFound(scopes, options, key));\n        keys.forEach(key => addIfFound(scopes, overrides[type] || {}, key));\n        keys.forEach(key => addIfFound(scopes, defaults, key));\n        keys.forEach(key => addIfFound(scopes, descriptors, key));\n      });\n      const array = [...scopes];\n      if (keysCached.has(keyLists)) {\n        cache.set(keyLists, array);\n      }\n      return array;\n    }\n    chartOptionScopes() {\n      const {\n        options,\n        type\n      } = this;\n      return [options, overrides[type] || {}, defaults.datasets[type] || {}, {\n        type\n      }, defaults, descriptors];\n    }\n    resolveNamedOptions(scopes, names, context) {\n      let prefixes = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : [''];\n      const result = {\n        $shared: true\n      };\n      const {\n        resolver,\n        subPrefixes\n      } = getResolver(this._resolverCache, scopes, prefixes);\n      let options = resolver;\n      if (needContext(resolver, names)) {\n        result.$shared = false;\n        context = isFunction(context) ? context() : context;\n        const subResolver = this.createResolver(scopes, context, subPrefixes);\n        options = _attachContext(resolver, context, subResolver);\n      }\n      for (const prop of names) {\n        result[prop] = options[prop];\n      }\n      return result;\n    }\n    createResolver(scopes, context) {\n      let prefixes = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [''];\n      let descriptorDefaults = arguments.length > 3 ? arguments[3] : undefined;\n      const {\n        resolver\n      } = getResolver(this._resolverCache, scopes, prefixes);\n      return isObject(context) ? _attachContext(resolver, context, undefined, descriptorDefaults) : resolver;\n    }\n  }\n  function getResolver(resolverCache, scopes, prefixes) {\n    let cache = resolverCache.get(scopes);\n    if (!cache) {\n      cache = new Map();\n      resolverCache.set(scopes, cache);\n    }\n    const cacheKey = prefixes.join();\n    let cached = cache.get(cacheKey);\n    if (!cached) {\n      const resolver = _createResolver(scopes, prefixes);\n      cached = {\n        resolver,\n        subPrefixes: prefixes.filter(p => !p.toLowerCase().includes('hover'))\n      };\n      cache.set(cacheKey, cached);\n    }\n    return cached;\n  }\n  function needContext(proxy, names) {\n    const {\n      isScriptable,\n      isIndexable\n    } = _descriptors(proxy);\n    for (const prop of names) {\n      if (isScriptable(prop) && isFunction(proxy[prop]) || isIndexable(prop) && isArray(proxy[prop])) {\n        return true;\n      }\n    }\n    return false;\n  }\n  var version = \"3.3.2\";\n  const KNOWN_POSITIONS = ['top', 'bottom', 'left', 'right', 'chartArea'];\n  function positionIsHorizontal(position, axis) {\n    return position === 'top' || position === 'bottom' || KNOWN_POSITIONS.indexOf(position) === -1 && axis === 'x';\n  }\n  function compare2Level(l1, l2) {\n    return function (a, b) {\n      return a[l1] === b[l1] ? a[l2] - b[l2] : a[l1] - b[l1];\n    };\n  }\n  function onAnimationsComplete(context) {\n    const chart = context.chart;\n    const animationOptions = chart.options.animation;\n    chart.notifyPlugins('afterRender');\n    callback(animationOptions && animationOptions.onComplete, [context], chart);\n  }\n  function onAnimationProgress(context) {\n    const chart = context.chart;\n    const animationOptions = chart.options.animation;\n    callback(animationOptions && animationOptions.onProgress, [context], chart);\n  }\n  function isDomSupported() {\n    return typeof window !== 'undefined' && typeof document !== 'undefined';\n  }\n  function getCanvas(item) {\n    if (isDomSupported() && typeof item === 'string') {\n      item = document.getElementById(item);\n    } else if (item && item.length) {\n      item = item[0];\n    }\n    if (item && item.canvas) {\n      item = item.canvas;\n    }\n    return item;\n  }\n  const instances = {};\n  const getChart = key => {\n    const canvas = getCanvas(key);\n    return Object.values(instances).filter(c => c.canvas === canvas).pop();\n  };\n  class Chart {\n    constructor(item, config) {\n      const me = this;\n      this.config = config = new Config(config);\n      const initialCanvas = getCanvas(item);\n      const existingChart = getChart(initialCanvas);\n      if (existingChart) {\n        throw new Error('Canvas is already in use. Chart with ID \\'' + existingChart.id + '\\'' + ' must be destroyed before the canvas can be reused.');\n      }\n      const options = config.createResolver(config.chartOptionScopes(), me.getContext());\n      this.platform = me._initializePlatform(initialCanvas, config);\n      const context = me.platform.acquireContext(initialCanvas, options.aspectRatio);\n      const canvas = context && context.canvas;\n      const height = canvas && canvas.height;\n      const width = canvas && canvas.width;\n      this.id = uid();\n      this.ctx = context;\n      this.canvas = canvas;\n      this.width = width;\n      this.height = height;\n      this._options = options;\n      this._aspectRatio = this.aspectRatio;\n      this._layers = [];\n      this._metasets = [];\n      this._stacks = undefined;\n      this.boxes = [];\n      this.currentDevicePixelRatio = undefined;\n      this.chartArea = undefined;\n      this._active = [];\n      this._lastEvent = undefined;\n      this._listeners = {};\n      this._responsiveListeners = undefined;\n      this._sortedMetasets = [];\n      this.scales = {};\n      this.scale = undefined;\n      this._plugins = new PluginService();\n      this.$proxies = {};\n      this._hiddenIndices = {};\n      this.attached = false;\n      this._animationsDisabled = undefined;\n      this.$context = undefined;\n      this._doResize = debounce(() => this.update('resize'), options.resizeDelay || 0);\n      instances[me.id] = me;\n      if (!context || !canvas) {\n        console.error(\"Failed to create chart: can't acquire context from the given item\");\n        return;\n      }\n      animator.listen(me, 'complete', onAnimationsComplete);\n      animator.listen(me, 'progress', onAnimationProgress);\n      me._initialize();\n      if (me.attached) {\n        me.update();\n      }\n    }\n    get aspectRatio() {\n      const {\n        options: {\n          aspectRatio,\n          maintainAspectRatio\n        },\n        width,\n        height,\n        _aspectRatio\n      } = this;\n      if (!isNullOrUndef(aspectRatio)) {\n        return aspectRatio;\n      }\n      if (maintainAspectRatio && _aspectRatio) {\n        return _aspectRatio;\n      }\n      return height ? width / height : null;\n    }\n    get data() {\n      return this.config.data;\n    }\n    set data(data) {\n      this.config.data = data;\n    }\n    get options() {\n      return this._options;\n    }\n    set options(options) {\n      this.config.options = options;\n    }\n    _initialize() {\n      const me = this;\n      me.notifyPlugins('beforeInit');\n      if (me.options.responsive) {\n        me.resize();\n      } else {\n        retinaScale(me, me.options.devicePixelRatio);\n      }\n      me.bindEvents();\n      me.notifyPlugins('afterInit');\n      return me;\n    }\n    _initializePlatform(canvas, config) {\n      if (config.platform) {\n        return new config.platform();\n      } else if (!isDomSupported() || typeof OffscreenCanvas !== 'undefined' && canvas instanceof OffscreenCanvas) {\n        return new BasicPlatform();\n      }\n      return new DomPlatform();\n    }\n    clear() {\n      clearCanvas(this.canvas, this.ctx);\n      return this;\n    }\n    stop() {\n      animator.stop(this);\n      return this;\n    }\n    resize(width, height) {\n      if (!animator.running(this)) {\n        this._resize(width, height);\n      } else {\n        this._resizeBeforeDraw = {\n          width,\n          height\n        };\n      }\n    }\n    _resize(width, height) {\n      const me = this;\n      const options = me.options;\n      const canvas = me.canvas;\n      const aspectRatio = options.maintainAspectRatio && me.aspectRatio;\n      const newSize = me.platform.getMaximumSize(canvas, width, height, aspectRatio);\n      const newRatio = options.devicePixelRatio || me.platform.getDevicePixelRatio();\n      me.width = newSize.width;\n      me.height = newSize.height;\n      me._aspectRatio = me.aspectRatio;\n      if (!retinaScale(me, newRatio, true)) {\n        return;\n      }\n      me.notifyPlugins('resize', {\n        size: newSize\n      });\n      callback(options.onResize, [me, newSize], me);\n      if (me.attached) {\n        if (me._doResize()) {\n          me.render();\n        }\n      }\n    }\n    ensureScalesHaveIDs() {\n      const options = this.options;\n      const scalesOptions = options.scales || {};\n      each(scalesOptions, (axisOptions, axisID) => {\n        axisOptions.id = axisID;\n      });\n    }\n    buildOrUpdateScales() {\n      const me = this;\n      const options = me.options;\n      const scaleOpts = options.scales;\n      const scales = me.scales;\n      const updated = Object.keys(scales).reduce((obj, id) => {\n        obj[id] = false;\n        return obj;\n      }, {});\n      let items = [];\n      if (scaleOpts) {\n        items = items.concat(Object.keys(scaleOpts).map(id => {\n          const scaleOptions = scaleOpts[id];\n          const axis = determineAxis(id, scaleOptions);\n          const isRadial = axis === 'r';\n          const isHorizontal = axis === 'x';\n          return {\n            options: scaleOptions,\n            dposition: isRadial ? 'chartArea' : isHorizontal ? 'bottom' : 'left',\n            dtype: isRadial ? 'radialLinear' : isHorizontal ? 'category' : 'linear'\n          };\n        }));\n      }\n      each(items, item => {\n        const scaleOptions = item.options;\n        const id = scaleOptions.id;\n        const axis = determineAxis(id, scaleOptions);\n        const scaleType = valueOrDefault(scaleOptions.type, item.dtype);\n        if (scaleOptions.position === undefined || positionIsHorizontal(scaleOptions.position, axis) !== positionIsHorizontal(item.dposition)) {\n          scaleOptions.position = item.dposition;\n        }\n        updated[id] = true;\n        let scale = null;\n        if (id in scales && scales[id].type === scaleType) {\n          scale = scales[id];\n        } else {\n          const scaleClass = registry.getScale(scaleType);\n          scale = new scaleClass({\n            id,\n            type: scaleType,\n            ctx: me.ctx,\n            chart: me\n          });\n          scales[scale.id] = scale;\n        }\n        scale.init(scaleOptions, options);\n      });\n      each(updated, (hasUpdated, id) => {\n        if (!hasUpdated) {\n          delete scales[id];\n        }\n      });\n      each(scales, scale => {\n        layouts.configure(me, scale, scale.options);\n        layouts.addBox(me, scale);\n      });\n    }\n    _updateMetasets() {\n      const me = this;\n      const metasets = me._metasets;\n      const numData = me.data.datasets.length;\n      const numMeta = metasets.length;\n      metasets.sort((a, b) => a.index - b.index);\n      if (numMeta > numData) {\n        for (let i = numData; i < numMeta; ++i) {\n          me._destroyDatasetMeta(i);\n        }\n        metasets.splice(numData, numMeta - numData);\n      }\n      me._sortedMetasets = metasets.slice(0).sort(compare2Level('order', 'index'));\n    }\n    _removeUnreferencedMetasets() {\n      const me = this;\n      const {\n        _metasets: metasets,\n        data: {\n          datasets\n        }\n      } = me;\n      if (metasets.length > datasets.length) {\n        delete me._stacks;\n      }\n      metasets.forEach((meta, index) => {\n        if (datasets.filter(x => x === meta._dataset).length === 0) {\n          me._destroyDatasetMeta(index);\n        }\n      });\n    }\n    buildOrUpdateControllers() {\n      const me = this;\n      const newControllers = [];\n      const datasets = me.data.datasets;\n      let i, ilen;\n      me._removeUnreferencedMetasets();\n      for (i = 0, ilen = datasets.length; i < ilen; i++) {\n        const dataset = datasets[i];\n        let meta = me.getDatasetMeta(i);\n        const type = dataset.type || me.config.type;\n        if (meta.type && meta.type !== type) {\n          me._destroyDatasetMeta(i);\n          meta = me.getDatasetMeta(i);\n        }\n        meta.type = type;\n        meta.indexAxis = dataset.indexAxis || getIndexAxis(type, me.options);\n        meta.order = dataset.order || 0;\n        meta.index = i;\n        meta.label = '' + dataset.label;\n        meta.visible = me.isDatasetVisible(i);\n        if (meta.controller) {\n          meta.controller.updateIndex(i);\n          meta.controller.linkScales();\n        } else {\n          const ControllerClass = registry.getController(type);\n          const {\n            datasetElementType,\n            dataElementType\n          } = defaults.datasets[type];\n          Object.assign(ControllerClass.prototype, {\n            dataElementType: registry.getElement(dataElementType),\n            datasetElementType: datasetElementType && registry.getElement(datasetElementType)\n          });\n          meta.controller = new ControllerClass(me, i);\n          newControllers.push(meta.controller);\n        }\n      }\n      me._updateMetasets();\n      return newControllers;\n    }\n    _resetElements() {\n      const me = this;\n      each(me.data.datasets, (dataset, datasetIndex) => {\n        me.getDatasetMeta(datasetIndex).controller.reset();\n      }, me);\n    }\n    reset() {\n      this._resetElements();\n      this.notifyPlugins('reset');\n    }\n    update(mode) {\n      const me = this;\n      const config = me.config;\n      config.update();\n      me._options = config.createResolver(config.chartOptionScopes(), me.getContext());\n      each(me.scales, scale => {\n        layouts.removeBox(me, scale);\n      });\n      const animsDisabled = me._animationsDisabled = !me.options.animation;\n      me.ensureScalesHaveIDs();\n      me.buildOrUpdateScales();\n      const existingEvents = new Set(Object.keys(me._listeners));\n      const newEvents = new Set(me.options.events);\n      if (!setsEqual(existingEvents, newEvents) || !!this._responsiveListeners !== me.options.responsive) {\n        me.unbindEvents();\n        me.bindEvents();\n      }\n      me._plugins.invalidate();\n      if (me.notifyPlugins('beforeUpdate', {\n        mode,\n        cancelable: true\n      }) === false) {\n        return;\n      }\n      const newControllers = me.buildOrUpdateControllers();\n      me.notifyPlugins('beforeElementsUpdate');\n      let minPadding = 0;\n      for (let i = 0, ilen = me.data.datasets.length; i < ilen; i++) {\n        const {\n          controller\n        } = me.getDatasetMeta(i);\n        const reset = !animsDisabled && newControllers.indexOf(controller) === -1;\n        controller.buildOrUpdateElements(reset);\n        minPadding = Math.max(+controller.getMaxOverflow(), minPadding);\n      }\n      me._minPadding = minPadding;\n      me._updateLayout(minPadding);\n      if (!animsDisabled) {\n        each(newControllers, controller => {\n          controller.reset();\n        });\n      }\n      me._updateDatasets(mode);\n      me.notifyPlugins('afterUpdate', {\n        mode\n      });\n      me._layers.sort(compare2Level('z', '_idx'));\n      if (me._lastEvent) {\n        me._eventHandler(me._lastEvent, true);\n      }\n      me.render();\n    }\n    _updateLayout(minPadding) {\n      const me = this;\n      if (me.notifyPlugins('beforeLayout', {\n        cancelable: true\n      }) === false) {\n        return;\n      }\n      layouts.update(me, me.width, me.height, minPadding);\n      const area = me.chartArea;\n      const noArea = area.width <= 0 || area.height <= 0;\n      me._layers = [];\n      each(me.boxes, box => {\n        if (noArea && box.position === 'chartArea') {\n          return;\n        }\n        if (box.configure) {\n          box.configure();\n        }\n        me._layers.push(...box._layers());\n      }, me);\n      me._layers.forEach((item, index) => {\n        item._idx = index;\n      });\n      me.notifyPlugins('afterLayout');\n    }\n    _updateDatasets(mode) {\n      const me = this;\n      const isFunction = typeof mode === 'function';\n      if (me.notifyPlugins('beforeDatasetsUpdate', {\n        mode,\n        cancelable: true\n      }) === false) {\n        return;\n      }\n      for (let i = 0, ilen = me.data.datasets.length; i < ilen; ++i) {\n        me._updateDataset(i, isFunction ? mode({\n          datasetIndex: i\n        }) : mode);\n      }\n      me.notifyPlugins('afterDatasetsUpdate', {\n        mode\n      });\n    }\n    _updateDataset(index, mode) {\n      const me = this;\n      const meta = me.getDatasetMeta(index);\n      const args = {\n        meta,\n        index,\n        mode,\n        cancelable: true\n      };\n      if (me.notifyPlugins('beforeDatasetUpdate', args) === false) {\n        return;\n      }\n      meta.controller._update(mode);\n      args.cancelable = false;\n      me.notifyPlugins('afterDatasetUpdate', args);\n    }\n    render() {\n      const me = this;\n      if (me.notifyPlugins('beforeRender', {\n        cancelable: true\n      }) === false) {\n        return;\n      }\n      if (animator.has(me)) {\n        if (me.attached && !animator.running(me)) {\n          animator.start(me);\n        }\n      } else {\n        me.draw();\n        onAnimationsComplete({\n          chart: me\n        });\n      }\n    }\n    draw() {\n      const me = this;\n      let i;\n      if (me._resizeBeforeDraw) {\n        const {\n          width,\n          height\n        } = me._resizeBeforeDraw;\n        me._resize(width, height);\n        me._resizeBeforeDraw = null;\n      }\n      me.clear();\n      if (me.width <= 0 || me.height <= 0) {\n        return;\n      }\n      if (me.notifyPlugins('beforeDraw', {\n        cancelable: true\n      }) === false) {\n        return;\n      }\n      const layers = me._layers;\n      for (i = 0; i < layers.length && layers[i].z <= 0; ++i) {\n        layers[i].draw(me.chartArea);\n      }\n      me._drawDatasets();\n      for (; i < layers.length; ++i) {\n        layers[i].draw(me.chartArea);\n      }\n      me.notifyPlugins('afterDraw');\n    }\n    _getSortedDatasetMetas(filterVisible) {\n      const me = this;\n      const metasets = me._sortedMetasets;\n      const result = [];\n      let i, ilen;\n      for (i = 0, ilen = metasets.length; i < ilen; ++i) {\n        const meta = metasets[i];\n        if (!filterVisible || meta.visible) {\n          result.push(meta);\n        }\n      }\n      return result;\n    }\n    getSortedVisibleDatasetMetas() {\n      return this._getSortedDatasetMetas(true);\n    }\n    _drawDatasets() {\n      const me = this;\n      if (me.notifyPlugins('beforeDatasetsDraw', {\n        cancelable: true\n      }) === false) {\n        return;\n      }\n      const metasets = me.getSortedVisibleDatasetMetas();\n      for (let i = metasets.length - 1; i >= 0; --i) {\n        me._drawDataset(metasets[i]);\n      }\n      me.notifyPlugins('afterDatasetsDraw');\n    }\n    _drawDataset(meta) {\n      const me = this;\n      const ctx = me.ctx;\n      const clip = meta._clip;\n      const area = me.chartArea;\n      const args = {\n        meta,\n        index: meta.index,\n        cancelable: true\n      };\n      if (me.notifyPlugins('beforeDatasetDraw', args) === false) {\n        return;\n      }\n      clipArea(ctx, {\n        left: clip.left === false ? 0 : area.left - clip.left,\n        right: clip.right === false ? me.width : area.right + clip.right,\n        top: clip.top === false ? 0 : area.top - clip.top,\n        bottom: clip.bottom === false ? me.height : area.bottom + clip.bottom\n      });\n      meta.controller.draw();\n      unclipArea(ctx);\n      args.cancelable = false;\n      me.notifyPlugins('afterDatasetDraw', args);\n    }\n    getElementsAtEventForMode(e, mode, options, useFinalPosition) {\n      const method = Interaction.modes[mode];\n      if (typeof method === 'function') {\n        return method(this, e, options, useFinalPosition);\n      }\n      return [];\n    }\n    getDatasetMeta(datasetIndex) {\n      const me = this;\n      const dataset = me.data.datasets[datasetIndex];\n      const metasets = me._metasets;\n      let meta = metasets.filter(x => x && x._dataset === dataset).pop();\n      if (!meta) {\n        meta = {\n          type: null,\n          data: [],\n          dataset: null,\n          controller: null,\n          hidden: null,\n          xAxisID: null,\n          yAxisID: null,\n          order: dataset && dataset.order || 0,\n          index: datasetIndex,\n          _dataset: dataset,\n          _parsed: [],\n          _sorted: false\n        };\n        metasets.push(meta);\n      }\n      return meta;\n    }\n    getContext() {\n      return this.$context || (this.$context = {\n        chart: this,\n        type: 'chart'\n      });\n    }\n    getVisibleDatasetCount() {\n      return this.getSortedVisibleDatasetMetas().length;\n    }\n    isDatasetVisible(datasetIndex) {\n      const dataset = this.data.datasets[datasetIndex];\n      if (!dataset) {\n        return false;\n      }\n      const meta = this.getDatasetMeta(datasetIndex);\n      return typeof meta.hidden === 'boolean' ? !meta.hidden : !dataset.hidden;\n    }\n    setDatasetVisibility(datasetIndex, visible) {\n      const meta = this.getDatasetMeta(datasetIndex);\n      meta.hidden = !visible;\n    }\n    toggleDataVisibility(index) {\n      this._hiddenIndices[index] = !this._hiddenIndices[index];\n    }\n    getDataVisibility(index) {\n      return !this._hiddenIndices[index];\n    }\n    _updateDatasetVisibility(datasetIndex, visible) {\n      const me = this;\n      const mode = visible ? 'show' : 'hide';\n      const meta = me.getDatasetMeta(datasetIndex);\n      const anims = meta.controller._resolveAnimations(undefined, mode);\n      me.setDatasetVisibility(datasetIndex, visible);\n      anims.update(meta, {\n        visible\n      });\n      me.update(ctx => ctx.datasetIndex === datasetIndex ? mode : undefined);\n    }\n    hide(datasetIndex) {\n      this._updateDatasetVisibility(datasetIndex, false);\n    }\n    show(datasetIndex) {\n      this._updateDatasetVisibility(datasetIndex, true);\n    }\n    _destroyDatasetMeta(datasetIndex) {\n      const me = this;\n      const meta = me._metasets && me._metasets[datasetIndex];\n      if (meta && meta.controller) {\n        meta.controller._destroy();\n        delete me._metasets[datasetIndex];\n      }\n    }\n    destroy() {\n      const me = this;\n      const {\n        canvas,\n        ctx\n      } = me;\n      let i, ilen;\n      me.stop();\n      animator.remove(me);\n      for (i = 0, ilen = me.data.datasets.length; i < ilen; ++i) {\n        me._destroyDatasetMeta(i);\n      }\n      me.config.clearCache();\n      if (canvas) {\n        me.unbindEvents();\n        clearCanvas(canvas, ctx);\n        me.platform.releaseContext(ctx);\n        me.canvas = null;\n        me.ctx = null;\n      }\n      me.notifyPlugins('destroy');\n      delete instances[me.id];\n    }\n    toBase64Image() {\n      return this.canvas.toDataURL(...arguments);\n    }\n    bindEvents() {\n      this.bindUserEvents();\n      if (this.options.responsive) {\n        this.bindResponsiveEvents();\n      } else {\n        this.attached = true;\n      }\n    }\n    bindUserEvents() {\n      const me = this;\n      const listeners = me._listeners;\n      const platform = me.platform;\n      const _add = (type, listener) => {\n        platform.addEventListener(me, type, listener);\n        listeners[type] = listener;\n      };\n      const listener = function (e, x, y) {\n        e.offsetX = x;\n        e.offsetY = y;\n        me._eventHandler(e);\n      };\n      each(me.options.events, type => _add(type, listener));\n    }\n    bindResponsiveEvents() {\n      const me = this;\n      if (!me._responsiveListeners) {\n        me._responsiveListeners = {};\n      }\n      const listeners = me._responsiveListeners;\n      const platform = me.platform;\n      const _add = (type, listener) => {\n        platform.addEventListener(me, type, listener);\n        listeners[type] = listener;\n      };\n      const _remove = (type, listener) => {\n        if (listeners[type]) {\n          platform.removeEventListener(me, type, listener);\n          delete listeners[type];\n        }\n      };\n      const listener = (width, height) => {\n        if (me.canvas) {\n          me.resize(width, height);\n        }\n      };\n      let detached;\n      const attached = () => {\n        _remove('attach', attached);\n        me.attached = true;\n        me.resize();\n        _add('resize', listener);\n        _add('detach', detached);\n      };\n      detached = () => {\n        me.attached = false;\n        _remove('resize', listener);\n        _add('attach', attached);\n      };\n      if (platform.isAttached(me.canvas)) {\n        attached();\n      } else {\n        detached();\n      }\n    }\n    unbindEvents() {\n      const me = this;\n      each(me._listeners, (listener, type) => {\n        me.platform.removeEventListener(me, type, listener);\n      });\n      me._listeners = {};\n      each(me._responsiveListeners, (listener, type) => {\n        me.platform.removeEventListener(me, type, listener);\n      });\n      me._responsiveListeners = undefined;\n    }\n    updateHoverStyle(items, mode, enabled) {\n      const prefix = enabled ? 'set' : 'remove';\n      let meta, item, i, ilen;\n      if (mode === 'dataset') {\n        meta = this.getDatasetMeta(items[0].datasetIndex);\n        meta.controller['_' + prefix + 'DatasetHoverStyle']();\n      }\n      for (i = 0, ilen = items.length; i < ilen; ++i) {\n        item = items[i];\n        const controller = item && this.getDatasetMeta(item.datasetIndex).controller;\n        if (controller) {\n          controller[prefix + 'HoverStyle'](item.element, item.datasetIndex, item.index);\n        }\n      }\n    }\n    getActiveElements() {\n      return this._active || [];\n    }\n    setActiveElements(activeElements) {\n      const me = this;\n      const lastActive = me._active || [];\n      const active = activeElements.map(_ref2 => {\n        let {\n          datasetIndex,\n          index\n        } = _ref2;\n        const meta = me.getDatasetMeta(datasetIndex);\n        if (!meta) {\n          throw new Error('No dataset found at index ' + datasetIndex);\n        }\n        return {\n          datasetIndex,\n          element: meta.data[index],\n          index\n        };\n      });\n      const changed = !_elementsEqual(active, lastActive);\n      if (changed) {\n        me._active = active;\n        me._updateHoverStyles(active, lastActive);\n      }\n    }\n    notifyPlugins(hook, args, filter) {\n      return this._plugins.notify(this, hook, args, filter);\n    }\n    _updateHoverStyles(active, lastActive, replay) {\n      const me = this;\n      const hoverOptions = me.options.hover;\n      const diff = (a, b) => a.filter(x => !b.some(y => x.datasetIndex === y.datasetIndex && x.index === y.index));\n      const deactivated = diff(lastActive, active);\n      const activated = replay ? active : diff(active, lastActive);\n      if (deactivated.length) {\n        me.updateHoverStyle(deactivated, hoverOptions.mode, false);\n      }\n      if (activated.length && hoverOptions.mode) {\n        me.updateHoverStyle(activated, hoverOptions.mode, true);\n      }\n    }\n    _eventHandler(e, replay) {\n      const me = this;\n      const args = {\n        event: e,\n        replay,\n        cancelable: true\n      };\n      const eventFilter = plugin => (plugin.options.events || this.options.events).includes(e.type);\n      if (me.notifyPlugins('beforeEvent', args, eventFilter) === false) {\n        return;\n      }\n      const changed = me._handleEvent(e, replay);\n      args.cancelable = false;\n      me.notifyPlugins('afterEvent', args, eventFilter);\n      if (changed || args.changed) {\n        me.render();\n      }\n      return me;\n    }\n    _handleEvent(e, replay) {\n      const me = this;\n      const {\n        _active: lastActive = [],\n        options\n      } = me;\n      const hoverOptions = options.hover;\n      const useFinalPosition = replay;\n      let active = [];\n      let changed = false;\n      let lastEvent = null;\n      if (e.type !== 'mouseout') {\n        active = me.getElementsAtEventForMode(e, hoverOptions.mode, hoverOptions, useFinalPosition);\n        lastEvent = e.type === 'click' ? me._lastEvent : e;\n      }\n      me._lastEvent = null;\n      if (_isPointInArea(e, me.chartArea, me._minPadding)) {\n        callback(options.onHover, [e, active, me], me);\n        if (e.type === 'mouseup' || e.type === 'click' || e.type === 'contextmenu') {\n          callback(options.onClick, [e, active, me], me);\n        }\n      }\n      changed = !_elementsEqual(active, lastActive);\n      if (changed || replay) {\n        me._active = active;\n        me._updateHoverStyles(active, lastActive, replay);\n      }\n      me._lastEvent = lastEvent;\n      return changed;\n    }\n  }\n  const invalidatePlugins = () => each(Chart.instances, chart => chart._plugins.invalidate());\n  const enumerable = true;\n  Object.defineProperties(Chart, {\n    defaults: {\n      enumerable,\n      value: defaults\n    },\n    instances: {\n      enumerable,\n      value: instances\n    },\n    overrides: {\n      enumerable,\n      value: overrides\n    },\n    registry: {\n      enumerable,\n      value: registry\n    },\n    version: {\n      enumerable,\n      value: version\n    },\n    getChart: {\n      enumerable,\n      value: getChart\n    },\n    register: {\n      enumerable,\n      value: function () {\n        registry.add(...arguments);\n        invalidatePlugins();\n      }\n    },\n    unregister: {\n      enumerable,\n      value: function () {\n        registry.remove(...arguments);\n        invalidatePlugins();\n      }\n    }\n  });\n  function abstract() {\n    throw new Error('This method is not implemented: Check that a complete date adapter is provided.');\n  }\n  class DateAdapter {\n    constructor(options) {\n      this.options = options || {};\n    }\n    formats() {\n      return abstract();\n    }\n    parse(value, format) {\n      return abstract();\n    }\n    format(timestamp, format) {\n      return abstract();\n    }\n    add(timestamp, amount, unit) {\n      return abstract();\n    }\n    diff(a, b, unit) {\n      return abstract();\n    }\n    startOf(timestamp, unit, weekday) {\n      return abstract();\n    }\n    endOf(timestamp, unit) {\n      return abstract();\n    }\n  }\n  DateAdapter.override = function (members) {\n    Object.assign(DateAdapter.prototype, members);\n  };\n  var _adapters = {\n    _date: DateAdapter\n  };\n  function getAllScaleValues(scale) {\n    if (!scale._cache.$bar) {\n      const metas = scale.getMatchingVisibleMetas('bar');\n      let values = [];\n      for (let i = 0, ilen = metas.length; i < ilen; i++) {\n        values = values.concat(metas[i].controller.getAllParsedValues(scale));\n      }\n      scale._cache.$bar = _arrayUnique(values.sort((a, b) => a - b));\n    }\n    return scale._cache.$bar;\n  }\n  function computeMinSampleSize(scale) {\n    const values = getAllScaleValues(scale);\n    let min = scale._length;\n    let i, ilen, curr, prev;\n    const updateMinAndPrev = () => {\n      if (curr === 32767 || curr === -32768) {\n        return;\n      }\n      if (defined(prev)) {\n        min = Math.min(min, Math.abs(curr - prev) || min);\n      }\n      prev = curr;\n    };\n    for (i = 0, ilen = values.length; i < ilen; ++i) {\n      curr = scale.getPixelForValue(values[i]);\n      updateMinAndPrev();\n    }\n    prev = undefined;\n    for (i = 0, ilen = scale.ticks.length; i < ilen; ++i) {\n      curr = scale.getPixelForTick(i);\n      updateMinAndPrev();\n    }\n    return min;\n  }\n  function computeFitCategoryTraits(index, ruler, options, stackCount) {\n    const thickness = options.barThickness;\n    let size, ratio;\n    if (isNullOrUndef(thickness)) {\n      size = ruler.min * options.categoryPercentage;\n      ratio = options.barPercentage;\n    } else {\n      size = thickness * stackCount;\n      ratio = 1;\n    }\n    return {\n      chunk: size / stackCount,\n      ratio,\n      start: ruler.pixels[index] - size / 2\n    };\n  }\n  function computeFlexCategoryTraits(index, ruler, options, stackCount) {\n    const pixels = ruler.pixels;\n    const curr = pixels[index];\n    let prev = index > 0 ? pixels[index - 1] : null;\n    let next = index < pixels.length - 1 ? pixels[index + 1] : null;\n    const percent = options.categoryPercentage;\n    if (prev === null) {\n      prev = curr - (next === null ? ruler.end - ruler.start : next - curr);\n    }\n    if (next === null) {\n      next = curr + curr - prev;\n    }\n    const start = curr - (curr - Math.min(prev, next)) / 2 * percent;\n    const size = Math.abs(next - prev) / 2 * percent;\n    return {\n      chunk: size / stackCount,\n      ratio: options.barPercentage,\n      start\n    };\n  }\n  function parseFloatBar(entry, item, vScale, i) {\n    const startValue = vScale.parse(entry[0], i);\n    const endValue = vScale.parse(entry[1], i);\n    const min = Math.min(startValue, endValue);\n    const max = Math.max(startValue, endValue);\n    let barStart = min;\n    let barEnd = max;\n    if (Math.abs(min) > Math.abs(max)) {\n      barStart = max;\n      barEnd = min;\n    }\n    item[vScale.axis] = barEnd;\n    item._custom = {\n      barStart,\n      barEnd,\n      start: startValue,\n      end: endValue,\n      min,\n      max\n    };\n  }\n  function parseValue(entry, item, vScale, i) {\n    if (isArray(entry)) {\n      parseFloatBar(entry, item, vScale, i);\n    } else {\n      item[vScale.axis] = vScale.parse(entry, i);\n    }\n    return item;\n  }\n  function parseArrayOrPrimitive(meta, data, start, count) {\n    const iScale = meta.iScale;\n    const vScale = meta.vScale;\n    const labels = iScale.getLabels();\n    const singleScale = iScale === vScale;\n    const parsed = [];\n    let i, ilen, item, entry;\n    for (i = start, ilen = start + count; i < ilen; ++i) {\n      entry = data[i];\n      item = {};\n      item[iScale.axis] = singleScale || iScale.parse(labels[i], i);\n      parsed.push(parseValue(entry, item, vScale, i));\n    }\n    return parsed;\n  }\n  function isFloatBar(custom) {\n    return custom && custom.barStart !== undefined && custom.barEnd !== undefined;\n  }\n  class BarController extends DatasetController {\n    parsePrimitiveData(meta, data, start, count) {\n      return parseArrayOrPrimitive(meta, data, start, count);\n    }\n    parseArrayData(meta, data, start, count) {\n      return parseArrayOrPrimitive(meta, data, start, count);\n    }\n    parseObjectData(meta, data, start, count) {\n      const {\n        iScale,\n        vScale\n      } = meta;\n      const {\n        xAxisKey = 'x',\n        yAxisKey = 'y'\n      } = this._parsing;\n      const iAxisKey = iScale.axis === 'x' ? xAxisKey : yAxisKey;\n      const vAxisKey = vScale.axis === 'x' ? xAxisKey : yAxisKey;\n      const parsed = [];\n      let i, ilen, item, obj;\n      for (i = start, ilen = start + count; i < ilen; ++i) {\n        obj = data[i];\n        item = {};\n        item[iScale.axis] = iScale.parse(resolveObjectKey(obj, iAxisKey), i);\n        parsed.push(parseValue(resolveObjectKey(obj, vAxisKey), item, vScale, i));\n      }\n      return parsed;\n    }\n    updateRangeFromParsed(range, scale, parsed, stack) {\n      super.updateRangeFromParsed(range, scale, parsed, stack);\n      const custom = parsed._custom;\n      if (custom && scale === this._cachedMeta.vScale) {\n        range.min = Math.min(range.min, custom.min);\n        range.max = Math.max(range.max, custom.max);\n      }\n    }\n    getLabelAndValue(index) {\n      const me = this;\n      const meta = me._cachedMeta;\n      const {\n        iScale,\n        vScale\n      } = meta;\n      const parsed = me.getParsed(index);\n      const custom = parsed._custom;\n      const value = isFloatBar(custom) ? '[' + custom.start + ', ' + custom.end + ']' : '' + vScale.getLabelForValue(parsed[vScale.axis]);\n      return {\n        label: '' + iScale.getLabelForValue(parsed[iScale.axis]),\n        value\n      };\n    }\n    initialize() {\n      const me = this;\n      me.enableOptionSharing = true;\n      super.initialize();\n      const meta = me._cachedMeta;\n      meta.stack = me.getDataset().stack;\n    }\n    update(mode) {\n      const me = this;\n      const meta = me._cachedMeta;\n      me.updateElements(meta.data, 0, meta.data.length, mode);\n    }\n    updateElements(bars, start, count, mode) {\n      const me = this;\n      const reset = mode === 'reset';\n      const vScale = me._cachedMeta.vScale;\n      const base = vScale.getBasePixel();\n      const horizontal = vScale.isHorizontal();\n      const ruler = me._getRuler();\n      const firstOpts = me.resolveDataElementOptions(start, mode);\n      const sharedOptions = me.getSharedOptions(firstOpts);\n      const includeOptions = me.includeOptions(mode, sharedOptions);\n      me.updateSharedOptions(sharedOptions, mode, firstOpts);\n      for (let i = start; i < start + count; i++) {\n        const parsed = me.getParsed(i);\n        const vpixels = reset || isNullOrUndef(parsed[vScale.axis]) ? {\n          base,\n          head: base\n        } : me._calculateBarValuePixels(i);\n        const ipixels = me._calculateBarIndexPixels(i, ruler);\n        const stack = (parsed._stacks || {})[vScale.axis];\n        const properties = {\n          horizontal,\n          base: vpixels.base,\n          enableBorderRadius: !stack || isFloatBar(parsed._custom) || me.index === stack._top || me.index === stack._bottom,\n          x: horizontal ? vpixels.head : ipixels.center,\n          y: horizontal ? ipixels.center : vpixels.head,\n          height: horizontal ? ipixels.size : undefined,\n          width: horizontal ? undefined : ipixels.size\n        };\n        if (includeOptions) {\n          properties.options = sharedOptions || me.resolveDataElementOptions(i, mode);\n        }\n        me.updateElement(bars[i], i, properties, mode);\n      }\n    }\n    _getStacks(last, dataIndex) {\n      const me = this;\n      const meta = me._cachedMeta;\n      const iScale = meta.iScale;\n      const metasets = iScale.getMatchingVisibleMetas(me._type);\n      const stacked = iScale.options.stacked;\n      const ilen = metasets.length;\n      const stacks = [];\n      let i, item;\n      for (i = 0; i < ilen; ++i) {\n        item = metasets[i];\n        if (typeof dataIndex !== 'undefined') {\n          const val = item.controller.getParsed(dataIndex)[item.controller._cachedMeta.vScale.axis];\n          if (isNullOrUndef(val) || isNaN(val)) {\n            continue;\n          }\n        }\n        if (stacked === false || stacks.indexOf(item.stack) === -1 || stacked === undefined && item.stack === undefined) {\n          stacks.push(item.stack);\n        }\n        if (item.index === last) {\n          break;\n        }\n      }\n      if (!stacks.length) {\n        stacks.push(undefined);\n      }\n      return stacks;\n    }\n    _getStackCount(index) {\n      return this._getStacks(undefined, index).length;\n    }\n    _getStackIndex(datasetIndex, name, dataIndex) {\n      const stacks = this._getStacks(datasetIndex, dataIndex);\n      const index = name !== undefined ? stacks.indexOf(name) : -1;\n      return index === -1 ? stacks.length - 1 : index;\n    }\n    _getRuler() {\n      const me = this;\n      const opts = me.options;\n      const meta = me._cachedMeta;\n      const iScale = meta.iScale;\n      const pixels = [];\n      let i, ilen;\n      for (i = 0, ilen = meta.data.length; i < ilen; ++i) {\n        pixels.push(iScale.getPixelForValue(me.getParsed(i)[iScale.axis], i));\n      }\n      const barThickness = opts.barThickness;\n      const min = barThickness || computeMinSampleSize(iScale);\n      return {\n        min,\n        pixels,\n        start: iScale._startPixel,\n        end: iScale._endPixel,\n        stackCount: me._getStackCount(),\n        scale: iScale,\n        grouped: opts.grouped,\n        ratio: barThickness ? 1 : opts.categoryPercentage * opts.barPercentage\n      };\n    }\n    _calculateBarValuePixels(index) {\n      const me = this;\n      const {\n        vScale,\n        _stacked\n      } = me._cachedMeta;\n      const {\n        base: baseValue,\n        minBarLength\n      } = me.options;\n      const parsed = me.getParsed(index);\n      const custom = parsed._custom;\n      const floating = isFloatBar(custom);\n      let value = parsed[vScale.axis];\n      let start = 0;\n      let length = _stacked ? me.applyStack(vScale, parsed, _stacked) : value;\n      let head, size;\n      if (length !== value) {\n        start = length - value;\n        length = value;\n      }\n      if (floating) {\n        value = custom.barStart;\n        length = custom.barEnd - custom.barStart;\n        if (value !== 0 && sign(value) !== sign(custom.barEnd)) {\n          start = 0;\n        }\n        start += value;\n      }\n      const startValue = !isNullOrUndef(baseValue) && !floating ? baseValue : start;\n      let base = vScale.getPixelForValue(startValue);\n      if (this.chart.getDataVisibility(index)) {\n        head = vScale.getPixelForValue(start + length);\n      } else {\n        head = base;\n      }\n      size = head - base;\n      if (minBarLength !== undefined && Math.abs(size) < minBarLength) {\n        size = size < 0 ? -minBarLength : minBarLength;\n        if (value === 0) {\n          base -= size / 2;\n        }\n        head = base + size;\n      }\n      const actualBase = baseValue || 0;\n      if (base === vScale.getPixelForValue(actualBase)) {\n        const halfGrid = vScale.getLineWidthForValue(actualBase) / 2;\n        if (size > 0) {\n          base += halfGrid;\n          size -= halfGrid;\n        } else if (size < 0) {\n          base -= halfGrid;\n          size += halfGrid;\n        }\n      }\n      return {\n        size,\n        base,\n        head,\n        center: head + size / 2\n      };\n    }\n    _calculateBarIndexPixels(index, ruler) {\n      const me = this;\n      const scale = ruler.scale;\n      const options = me.options;\n      const skipNull = options.skipNull;\n      const maxBarThickness = valueOrDefault(options.maxBarThickness, Infinity);\n      let center, size;\n      if (ruler.grouped) {\n        const stackCount = skipNull ? me._getStackCount(index) : ruler.stackCount;\n        const range = options.barThickness === 'flex' ? computeFlexCategoryTraits(index, ruler, options, stackCount) : computeFitCategoryTraits(index, ruler, options, stackCount);\n        const stackIndex = me._getStackIndex(me.index, me._cachedMeta.stack, skipNull ? index : undefined);\n        center = range.start + range.chunk * stackIndex + range.chunk / 2;\n        size = Math.min(maxBarThickness, range.chunk * range.ratio);\n      } else {\n        center = scale.getPixelForValue(me.getParsed(index)[scale.axis], index);\n        size = Math.min(maxBarThickness, ruler.min * ruler.ratio);\n      }\n      return {\n        base: center - size / 2,\n        head: center + size / 2,\n        center,\n        size\n      };\n    }\n    draw() {\n      const me = this;\n      const chart = me.chart;\n      const meta = me._cachedMeta;\n      const vScale = meta.vScale;\n      const rects = meta.data;\n      const ilen = rects.length;\n      let i = 0;\n      clipArea(chart.ctx, chart.chartArea);\n      for (; i < ilen; ++i) {\n        if (me.getParsed(i)[vScale.axis] !== null) {\n          rects[i].draw(me._ctx);\n        }\n      }\n      unclipArea(chart.ctx);\n    }\n  }\n  BarController.id = 'bar';\n  BarController.defaults = {\n    datasetElementType: false,\n    dataElementType: 'bar',\n    categoryPercentage: 0.8,\n    barPercentage: 0.9,\n    grouped: true,\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['x', 'y', 'base', 'width', 'height']\n      }\n    }\n  };\n  BarController.overrides = {\n    interaction: {\n      mode: 'index'\n    },\n    scales: {\n      _index_: {\n        type: 'category',\n        offset: true,\n        grid: {\n          offset: true\n        }\n      },\n      _value_: {\n        type: 'linear',\n        beginAtZero: true\n      }\n    }\n  };\n  class BubbleController extends DatasetController {\n    initialize() {\n      this.enableOptionSharing = true;\n      super.initialize();\n    }\n    parseObjectData(meta, data, start, count) {\n      const {\n        xScale,\n        yScale\n      } = meta;\n      const {\n        xAxisKey = 'x',\n        yAxisKey = 'y'\n      } = this._parsing;\n      const parsed = [];\n      let i, ilen, item;\n      for (i = start, ilen = start + count; i < ilen; ++i) {\n        item = data[i];\n        parsed.push({\n          x: xScale.parse(resolveObjectKey(item, xAxisKey), i),\n          y: yScale.parse(resolveObjectKey(item, yAxisKey), i),\n          _custom: item && item.r && +item.r\n        });\n      }\n      return parsed;\n    }\n    getMaxOverflow() {\n      const {\n        data,\n        _parsed\n      } = this._cachedMeta;\n      let max = 0;\n      for (let i = data.length - 1; i >= 0; --i) {\n        max = Math.max(max, data[i].size() / 2, _parsed[i]._custom);\n      }\n      return max > 0 && max;\n    }\n    getLabelAndValue(index) {\n      const me = this;\n      const meta = me._cachedMeta;\n      const {\n        xScale,\n        yScale\n      } = meta;\n      const parsed = me.getParsed(index);\n      const x = xScale.getLabelForValue(parsed.x);\n      const y = yScale.getLabelForValue(parsed.y);\n      const r = parsed._custom;\n      return {\n        label: meta.label,\n        value: '(' + x + ', ' + y + (r ? ', ' + r : '') + ')'\n      };\n    }\n    update(mode) {\n      const me = this;\n      const points = me._cachedMeta.data;\n      me.updateElements(points, 0, points.length, mode);\n    }\n    updateElements(points, start, count, mode) {\n      const me = this;\n      const reset = mode === 'reset';\n      const {\n        iScale,\n        vScale\n      } = me._cachedMeta;\n      const firstOpts = me.resolveDataElementOptions(start, mode);\n      const sharedOptions = me.getSharedOptions(firstOpts);\n      const includeOptions = me.includeOptions(mode, sharedOptions);\n      const iAxis = iScale.axis;\n      const vAxis = vScale.axis;\n      for (let i = start; i < start + count; i++) {\n        const point = points[i];\n        const parsed = !reset && me.getParsed(i);\n        const properties = {};\n        const iPixel = properties[iAxis] = reset ? iScale.getPixelForDecimal(0.5) : iScale.getPixelForValue(parsed[iAxis]);\n        const vPixel = properties[vAxis] = reset ? vScale.getBasePixel() : vScale.getPixelForValue(parsed[vAxis]);\n        properties.skip = isNaN(iPixel) || isNaN(vPixel);\n        if (includeOptions) {\n          properties.options = me.resolveDataElementOptions(i, mode);\n          if (reset) {\n            properties.options.radius = 0;\n          }\n        }\n        me.updateElement(point, i, properties, mode);\n      }\n      me.updateSharedOptions(sharedOptions, mode, firstOpts);\n    }\n    resolveDataElementOptions(index, mode) {\n      const parsed = this.getParsed(index);\n      let values = super.resolveDataElementOptions(index, mode);\n      if (values.$shared) {\n        values = Object.assign({}, values, {\n          $shared: false\n        });\n      }\n      const radius = values.radius;\n      if (mode !== 'active') {\n        values.radius = 0;\n      }\n      values.radius += valueOrDefault(parsed && parsed._custom, radius);\n      return values;\n    }\n  }\n  BubbleController.id = 'bubble';\n  BubbleController.defaults = {\n    datasetElementType: false,\n    dataElementType: 'point',\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['x', 'y', 'borderWidth', 'radius']\n      }\n    }\n  };\n  BubbleController.overrides = {\n    scales: {\n      x: {\n        type: 'linear'\n      },\n      y: {\n        type: 'linear'\n      }\n    },\n    plugins: {\n      tooltip: {\n        callbacks: {\n          title() {\n            return '';\n          }\n        }\n      }\n    }\n  };\n  function getRatioAndOffset(rotation, circumference, cutout) {\n    let ratioX = 1;\n    let ratioY = 1;\n    let offsetX = 0;\n    let offsetY = 0;\n    if (circumference < TAU) {\n      const startAngle = rotation;\n      const endAngle = startAngle + circumference;\n      const startX = Math.cos(startAngle);\n      const startY = Math.sin(startAngle);\n      const endX = Math.cos(endAngle);\n      const endY = Math.sin(endAngle);\n      const calcMax = (angle, a, b) => _angleBetween(angle, startAngle, endAngle, true) ? 1 : Math.max(a, a * cutout, b, b * cutout);\n      const calcMin = (angle, a, b) => _angleBetween(angle, startAngle, endAngle, true) ? -1 : Math.min(a, a * cutout, b, b * cutout);\n      const maxX = calcMax(0, startX, endX);\n      const maxY = calcMax(HALF_PI, startY, endY);\n      const minX = calcMin(PI, startX, endX);\n      const minY = calcMin(PI + HALF_PI, startY, endY);\n      ratioX = (maxX - minX) / 2;\n      ratioY = (maxY - minY) / 2;\n      offsetX = -(maxX + minX) / 2;\n      offsetY = -(maxY + minY) / 2;\n    }\n    return {\n      ratioX,\n      ratioY,\n      offsetX,\n      offsetY\n    };\n  }\n  class DoughnutController extends DatasetController {\n    constructor(chart, datasetIndex) {\n      super(chart, datasetIndex);\n      this.enableOptionSharing = true;\n      this.innerRadius = undefined;\n      this.outerRadius = undefined;\n      this.offsetX = undefined;\n      this.offsetY = undefined;\n    }\n    linkScales() {}\n    parse(start, count) {\n      const data = this.getDataset().data;\n      const meta = this._cachedMeta;\n      let i, ilen;\n      for (i = start, ilen = start + count; i < ilen; ++i) {\n        meta._parsed[i] = +data[i];\n      }\n    }\n    _getRotation() {\n      return toRadians(this.options.rotation - 90);\n    }\n    _getCircumference() {\n      return toRadians(this.options.circumference);\n    }\n    _getRotationExtents() {\n      let min = TAU;\n      let max = -TAU;\n      const me = this;\n      for (let i = 0; i < me.chart.data.datasets.length; ++i) {\n        if (me.chart.isDatasetVisible(i)) {\n          const controller = me.chart.getDatasetMeta(i).controller;\n          const rotation = controller._getRotation();\n          const circumference = controller._getCircumference();\n          min = Math.min(min, rotation);\n          max = Math.max(max, rotation + circumference);\n        }\n      }\n      return {\n        rotation: min,\n        circumference: max - min\n      };\n    }\n    update(mode) {\n      const me = this;\n      const chart = me.chart;\n      const {\n        chartArea\n      } = chart;\n      const meta = me._cachedMeta;\n      const arcs = meta.data;\n      const spacing = me.getMaxBorderWidth() + me.getMaxOffset(arcs);\n      const maxSize = Math.max((Math.min(chartArea.width, chartArea.height) - spacing) / 2, 0);\n      const cutout = Math.min(toPercentage(me.options.cutout, maxSize), 1);\n      const chartWeight = me._getRingWeight(me.index);\n      const {\n        circumference,\n        rotation\n      } = me._getRotationExtents();\n      const {\n        ratioX,\n        ratioY,\n        offsetX,\n        offsetY\n      } = getRatioAndOffset(rotation, circumference, cutout);\n      const maxWidth = (chartArea.width - spacing) / ratioX;\n      const maxHeight = (chartArea.height - spacing) / ratioY;\n      const maxRadius = Math.max(Math.min(maxWidth, maxHeight) / 2, 0);\n      const outerRadius = toDimension(me.options.radius, maxRadius);\n      const innerRadius = Math.max(outerRadius * cutout, 0);\n      const radiusLength = (outerRadius - innerRadius) / me._getVisibleDatasetWeightTotal();\n      me.offsetX = offsetX * outerRadius;\n      me.offsetY = offsetY * outerRadius;\n      meta.total = me.calculateTotal();\n      me.outerRadius = outerRadius - radiusLength * me._getRingWeightOffset(me.index);\n      me.innerRadius = Math.max(me.outerRadius - radiusLength * chartWeight, 0);\n      me.updateElements(arcs, 0, arcs.length, mode);\n    }\n    _circumference(i, reset) {\n      const me = this;\n      const opts = me.options;\n      const meta = me._cachedMeta;\n      const circumference = me._getCircumference();\n      if (reset && opts.animation.animateRotate || !this.chart.getDataVisibility(i) || meta._parsed[i] === null) {\n        return 0;\n      }\n      return me.calculateCircumference(meta._parsed[i] * circumference / TAU);\n    }\n    updateElements(arcs, start, count, mode) {\n      const me = this;\n      const reset = mode === 'reset';\n      const chart = me.chart;\n      const chartArea = chart.chartArea;\n      const opts = chart.options;\n      const animationOpts = opts.animation;\n      const centerX = (chartArea.left + chartArea.right) / 2;\n      const centerY = (chartArea.top + chartArea.bottom) / 2;\n      const animateScale = reset && animationOpts.animateScale;\n      const innerRadius = animateScale ? 0 : me.innerRadius;\n      const outerRadius = animateScale ? 0 : me.outerRadius;\n      const firstOpts = me.resolveDataElementOptions(start, mode);\n      const sharedOptions = me.getSharedOptions(firstOpts);\n      const includeOptions = me.includeOptions(mode, sharedOptions);\n      let startAngle = me._getRotation();\n      let i;\n      for (i = 0; i < start; ++i) {\n        startAngle += me._circumference(i, reset);\n      }\n      for (i = start; i < start + count; ++i) {\n        const circumference = me._circumference(i, reset);\n        const arc = arcs[i];\n        const properties = {\n          x: centerX + me.offsetX,\n          y: centerY + me.offsetY,\n          startAngle,\n          endAngle: startAngle + circumference,\n          circumference,\n          outerRadius,\n          innerRadius\n        };\n        if (includeOptions) {\n          properties.options = sharedOptions || me.resolveDataElementOptions(i, mode);\n        }\n        startAngle += circumference;\n        me.updateElement(arc, i, properties, mode);\n      }\n      me.updateSharedOptions(sharedOptions, mode, firstOpts);\n    }\n    calculateTotal() {\n      const meta = this._cachedMeta;\n      const metaData = meta.data;\n      let total = 0;\n      let i;\n      for (i = 0; i < metaData.length; i++) {\n        const value = meta._parsed[i];\n        if (value !== null && !isNaN(value) && this.chart.getDataVisibility(i)) {\n          total += Math.abs(value);\n        }\n      }\n      return total;\n    }\n    calculateCircumference(value) {\n      const total = this._cachedMeta.total;\n      if (total > 0 && !isNaN(value)) {\n        return TAU * (Math.abs(value) / total);\n      }\n      return 0;\n    }\n    getLabelAndValue(index) {\n      const me = this;\n      const meta = me._cachedMeta;\n      const chart = me.chart;\n      const labels = chart.data.labels || [];\n      const value = formatNumber(meta._parsed[index], chart.options.locale);\n      return {\n        label: labels[index] || '',\n        value\n      };\n    }\n    getMaxBorderWidth(arcs) {\n      const me = this;\n      let max = 0;\n      const chart = me.chart;\n      let i, ilen, meta, controller, options;\n      if (!arcs) {\n        for (i = 0, ilen = chart.data.datasets.length; i < ilen; ++i) {\n          if (chart.isDatasetVisible(i)) {\n            meta = chart.getDatasetMeta(i);\n            arcs = meta.data;\n            controller = meta.controller;\n            if (controller !== me) {\n              controller.configure();\n            }\n            break;\n          }\n        }\n      }\n      if (!arcs) {\n        return 0;\n      }\n      for (i = 0, ilen = arcs.length; i < ilen; ++i) {\n        options = controller.resolveDataElementOptions(i);\n        if (options.borderAlign !== 'inner') {\n          max = Math.max(max, options.borderWidth || 0, options.hoverBorderWidth || 0);\n        }\n      }\n      return max;\n    }\n    getMaxOffset(arcs) {\n      let max = 0;\n      for (let i = 0, ilen = arcs.length; i < ilen; ++i) {\n        const options = this.resolveDataElementOptions(i);\n        max = Math.max(max, options.offset || 0, options.hoverOffset || 0);\n      }\n      return max;\n    }\n    _getRingWeightOffset(datasetIndex) {\n      let ringWeightOffset = 0;\n      for (let i = 0; i < datasetIndex; ++i) {\n        if (this.chart.isDatasetVisible(i)) {\n          ringWeightOffset += this._getRingWeight(i);\n        }\n      }\n      return ringWeightOffset;\n    }\n    _getRingWeight(datasetIndex) {\n      return Math.max(valueOrDefault(this.chart.data.datasets[datasetIndex].weight, 1), 0);\n    }\n    _getVisibleDatasetWeightTotal() {\n      return this._getRingWeightOffset(this.chart.data.datasets.length) || 1;\n    }\n  }\n  DoughnutController.id = 'doughnut';\n  DoughnutController.defaults = {\n    datasetElementType: false,\n    dataElementType: 'arc',\n    animation: {\n      animateRotate: true,\n      animateScale: false\n    },\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['circumference', 'endAngle', 'innerRadius', 'outerRadius', 'startAngle', 'x', 'y', 'offset', 'borderWidth']\n      }\n    },\n    cutout: '50%',\n    rotation: 0,\n    circumference: 360,\n    radius: '100%',\n    indexAxis: 'r'\n  };\n  DoughnutController.overrides = {\n    aspectRatio: 1,\n    plugins: {\n      legend: {\n        labels: {\n          generateLabels(chart) {\n            const data = chart.data;\n            if (data.labels.length && data.datasets.length) {\n              return data.labels.map((label, i) => {\n                const meta = chart.getDatasetMeta(0);\n                const style = meta.controller.getStyle(i);\n                return {\n                  text: label,\n                  fillStyle: style.backgroundColor,\n                  strokeStyle: style.borderColor,\n                  lineWidth: style.borderWidth,\n                  hidden: !chart.getDataVisibility(i),\n                  index: i\n                };\n              });\n            }\n            return [];\n          }\n        },\n        onClick(e, legendItem, legend) {\n          legend.chart.toggleDataVisibility(legendItem.index);\n          legend.chart.update();\n        }\n      },\n      tooltip: {\n        callbacks: {\n          title() {\n            return '';\n          },\n          label(tooltipItem) {\n            let dataLabel = tooltipItem.label;\n            const value = ': ' + tooltipItem.formattedValue;\n            if (isArray(dataLabel)) {\n              dataLabel = dataLabel.slice();\n              dataLabel[0] += value;\n            } else {\n              dataLabel += value;\n            }\n            return dataLabel;\n          }\n        }\n      }\n    }\n  };\n  class LineController extends DatasetController {\n    initialize() {\n      this.enableOptionSharing = true;\n      super.initialize();\n    }\n    update(mode) {\n      const me = this;\n      const meta = me._cachedMeta;\n      const {\n        dataset: line,\n        data: points = [],\n        _dataset\n      } = meta;\n      const animationsDisabled = me.chart._animationsDisabled;\n      let {\n        start,\n        count\n      } = getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n      me._drawStart = start;\n      me._drawCount = count;\n      if (scaleRangesChanged(meta)) {\n        start = 0;\n        count = points.length;\n      }\n      line._decimated = !!_dataset._decimated;\n      line.points = points;\n      const options = me.resolveDatasetElementOptions(mode);\n      if (!me.options.showLine) {\n        options.borderWidth = 0;\n      }\n      options.segment = me.options.segment;\n      me.updateElement(line, undefined, {\n        animated: !animationsDisabled,\n        options\n      }, mode);\n      me.updateElements(points, start, count, mode);\n    }\n    updateElements(points, start, count, mode) {\n      const me = this;\n      const reset = mode === 'reset';\n      const {\n        iScale,\n        vScale,\n        _stacked\n      } = me._cachedMeta;\n      const firstOpts = me.resolveDataElementOptions(start, mode);\n      const sharedOptions = me.getSharedOptions(firstOpts);\n      const includeOptions = me.includeOptions(mode, sharedOptions);\n      const iAxis = iScale.axis;\n      const vAxis = vScale.axis;\n      const spanGaps = me.options.spanGaps;\n      const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n      const directUpdate = me.chart._animationsDisabled || reset || mode === 'none';\n      let prevParsed = start > 0 && me.getParsed(start - 1);\n      for (let i = start; i < start + count; ++i) {\n        const point = points[i];\n        const parsed = me.getParsed(i);\n        const properties = directUpdate ? point : {};\n        const nullData = isNullOrUndef(parsed[vAxis]);\n        const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n        const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? me.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n        properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n        properties.stop = i > 0 && parsed[iAxis] - prevParsed[iAxis] > maxGapLength;\n        properties.parsed = parsed;\n        if (includeOptions) {\n          properties.options = sharedOptions || me.resolveDataElementOptions(i, mode);\n        }\n        if (!directUpdate) {\n          me.updateElement(point, i, properties, mode);\n        }\n        prevParsed = parsed;\n      }\n      me.updateSharedOptions(sharedOptions, mode, firstOpts);\n    }\n    getMaxOverflow() {\n      const me = this;\n      const meta = me._cachedMeta;\n      const dataset = meta.dataset;\n      const border = dataset.options && dataset.options.borderWidth || 0;\n      const data = meta.data || [];\n      if (!data.length) {\n        return border;\n      }\n      const firstPoint = data[0].size(me.resolveDataElementOptions(0));\n      const lastPoint = data[data.length - 1].size(me.resolveDataElementOptions(data.length - 1));\n      return Math.max(border, firstPoint, lastPoint) / 2;\n    }\n    draw() {\n      const meta = this._cachedMeta;\n      meta.dataset.updateControlPoints(this.chart.chartArea, meta.iScale.axis);\n      super.draw();\n    }\n  }\n  LineController.id = 'line';\n  LineController.defaults = {\n    datasetElementType: 'line',\n    dataElementType: 'point',\n    showLine: true,\n    spanGaps: false\n  };\n  LineController.overrides = {\n    scales: {\n      _index_: {\n        type: 'category'\n      },\n      _value_: {\n        type: 'linear'\n      }\n    }\n  };\n  function getStartAndCountOfVisiblePoints(meta, points, animationsDisabled) {\n    const pointCount = points.length;\n    let start = 0;\n    let count = pointCount;\n    if (meta._sorted) {\n      const {\n        iScale,\n        _parsed\n      } = meta;\n      const axis = iScale.axis;\n      const {\n        min,\n        max,\n        minDefined,\n        maxDefined\n      } = iScale.getUserBounds();\n      if (minDefined) {\n        start = _limitValue(Math.min(_lookupByKey(_parsed, iScale.axis, min).lo, animationsDisabled ? pointCount : _lookupByKey(points, axis, iScale.getPixelForValue(min)).lo), 0, pointCount - 1);\n      }\n      if (maxDefined) {\n        count = _limitValue(Math.max(_lookupByKey(_parsed, iScale.axis, max).hi + 1, animationsDisabled ? 0 : _lookupByKey(points, axis, iScale.getPixelForValue(max)).hi + 1), start, pointCount) - start;\n      } else {\n        count = pointCount - start;\n      }\n    }\n    return {\n      start,\n      count\n    };\n  }\n  function scaleRangesChanged(meta) {\n    const {\n      xScale,\n      yScale,\n      _scaleRanges\n    } = meta;\n    const newRanges = {\n      xmin: xScale.min,\n      xmax: xScale.max,\n      ymin: yScale.min,\n      ymax: yScale.max\n    };\n    if (!_scaleRanges) {\n      meta._scaleRanges = newRanges;\n      return true;\n    }\n    const changed = _scaleRanges.xmin !== xScale.min || _scaleRanges.xmax !== xScale.max || _scaleRanges.ymin !== yScale.min || _scaleRanges.ymax !== yScale.max;\n    Object.assign(_scaleRanges, newRanges);\n    return changed;\n  }\n  class PolarAreaController extends DatasetController {\n    constructor(chart, datasetIndex) {\n      super(chart, datasetIndex);\n      this.innerRadius = undefined;\n      this.outerRadius = undefined;\n    }\n    getLabelAndValue(index) {\n      const me = this;\n      const meta = me._cachedMeta;\n      const chart = me.chart;\n      const labels = chart.data.labels || [];\n      const value = formatNumber(meta._parsed[index].r, chart.options.locale);\n      return {\n        label: labels[index] || '',\n        value\n      };\n    }\n    update(mode) {\n      const arcs = this._cachedMeta.data;\n      this._updateRadius();\n      this.updateElements(arcs, 0, arcs.length, mode);\n    }\n    _updateRadius() {\n      const me = this;\n      const chart = me.chart;\n      const chartArea = chart.chartArea;\n      const opts = chart.options;\n      const minSize = Math.min(chartArea.right - chartArea.left, chartArea.bottom - chartArea.top);\n      const outerRadius = Math.max(minSize / 2, 0);\n      const innerRadius = Math.max(opts.cutoutPercentage ? outerRadius / 100 * opts.cutoutPercentage : 1, 0);\n      const radiusLength = (outerRadius - innerRadius) / chart.getVisibleDatasetCount();\n      me.outerRadius = outerRadius - radiusLength * me.index;\n      me.innerRadius = me.outerRadius - radiusLength;\n    }\n    updateElements(arcs, start, count, mode) {\n      const me = this;\n      const reset = mode === 'reset';\n      const chart = me.chart;\n      const dataset = me.getDataset();\n      const opts = chart.options;\n      const animationOpts = opts.animation;\n      const scale = me._cachedMeta.rScale;\n      const centerX = scale.xCenter;\n      const centerY = scale.yCenter;\n      const datasetStartAngle = scale.getIndexAngle(0) - 0.5 * PI;\n      let angle = datasetStartAngle;\n      let i;\n      const defaultAngle = 360 / me.countVisibleElements();\n      for (i = 0; i < start; ++i) {\n        angle += me._computeAngle(i, mode, defaultAngle);\n      }\n      for (i = start; i < start + count; i++) {\n        const arc = arcs[i];\n        let startAngle = angle;\n        let endAngle = angle + me._computeAngle(i, mode, defaultAngle);\n        let outerRadius = chart.getDataVisibility(i) ? scale.getDistanceFromCenterForValue(dataset.data[i]) : 0;\n        angle = endAngle;\n        if (reset) {\n          if (animationOpts.animateScale) {\n            outerRadius = 0;\n          }\n          if (animationOpts.animateRotate) {\n            startAngle = endAngle = datasetStartAngle;\n          }\n        }\n        const properties = {\n          x: centerX,\n          y: centerY,\n          innerRadius: 0,\n          outerRadius,\n          startAngle,\n          endAngle,\n          options: me.resolveDataElementOptions(i, mode)\n        };\n        me.updateElement(arc, i, properties, mode);\n      }\n    }\n    countVisibleElements() {\n      const dataset = this.getDataset();\n      const meta = this._cachedMeta;\n      let count = 0;\n      meta.data.forEach((element, index) => {\n        if (!isNaN(dataset.data[index]) && this.chart.getDataVisibility(index)) {\n          count++;\n        }\n      });\n      return count;\n    }\n    _computeAngle(index, mode, defaultAngle) {\n      return this.chart.getDataVisibility(index) ? toRadians(this.resolveDataElementOptions(index, mode).angle || defaultAngle) : 0;\n    }\n  }\n  PolarAreaController.id = 'polarArea';\n  PolarAreaController.defaults = {\n    dataElementType: 'arc',\n    animation: {\n      animateRotate: true,\n      animateScale: true\n    },\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['x', 'y', 'startAngle', 'endAngle', 'innerRadius', 'outerRadius']\n      }\n    },\n    indexAxis: 'r',\n    startAngle: 0\n  };\n  PolarAreaController.overrides = {\n    aspectRatio: 1,\n    plugins: {\n      legend: {\n        labels: {\n          generateLabels(chart) {\n            const data = chart.data;\n            if (data.labels.length && data.datasets.length) {\n              return data.labels.map((label, i) => {\n                const meta = chart.getDatasetMeta(0);\n                const style = meta.controller.getStyle(i);\n                return {\n                  text: label,\n                  fillStyle: style.backgroundColor,\n                  strokeStyle: style.borderColor,\n                  lineWidth: style.borderWidth,\n                  hidden: !chart.getDataVisibility(i),\n                  index: i\n                };\n              });\n            }\n            return [];\n          }\n        },\n        onClick(e, legendItem, legend) {\n          legend.chart.toggleDataVisibility(legendItem.index);\n          legend.chart.update();\n        }\n      },\n      tooltip: {\n        callbacks: {\n          title() {\n            return '';\n          },\n          label(context) {\n            return context.chart.data.labels[context.dataIndex] + ': ' + context.formattedValue;\n          }\n        }\n      }\n    },\n    scales: {\n      r: {\n        type: 'radialLinear',\n        angleLines: {\n          display: false\n        },\n        beginAtZero: true,\n        grid: {\n          circular: true\n        },\n        pointLabels: {\n          display: false\n        },\n        startAngle: 0\n      }\n    }\n  };\n  class PieController extends DoughnutController {}\n  PieController.id = 'pie';\n  PieController.defaults = {\n    cutout: 0,\n    rotation: 0,\n    circumference: 360,\n    radius: '100%'\n  };\n  class RadarController extends DatasetController {\n    getLabelAndValue(index) {\n      const me = this;\n      const vScale = me._cachedMeta.vScale;\n      const parsed = me.getParsed(index);\n      return {\n        label: vScale.getLabels()[index],\n        value: '' + vScale.getLabelForValue(parsed[vScale.axis])\n      };\n    }\n    update(mode) {\n      const me = this;\n      const meta = me._cachedMeta;\n      const line = meta.dataset;\n      const points = meta.data || [];\n      const labels = meta.iScale.getLabels();\n      line.points = points;\n      if (mode !== 'resize') {\n        const options = me.resolveDatasetElementOptions(mode);\n        if (!me.options.showLine) {\n          options.borderWidth = 0;\n        }\n        const properties = {\n          _loop: true,\n          _fullLoop: labels.length === points.length,\n          options\n        };\n        me.updateElement(line, undefined, properties, mode);\n      }\n      me.updateElements(points, 0, points.length, mode);\n    }\n    updateElements(points, start, count, mode) {\n      const me = this;\n      const dataset = me.getDataset();\n      const scale = me._cachedMeta.rScale;\n      const reset = mode === 'reset';\n      for (let i = start; i < start + count; i++) {\n        const point = points[i];\n        const options = me.resolveDataElementOptions(i, mode);\n        const pointPosition = scale.getPointPositionForValue(i, dataset.data[i]);\n        const x = reset ? scale.xCenter : pointPosition.x;\n        const y = reset ? scale.yCenter : pointPosition.y;\n        const properties = {\n          x,\n          y,\n          angle: pointPosition.angle,\n          skip: isNaN(x) || isNaN(y),\n          options\n        };\n        me.updateElement(point, i, properties, mode);\n      }\n    }\n  }\n  RadarController.id = 'radar';\n  RadarController.defaults = {\n    datasetElementType: 'line',\n    dataElementType: 'point',\n    indexAxis: 'r',\n    showLine: true,\n    elements: {\n      line: {\n        fill: 'start'\n      }\n    }\n  };\n  RadarController.overrides = {\n    aspectRatio: 1,\n    scales: {\n      r: {\n        type: 'radialLinear'\n      }\n    }\n  };\n  class ScatterController extends LineController {}\n  ScatterController.id = 'scatter';\n  ScatterController.defaults = {\n    showLine: false,\n    fill: false\n  };\n  ScatterController.overrides = {\n    interaction: {\n      mode: 'point'\n    },\n    plugins: {\n      tooltip: {\n        callbacks: {\n          title() {\n            return '';\n          },\n          label(item) {\n            return '(' + item.label + ', ' + item.formattedValue + ')';\n          }\n        }\n      }\n    },\n    scales: {\n      x: {\n        type: 'linear'\n      },\n      y: {\n        type: 'linear'\n      }\n    }\n  };\n  var controllers = /*#__PURE__*/Object.freeze({\n    __proto__: null,\n    BarController: BarController,\n    BubbleController: BubbleController,\n    DoughnutController: DoughnutController,\n    LineController: LineController,\n    PolarAreaController: PolarAreaController,\n    PieController: PieController,\n    RadarController: RadarController,\n    ScatterController: ScatterController\n  });\n  function clipArc(ctx, element, endAngle) {\n    const {\n      startAngle,\n      pixelMargin,\n      x,\n      y,\n      outerRadius,\n      innerRadius\n    } = element;\n    let angleMargin = pixelMargin / outerRadius;\n    ctx.beginPath();\n    ctx.arc(x, y, outerRadius, startAngle - angleMargin, endAngle + angleMargin);\n    if (innerRadius > pixelMargin) {\n      angleMargin = pixelMargin / innerRadius;\n      ctx.arc(x, y, innerRadius, endAngle + angleMargin, startAngle - angleMargin, true);\n    } else {\n      ctx.arc(x, y, pixelMargin, endAngle + HALF_PI, startAngle - HALF_PI);\n    }\n    ctx.closePath();\n    ctx.clip();\n  }\n  function toRadiusCorners(value) {\n    return _readValueToProps(value, ['outerStart', 'outerEnd', 'innerStart', 'innerEnd']);\n  }\n  function parseBorderRadius$1(arc, innerRadius, outerRadius, angleDelta) {\n    const o = toRadiusCorners(arc.options.borderRadius);\n    const halfThickness = (outerRadius - innerRadius) / 2;\n    const innerLimit = Math.min(halfThickness, angleDelta * innerRadius / 2);\n    const computeOuterLimit = val => {\n      const outerArcLimit = (outerRadius - Math.min(halfThickness, val)) * angleDelta / 2;\n      return _limitValue(val, 0, Math.min(halfThickness, outerArcLimit));\n    };\n    return {\n      outerStart: computeOuterLimit(o.outerStart),\n      outerEnd: computeOuterLimit(o.outerEnd),\n      innerStart: _limitValue(o.innerStart, 0, innerLimit),\n      innerEnd: _limitValue(o.innerEnd, 0, innerLimit)\n    };\n  }\n  function rThetaToXY(r, theta, x, y) {\n    return {\n      x: x + r * Math.cos(theta),\n      y: y + r * Math.sin(theta)\n    };\n  }\n  function pathArc(ctx, element, offset, end) {\n    const {\n      x,\n      y,\n      startAngle: start,\n      pixelMargin,\n      innerRadius: innerR\n    } = element;\n    const outerRadius = Math.max(element.outerRadius + offset - pixelMargin, 0);\n    const innerRadius = innerR > 0 ? innerR + offset + pixelMargin : 0;\n    const alpha = end - start;\n    const beta = Math.max(0.001, alpha * outerRadius - offset / PI) / outerRadius;\n    const angleOffset = (alpha - beta) / 2;\n    const startAngle = start + angleOffset;\n    const endAngle = end - angleOffset;\n    const {\n      outerStart,\n      outerEnd,\n      innerStart,\n      innerEnd\n    } = parseBorderRadius$1(element, innerRadius, outerRadius, endAngle - startAngle);\n    const outerStartAdjustedRadius = outerRadius - outerStart;\n    const outerEndAdjustedRadius = outerRadius - outerEnd;\n    const outerStartAdjustedAngle = startAngle + outerStart / outerStartAdjustedRadius;\n    const outerEndAdjustedAngle = endAngle - outerEnd / outerEndAdjustedRadius;\n    const innerStartAdjustedRadius = innerRadius + innerStart;\n    const innerEndAdjustedRadius = innerRadius + innerEnd;\n    const innerStartAdjustedAngle = startAngle + innerStart / innerStartAdjustedRadius;\n    const innerEndAdjustedAngle = endAngle - innerEnd / innerEndAdjustedRadius;\n    ctx.beginPath();\n    ctx.arc(x, y, outerRadius, outerStartAdjustedAngle, outerEndAdjustedAngle);\n    if (outerEnd > 0) {\n      const pCenter = rThetaToXY(outerEndAdjustedRadius, outerEndAdjustedAngle, x, y);\n      ctx.arc(pCenter.x, pCenter.y, outerEnd, outerEndAdjustedAngle, endAngle + HALF_PI);\n    }\n    const p4 = rThetaToXY(innerEndAdjustedRadius, endAngle, x, y);\n    ctx.lineTo(p4.x, p4.y);\n    if (innerEnd > 0) {\n      const pCenter = rThetaToXY(innerEndAdjustedRadius, innerEndAdjustedAngle, x, y);\n      ctx.arc(pCenter.x, pCenter.y, innerEnd, endAngle + HALF_PI, innerEndAdjustedAngle + Math.PI);\n    }\n    ctx.arc(x, y, innerRadius, endAngle - innerEnd / innerRadius, startAngle + innerStart / innerRadius, true);\n    if (innerStart > 0) {\n      const pCenter = rThetaToXY(innerStartAdjustedRadius, innerStartAdjustedAngle, x, y);\n      ctx.arc(pCenter.x, pCenter.y, innerStart, innerStartAdjustedAngle + Math.PI, startAngle - HALF_PI);\n    }\n    const p8 = rThetaToXY(outerStartAdjustedRadius, startAngle, x, y);\n    ctx.lineTo(p8.x, p8.y);\n    if (outerStart > 0) {\n      const pCenter = rThetaToXY(outerStartAdjustedRadius, outerStartAdjustedAngle, x, y);\n      ctx.arc(pCenter.x, pCenter.y, outerStart, startAngle - HALF_PI, outerStartAdjustedAngle);\n    }\n    ctx.closePath();\n  }\n  function drawArc(ctx, element, offset) {\n    const {\n      fullCircles,\n      startAngle,\n      circumference\n    } = element;\n    let endAngle = element.endAngle;\n    if (fullCircles) {\n      pathArc(ctx, element, offset, startAngle + TAU);\n      for (let i = 0; i < fullCircles; ++i) {\n        ctx.fill();\n      }\n      if (!isNaN(circumference)) {\n        endAngle = startAngle + circumference % TAU;\n        if (circumference % TAU === 0) {\n          endAngle += TAU;\n        }\n      }\n    }\n    pathArc(ctx, element, offset, endAngle);\n    ctx.fill();\n    return endAngle;\n  }\n  function drawFullCircleBorders(ctx, element, inner) {\n    const {\n      x,\n      y,\n      startAngle,\n      pixelMargin,\n      fullCircles\n    } = element;\n    const outerRadius = Math.max(element.outerRadius - pixelMargin, 0);\n    const innerRadius = element.innerRadius + pixelMargin;\n    let i;\n    if (inner) {\n      clipArc(ctx, element, startAngle + TAU);\n    }\n    ctx.beginPath();\n    ctx.arc(x, y, innerRadius, startAngle + TAU, startAngle, true);\n    for (i = 0; i < fullCircles; ++i) {\n      ctx.stroke();\n    }\n    ctx.beginPath();\n    ctx.arc(x, y, outerRadius, startAngle, startAngle + TAU);\n    for (i = 0; i < fullCircles; ++i) {\n      ctx.stroke();\n    }\n  }\n  function drawBorder(ctx, element, offset, endAngle) {\n    const {\n      options\n    } = element;\n    const inner = options.borderAlign === 'inner';\n    if (!options.borderWidth) {\n      return;\n    }\n    if (inner) {\n      ctx.lineWidth = options.borderWidth * 2;\n      ctx.lineJoin = 'round';\n    } else {\n      ctx.lineWidth = options.borderWidth;\n      ctx.lineJoin = 'bevel';\n    }\n    if (element.fullCircles) {\n      drawFullCircleBorders(ctx, element, inner);\n    }\n    if (inner) {\n      clipArc(ctx, element, endAngle);\n    }\n    pathArc(ctx, element, offset, endAngle);\n    ctx.stroke();\n  }\n  class ArcElement extends Element {\n    constructor(cfg) {\n      super();\n      this.options = undefined;\n      this.circumference = undefined;\n      this.startAngle = undefined;\n      this.endAngle = undefined;\n      this.innerRadius = undefined;\n      this.outerRadius = undefined;\n      this.pixelMargin = 0;\n      this.fullCircles = 0;\n      if (cfg) {\n        Object.assign(this, cfg);\n      }\n    }\n    inRange(chartX, chartY, useFinalPosition) {\n      const point = this.getProps(['x', 'y'], useFinalPosition);\n      const {\n        angle,\n        distance\n      } = getAngleFromPoint(point, {\n        x: chartX,\n        y: chartY\n      });\n      const {\n        startAngle,\n        endAngle,\n        innerRadius,\n        outerRadius,\n        circumference\n      } = this.getProps(['startAngle', 'endAngle', 'innerRadius', 'outerRadius', 'circumference'], useFinalPosition);\n      const betweenAngles = circumference >= TAU || _angleBetween(angle, startAngle, endAngle);\n      const withinRadius = distance >= innerRadius && distance <= outerRadius;\n      return betweenAngles && withinRadius;\n    }\n    getCenterPoint(useFinalPosition) {\n      const {\n        x,\n        y,\n        startAngle,\n        endAngle,\n        innerRadius,\n        outerRadius\n      } = this.getProps(['x', 'y', 'startAngle', 'endAngle', 'innerRadius', 'outerRadius', 'circumference'], useFinalPosition);\n      const halfAngle = (startAngle + endAngle) / 2;\n      const halfRadius = (innerRadius + outerRadius) / 2;\n      return {\n        x: x + Math.cos(halfAngle) * halfRadius,\n        y: y + Math.sin(halfAngle) * halfRadius\n      };\n    }\n    tooltipPosition(useFinalPosition) {\n      return this.getCenterPoint(useFinalPosition);\n    }\n    draw(ctx) {\n      const me = this;\n      const {\n        options,\n        circumference\n      } = me;\n      const offset = (options.offset || 0) / 2;\n      me.pixelMargin = options.borderAlign === 'inner' ? 0.33 : 0;\n      me.fullCircles = circumference > TAU ? Math.floor(circumference / TAU) : 0;\n      if (circumference === 0 || me.innerRadius < 0 || me.outerRadius < 0) {\n        return;\n      }\n      ctx.save();\n      let radiusOffset = 0;\n      if (offset) {\n        radiusOffset = offset / 2;\n        const halfAngle = (me.startAngle + me.endAngle) / 2;\n        ctx.translate(Math.cos(halfAngle) * radiusOffset, Math.sin(halfAngle) * radiusOffset);\n        if (me.circumference >= PI) {\n          radiusOffset = offset;\n        }\n      }\n      ctx.fillStyle = options.backgroundColor;\n      ctx.strokeStyle = options.borderColor;\n      const endAngle = drawArc(ctx, me, radiusOffset);\n      drawBorder(ctx, me, radiusOffset, endAngle);\n      ctx.restore();\n    }\n  }\n  ArcElement.id = 'arc';\n  ArcElement.defaults = {\n    borderAlign: 'center',\n    borderColor: '#fff',\n    borderRadius: 0,\n    borderWidth: 2,\n    offset: 0,\n    angle: undefined\n  };\n  ArcElement.defaultRoutes = {\n    backgroundColor: 'backgroundColor'\n  };\n  function setStyle(ctx, options) {\n    let style = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : options;\n    ctx.lineCap = valueOrDefault(style.borderCapStyle, options.borderCapStyle);\n    ctx.setLineDash(valueOrDefault(style.borderDash, options.borderDash));\n    ctx.lineDashOffset = valueOrDefault(style.borderDashOffset, options.borderDashOffset);\n    ctx.lineJoin = valueOrDefault(style.borderJoinStyle, options.borderJoinStyle);\n    ctx.lineWidth = valueOrDefault(style.borderWidth, options.borderWidth);\n    ctx.strokeStyle = valueOrDefault(style.borderColor, options.borderColor);\n  }\n  function lineTo(ctx, previous, target) {\n    ctx.lineTo(target.x, target.y);\n  }\n  function getLineMethod(options) {\n    if (options.stepped) {\n      return _steppedLineTo;\n    }\n    if (options.tension || options.cubicInterpolationMode === 'monotone') {\n      return _bezierCurveTo;\n    }\n    return lineTo;\n  }\n  function pathVars(points, segment) {\n    let params = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n    const count = points.length;\n    const {\n      start: paramsStart = 0,\n      end: paramsEnd = count - 1\n    } = params;\n    const {\n      start: segmentStart,\n      end: segmentEnd\n    } = segment;\n    const start = Math.max(paramsStart, segmentStart);\n    const end = Math.min(paramsEnd, segmentEnd);\n    const outside = paramsStart < segmentStart && paramsEnd < segmentStart || paramsStart > segmentEnd && paramsEnd > segmentEnd;\n    return {\n      count,\n      start,\n      loop: segment.loop,\n      ilen: end < start && !outside ? count + end - start : end - start\n    };\n  }\n  function pathSegment(ctx, line, segment, params) {\n    const {\n      points,\n      options\n    } = line;\n    const {\n      count,\n      start,\n      loop,\n      ilen\n    } = pathVars(points, segment, params);\n    const lineMethod = getLineMethod(options);\n    let {\n      move = true,\n      reverse\n    } = params || {};\n    let i, point, prev;\n    for (i = 0; i <= ilen; ++i) {\n      point = points[(start + (reverse ? ilen - i : i)) % count];\n      if (point.skip) {\n        continue;\n      } else if (move) {\n        ctx.moveTo(point.x, point.y);\n        move = false;\n      } else {\n        lineMethod(ctx, prev, point, reverse, options.stepped);\n      }\n      prev = point;\n    }\n    if (loop) {\n      point = points[(start + (reverse ? ilen : 0)) % count];\n      lineMethod(ctx, prev, point, reverse, options.stepped);\n    }\n    return !!loop;\n  }\n  function fastPathSegment(ctx, line, segment, params) {\n    const points = line.points;\n    const {\n      count,\n      start,\n      ilen\n    } = pathVars(points, segment, params);\n    const {\n      move = true,\n      reverse\n    } = params || {};\n    let avgX = 0;\n    let countX = 0;\n    let i, point, prevX, minY, maxY, lastY;\n    const pointIndex = index => (start + (reverse ? ilen - index : index)) % count;\n    const drawX = () => {\n      if (minY !== maxY) {\n        ctx.lineTo(avgX, maxY);\n        ctx.lineTo(avgX, minY);\n        ctx.lineTo(avgX, lastY);\n      }\n    };\n    if (move) {\n      point = points[pointIndex(0)];\n      ctx.moveTo(point.x, point.y);\n    }\n    for (i = 0; i <= ilen; ++i) {\n      point = points[pointIndex(i)];\n      if (point.skip) {\n        continue;\n      }\n      const x = point.x;\n      const y = point.y;\n      const truncX = x | 0;\n      if (truncX === prevX) {\n        if (y < minY) {\n          minY = y;\n        } else if (y > maxY) {\n          maxY = y;\n        }\n        avgX = (countX * avgX + x) / ++countX;\n      } else {\n        drawX();\n        ctx.lineTo(x, y);\n        prevX = truncX;\n        countX = 0;\n        minY = maxY = y;\n      }\n      lastY = y;\n    }\n    drawX();\n  }\n  function _getSegmentMethod(line) {\n    const opts = line.options;\n    const borderDash = opts.borderDash && opts.borderDash.length;\n    const useFastPath = !line._decimated && !line._loop && !opts.tension && opts.cubicInterpolationMode !== 'monotone' && !opts.stepped && !borderDash;\n    return useFastPath ? fastPathSegment : pathSegment;\n  }\n  function _getInterpolationMethod(options) {\n    if (options.stepped) {\n      return _steppedInterpolation;\n    }\n    if (options.tension || options.cubicInterpolationMode === 'monotone') {\n      return _bezierInterpolation;\n    }\n    return _pointInLine;\n  }\n  function strokePathWithCache(ctx, line, start, count) {\n    let path = line._path;\n    if (!path) {\n      path = line._path = new Path2D();\n      if (line.path(path, start, count)) {\n        path.closePath();\n      }\n    }\n    setStyle(ctx, line.options);\n    ctx.stroke(path);\n  }\n  function strokePathDirect(ctx, line, start, count) {\n    const {\n      segments,\n      options\n    } = line;\n    const segmentMethod = _getSegmentMethod(line);\n    for (const segment of segments) {\n      setStyle(ctx, options, segment.style);\n      ctx.beginPath();\n      if (segmentMethod(ctx, line, segment, {\n        start,\n        end: start + count - 1\n      })) {\n        ctx.closePath();\n      }\n      ctx.stroke();\n    }\n  }\n  const usePath2D = typeof Path2D === 'function';\n  function draw(ctx, line, start, count) {\n    if (usePath2D && line.segments.length === 1) {\n      strokePathWithCache(ctx, line, start, count);\n    } else {\n      strokePathDirect(ctx, line, start, count);\n    }\n  }\n  class LineElement extends Element {\n    constructor(cfg) {\n      super();\n      this.animated = true;\n      this.options = undefined;\n      this._loop = undefined;\n      this._fullLoop = undefined;\n      this._path = undefined;\n      this._points = undefined;\n      this._segments = undefined;\n      this._decimated = false;\n      this._pointsUpdated = false;\n      if (cfg) {\n        Object.assign(this, cfg);\n      }\n    }\n    updateControlPoints(chartArea, indexAxis) {\n      const me = this;\n      const options = me.options;\n      if ((options.tension || options.cubicInterpolationMode === 'monotone') && !options.stepped && !me._pointsUpdated) {\n        const loop = options.spanGaps ? me._loop : me._fullLoop;\n        _updateBezierControlPoints(me._points, options, chartArea, loop, indexAxis);\n        me._pointsUpdated = true;\n      }\n    }\n    set points(points) {\n      const me = this;\n      me._points = points;\n      delete me._segments;\n      delete me._path;\n      me._pointsUpdated = false;\n    }\n    get points() {\n      return this._points;\n    }\n    get segments() {\n      return this._segments || (this._segments = _computeSegments(this, this.options.segment));\n    }\n    first() {\n      const segments = this.segments;\n      const points = this.points;\n      return segments.length && points[segments[0].start];\n    }\n    last() {\n      const segments = this.segments;\n      const points = this.points;\n      const count = segments.length;\n      return count && points[segments[count - 1].end];\n    }\n    interpolate(point, property) {\n      const me = this;\n      const options = me.options;\n      const value = point[property];\n      const points = me.points;\n      const segments = _boundSegments(me, {\n        property,\n        start: value,\n        end: value\n      });\n      if (!segments.length) {\n        return;\n      }\n      const result = [];\n      const _interpolate = _getInterpolationMethod(options);\n      let i, ilen;\n      for (i = 0, ilen = segments.length; i < ilen; ++i) {\n        const {\n          start,\n          end\n        } = segments[i];\n        const p1 = points[start];\n        const p2 = points[end];\n        if (p1 === p2) {\n          result.push(p1);\n          continue;\n        }\n        const t = Math.abs((value - p1[property]) / (p2[property] - p1[property]));\n        const interpolated = _interpolate(p1, p2, t, options.stepped);\n        interpolated[property] = point[property];\n        result.push(interpolated);\n      }\n      return result.length === 1 ? result[0] : result;\n    }\n    pathSegment(ctx, segment, params) {\n      const segmentMethod = _getSegmentMethod(this);\n      return segmentMethod(ctx, this, segment, params);\n    }\n    path(ctx, start, count) {\n      const me = this;\n      const segments = me.segments;\n      const segmentMethod = _getSegmentMethod(me);\n      let loop = me._loop;\n      start = start || 0;\n      count = count || me.points.length - start;\n      for (const segment of segments) {\n        loop &= segmentMethod(ctx, me, segment, {\n          start,\n          end: start + count - 1\n        });\n      }\n      return !!loop;\n    }\n    draw(ctx, chartArea, start, count) {\n      const me = this;\n      const options = me.options || {};\n      const points = me.points || [];\n      if (!points.length || !options.borderWidth) {\n        return;\n      }\n      ctx.save();\n      draw(ctx, me, start, count);\n      ctx.restore();\n      if (me.animated) {\n        me._pointsUpdated = false;\n        me._path = undefined;\n      }\n    }\n  }\n  LineElement.id = 'line';\n  LineElement.defaults = {\n    borderCapStyle: 'butt',\n    borderDash: [],\n    borderDashOffset: 0,\n    borderJoinStyle: 'miter',\n    borderWidth: 3,\n    capBezierPoints: true,\n    cubicInterpolationMode: 'default',\n    fill: false,\n    spanGaps: false,\n    stepped: false,\n    tension: 0\n  };\n  LineElement.defaultRoutes = {\n    backgroundColor: 'backgroundColor',\n    borderColor: 'borderColor'\n  };\n  LineElement.descriptors = {\n    _scriptable: true,\n    _indexable: name => name !== 'borderDash' && name !== 'fill'\n  };\n  function inRange$1(el, pos, axis, useFinalPosition) {\n    const options = el.options;\n    const {\n      [axis]: value\n    } = el.getProps([axis], useFinalPosition);\n    return Math.abs(pos - value) < options.radius + options.hitRadius;\n  }\n  class PointElement extends Element {\n    constructor(cfg) {\n      super();\n      this.options = undefined;\n      this.parsed = undefined;\n      this.skip = undefined;\n      this.stop = undefined;\n      if (cfg) {\n        Object.assign(this, cfg);\n      }\n    }\n    inRange(mouseX, mouseY, useFinalPosition) {\n      const options = this.options;\n      const {\n        x,\n        y\n      } = this.getProps(['x', 'y'], useFinalPosition);\n      return Math.pow(mouseX - x, 2) + Math.pow(mouseY - y, 2) < Math.pow(options.hitRadius + options.radius, 2);\n    }\n    inXRange(mouseX, useFinalPosition) {\n      return inRange$1(this, mouseX, 'x', useFinalPosition);\n    }\n    inYRange(mouseY, useFinalPosition) {\n      return inRange$1(this, mouseY, 'y', useFinalPosition);\n    }\n    getCenterPoint(useFinalPosition) {\n      const {\n        x,\n        y\n      } = this.getProps(['x', 'y'], useFinalPosition);\n      return {\n        x,\n        y\n      };\n    }\n    size(options) {\n      options = options || this.options || {};\n      let radius = options.radius || 0;\n      radius = Math.max(radius, radius && options.hoverRadius || 0);\n      const borderWidth = radius && options.borderWidth || 0;\n      return (radius + borderWidth) * 2;\n    }\n    draw(ctx) {\n      const me = this;\n      const options = me.options;\n      if (me.skip || options.radius < 0.1) {\n        return;\n      }\n      ctx.strokeStyle = options.borderColor;\n      ctx.lineWidth = options.borderWidth;\n      ctx.fillStyle = options.backgroundColor;\n      drawPoint(ctx, options, me.x, me.y);\n    }\n    getRange() {\n      const options = this.options || {};\n      return options.radius + options.hitRadius;\n    }\n  }\n  PointElement.id = 'point';\n  PointElement.defaults = {\n    borderWidth: 1,\n    hitRadius: 1,\n    hoverBorderWidth: 1,\n    hoverRadius: 4,\n    pointStyle: 'circle',\n    radius: 3,\n    rotation: 0\n  };\n  PointElement.defaultRoutes = {\n    backgroundColor: 'backgroundColor',\n    borderColor: 'borderColor'\n  };\n  function getBarBounds(bar, useFinalPosition) {\n    const {\n      x,\n      y,\n      base,\n      width,\n      height\n    } = bar.getProps(['x', 'y', 'base', 'width', 'height'], useFinalPosition);\n    let left, right, top, bottom, half;\n    if (bar.horizontal) {\n      half = height / 2;\n      left = Math.min(x, base);\n      right = Math.max(x, base);\n      top = y - half;\n      bottom = y + half;\n    } else {\n      half = width / 2;\n      left = x - half;\n      right = x + half;\n      top = Math.min(y, base);\n      bottom = Math.max(y, base);\n    }\n    return {\n      left,\n      top,\n      right,\n      bottom\n    };\n  }\n  function parseBorderSkipped(bar) {\n    let edge = bar.options.borderSkipped;\n    const res = {};\n    if (!edge) {\n      return res;\n    }\n    edge = bar.horizontal ? parseEdge(edge, 'left', 'right', bar.base > bar.x) : parseEdge(edge, 'bottom', 'top', bar.base < bar.y);\n    res[edge] = true;\n    return res;\n  }\n  function parseEdge(edge, a, b, reverse) {\n    if (reverse) {\n      edge = swap(edge, a, b);\n      edge = startEnd(edge, b, a);\n    } else {\n      edge = startEnd(edge, a, b);\n    }\n    return edge;\n  }\n  function swap(orig, v1, v2) {\n    return orig === v1 ? v2 : orig === v2 ? v1 : orig;\n  }\n  function startEnd(v, start, end) {\n    return v === 'start' ? start : v === 'end' ? end : v;\n  }\n  function skipOrLimit(skip, value, min, max) {\n    return skip ? 0 : Math.max(Math.min(value, max), min);\n  }\n  function parseBorderWidth(bar, maxW, maxH) {\n    const value = bar.options.borderWidth;\n    const skip = parseBorderSkipped(bar);\n    const o = toTRBL(value);\n    return {\n      t: skipOrLimit(skip.top, o.top, 0, maxH),\n      r: skipOrLimit(skip.right, o.right, 0, maxW),\n      b: skipOrLimit(skip.bottom, o.bottom, 0, maxH),\n      l: skipOrLimit(skip.left, o.left, 0, maxW)\n    };\n  }\n  function parseBorderRadius(bar, maxW, maxH) {\n    const {\n      enableBorderRadius\n    } = bar.getProps(['enableBorderRadius']);\n    const value = bar.options.borderRadius;\n    const o = toTRBLCorners(value);\n    const maxR = Math.min(maxW, maxH);\n    const skip = parseBorderSkipped(bar);\n    const enableBorder = enableBorderRadius || isObject(value);\n    return {\n      topLeft: skipOrLimit(!enableBorder || skip.top || skip.left, o.topLeft, 0, maxR),\n      topRight: skipOrLimit(!enableBorder || skip.top || skip.right, o.topRight, 0, maxR),\n      bottomLeft: skipOrLimit(!enableBorder || skip.bottom || skip.left, o.bottomLeft, 0, maxR),\n      bottomRight: skipOrLimit(!enableBorder || skip.bottom || skip.right, o.bottomRight, 0, maxR)\n    };\n  }\n  function boundingRects(bar) {\n    const bounds = getBarBounds(bar);\n    const width = bounds.right - bounds.left;\n    const height = bounds.bottom - bounds.top;\n    const border = parseBorderWidth(bar, width / 2, height / 2);\n    const radius = parseBorderRadius(bar, width / 2, height / 2);\n    return {\n      outer: {\n        x: bounds.left,\n        y: bounds.top,\n        w: width,\n        h: height,\n        radius\n      },\n      inner: {\n        x: bounds.left + border.l,\n        y: bounds.top + border.t,\n        w: width - border.l - border.r,\n        h: height - border.t - border.b,\n        radius: {\n          topLeft: Math.max(0, radius.topLeft - Math.max(border.t, border.l)),\n          topRight: Math.max(0, radius.topRight - Math.max(border.t, border.r)),\n          bottomLeft: Math.max(0, radius.bottomLeft - Math.max(border.b, border.l)),\n          bottomRight: Math.max(0, radius.bottomRight - Math.max(border.b, border.r))\n        }\n      }\n    };\n  }\n  function inRange(bar, x, y, useFinalPosition) {\n    const skipX = x === null;\n    const skipY = y === null;\n    const skipBoth = skipX && skipY;\n    const bounds = bar && !skipBoth && getBarBounds(bar, useFinalPosition);\n    return bounds && (skipX || x >= bounds.left && x <= bounds.right) && (skipY || y >= bounds.top && y <= bounds.bottom);\n  }\n  function hasRadius(radius) {\n    return radius.topLeft || radius.topRight || radius.bottomLeft || radius.bottomRight;\n  }\n  function addNormalRectPath(ctx, rect) {\n    ctx.rect(rect.x, rect.y, rect.w, rect.h);\n  }\n  class BarElement extends Element {\n    constructor(cfg) {\n      super();\n      this.options = undefined;\n      this.horizontal = undefined;\n      this.base = undefined;\n      this.width = undefined;\n      this.height = undefined;\n      if (cfg) {\n        Object.assign(this, cfg);\n      }\n    }\n    draw(ctx) {\n      const options = this.options;\n      const {\n        inner,\n        outer\n      } = boundingRects(this);\n      const addRectPath = hasRadius(outer.radius) ? addRoundedRectPath : addNormalRectPath;\n      ctx.save();\n      if (outer.w !== inner.w || outer.h !== inner.h) {\n        ctx.beginPath();\n        addRectPath(ctx, outer);\n        ctx.clip();\n        addRectPath(ctx, inner);\n        ctx.fillStyle = options.borderColor;\n        ctx.fill('evenodd');\n      }\n      ctx.beginPath();\n      addRectPath(ctx, inner);\n      ctx.fillStyle = options.backgroundColor;\n      ctx.fill();\n      ctx.restore();\n    }\n    inRange(mouseX, mouseY, useFinalPosition) {\n      return inRange(this, mouseX, mouseY, useFinalPosition);\n    }\n    inXRange(mouseX, useFinalPosition) {\n      return inRange(this, mouseX, null, useFinalPosition);\n    }\n    inYRange(mouseY, useFinalPosition) {\n      return inRange(this, null, mouseY, useFinalPosition);\n    }\n    getCenterPoint(useFinalPosition) {\n      const {\n        x,\n        y,\n        base,\n        horizontal\n      } = this.getProps(['x', 'y', 'base', 'horizontal'], useFinalPosition);\n      return {\n        x: horizontal ? (x + base) / 2 : x,\n        y: horizontal ? y : (y + base) / 2\n      };\n    }\n    getRange(axis) {\n      return axis === 'x' ? this.width / 2 : this.height / 2;\n    }\n  }\n  BarElement.id = 'bar';\n  BarElement.defaults = {\n    borderSkipped: 'start',\n    borderWidth: 0,\n    borderRadius: 0,\n    enableBorderRadius: true,\n    pointStyle: undefined\n  };\n  BarElement.defaultRoutes = {\n    backgroundColor: 'backgroundColor',\n    borderColor: 'borderColor'\n  };\n  var elements = /*#__PURE__*/Object.freeze({\n    __proto__: null,\n    ArcElement: ArcElement,\n    LineElement: LineElement,\n    PointElement: PointElement,\n    BarElement: BarElement\n  });\n  function lttbDecimation(data, start, count, availableWidth, options) {\n    const samples = options.samples || availableWidth;\n    if (samples >= count) {\n      return data.slice(start, start + count);\n    }\n    const decimated = [];\n    const bucketWidth = (count - 2) / (samples - 2);\n    let sampledIndex = 0;\n    const endIndex = start + count - 1;\n    let a = start;\n    let i, maxAreaPoint, maxArea, area, nextA;\n    decimated[sampledIndex++] = data[a];\n    for (i = 0; i < samples - 2; i++) {\n      let avgX = 0;\n      let avgY = 0;\n      let j;\n      const avgRangeStart = Math.floor((i + 1) * bucketWidth) + 1 + start;\n      const avgRangeEnd = Math.min(Math.floor((i + 2) * bucketWidth) + 1, count) + start;\n      const avgRangeLength = avgRangeEnd - avgRangeStart;\n      for (j = avgRangeStart; j < avgRangeEnd; j++) {\n        avgX += data[j].x;\n        avgY += data[j].y;\n      }\n      avgX /= avgRangeLength;\n      avgY /= avgRangeLength;\n      const rangeOffs = Math.floor(i * bucketWidth) + 1 + start;\n      const rangeTo = Math.floor((i + 1) * bucketWidth) + 1 + start;\n      const {\n        x: pointAx,\n        y: pointAy\n      } = data[a];\n      maxArea = area = -1;\n      for (j = rangeOffs; j < rangeTo; j++) {\n        area = 0.5 * Math.abs((pointAx - avgX) * (data[j].y - pointAy) - (pointAx - data[j].x) * (avgY - pointAy));\n        if (area > maxArea) {\n          maxArea = area;\n          maxAreaPoint = data[j];\n          nextA = j;\n        }\n      }\n      decimated[sampledIndex++] = maxAreaPoint;\n      a = nextA;\n    }\n    decimated[sampledIndex++] = data[endIndex];\n    return decimated;\n  }\n  function minMaxDecimation(data, start, count, availableWidth) {\n    let avgX = 0;\n    let countX = 0;\n    let i, point, x, y, prevX, minIndex, maxIndex, startIndex, minY, maxY;\n    const decimated = [];\n    const endIndex = start + count - 1;\n    const xMin = data[start].x;\n    const xMax = data[endIndex].x;\n    const dx = xMax - xMin;\n    for (i = start; i < start + count; ++i) {\n      point = data[i];\n      x = (point.x - xMin) / dx * availableWidth;\n      y = point.y;\n      const truncX = x | 0;\n      if (truncX === prevX) {\n        if (y < minY) {\n          minY = y;\n          minIndex = i;\n        } else if (y > maxY) {\n          maxY = y;\n          maxIndex = i;\n        }\n        avgX = (countX * avgX + point.x) / ++countX;\n      } else {\n        const lastIndex = i - 1;\n        if (!isNullOrUndef(minIndex) && !isNullOrUndef(maxIndex)) {\n          const intermediateIndex1 = Math.min(minIndex, maxIndex);\n          const intermediateIndex2 = Math.max(minIndex, maxIndex);\n          if (intermediateIndex1 !== startIndex && intermediateIndex1 !== lastIndex) {\n            decimated.push({\n              ...data[intermediateIndex1],\n              x: avgX\n            });\n          }\n          if (intermediateIndex2 !== startIndex && intermediateIndex2 !== lastIndex) {\n            decimated.push({\n              ...data[intermediateIndex2],\n              x: avgX\n            });\n          }\n        }\n        if (i > 0 && lastIndex !== startIndex) {\n          decimated.push(data[lastIndex]);\n        }\n        decimated.push(point);\n        prevX = truncX;\n        countX = 0;\n        minY = maxY = y;\n        minIndex = maxIndex = startIndex = i;\n      }\n    }\n    return decimated;\n  }\n  function cleanDecimatedDataset(dataset) {\n    if (dataset._decimated) {\n      const data = dataset._data;\n      delete dataset._decimated;\n      delete dataset._data;\n      Object.defineProperty(dataset, 'data', {\n        value: data\n      });\n    }\n  }\n  function cleanDecimatedData(chart) {\n    chart.data.datasets.forEach(dataset => {\n      cleanDecimatedDataset(dataset);\n    });\n  }\n  function getStartAndCountOfVisiblePointsSimplified(meta, points) {\n    const pointCount = points.length;\n    let start = 0;\n    let count;\n    const {\n      iScale\n    } = meta;\n    const {\n      min,\n      max,\n      minDefined,\n      maxDefined\n    } = iScale.getUserBounds();\n    if (minDefined) {\n      start = _limitValue(_lookupByKey(points, iScale.axis, min).lo, 0, pointCount - 1);\n    }\n    if (maxDefined) {\n      count = _limitValue(_lookupByKey(points, iScale.axis, max).hi + 1, start, pointCount) - start;\n    } else {\n      count = pointCount - start;\n    }\n    return {\n      start,\n      count\n    };\n  }\n  var plugin_decimation = {\n    id: 'decimation',\n    defaults: {\n      algorithm: 'min-max',\n      enabled: false\n    },\n    beforeElementsUpdate: (chart, args, options) => {\n      if (!options.enabled) {\n        cleanDecimatedData(chart);\n        return;\n      }\n      const availableWidth = chart.width;\n      chart.data.datasets.forEach((dataset, datasetIndex) => {\n        const {\n          _data,\n          indexAxis\n        } = dataset;\n        const meta = chart.getDatasetMeta(datasetIndex);\n        const data = _data || dataset.data;\n        if (resolve([indexAxis, chart.options.indexAxis]) === 'y') {\n          return;\n        }\n        if (meta.type !== 'line') {\n          return;\n        }\n        const xAxis = chart.scales[meta.xAxisID];\n        if (xAxis.type !== 'linear' && xAxis.type !== 'time') {\n          return;\n        }\n        if (chart.options.parsing) {\n          return;\n        }\n        let {\n          start,\n          count\n        } = getStartAndCountOfVisiblePointsSimplified(meta, data);\n        if (count <= 4 * availableWidth) {\n          cleanDecimatedDataset(dataset);\n          return;\n        }\n        if (isNullOrUndef(_data)) {\n          dataset._data = data;\n          delete dataset.data;\n          Object.defineProperty(dataset, 'data', {\n            configurable: true,\n            enumerable: true,\n            get: function () {\n              return this._decimated;\n            },\n            set: function (d) {\n              this._data = d;\n            }\n          });\n        }\n        let decimated;\n        switch (options.algorithm) {\n          case 'lttb':\n            decimated = lttbDecimation(data, start, count, availableWidth, options);\n            break;\n          case 'min-max':\n            decimated = minMaxDecimation(data, start, count, availableWidth);\n            break;\n          default:\n            throw new Error(`Unsupported decimation algorithm '${options.algorithm}'`);\n        }\n        dataset._decimated = decimated;\n      });\n    },\n    destroy(chart) {\n      cleanDecimatedData(chart);\n    }\n  };\n  function getLineByIndex(chart, index) {\n    const meta = chart.getDatasetMeta(index);\n    const visible = meta && chart.isDatasetVisible(index);\n    return visible ? meta.dataset : null;\n  }\n  function parseFillOption(line) {\n    const options = line.options;\n    const fillOption = options.fill;\n    let fill = valueOrDefault(fillOption && fillOption.target, fillOption);\n    if (fill === undefined) {\n      fill = !!options.backgroundColor;\n    }\n    if (fill === false || fill === null) {\n      return false;\n    }\n    if (fill === true) {\n      return 'origin';\n    }\n    return fill;\n  }\n  function decodeFill(line, index, count) {\n    const fill = parseFillOption(line);\n    if (isObject(fill)) {\n      return isNaN(fill.value) ? false : fill;\n    }\n    let target = parseFloat(fill);\n    if (isNumberFinite(target) && Math.floor(target) === target) {\n      if (fill[0] === '-' || fill[0] === '+') {\n        target = index + target;\n      }\n      if (target === index || target < 0 || target >= count) {\n        return false;\n      }\n      return target;\n    }\n    return ['origin', 'start', 'end', 'stack'].indexOf(fill) >= 0 && fill;\n  }\n  function computeLinearBoundary(source) {\n    const {\n      scale = {},\n      fill\n    } = source;\n    let target = null;\n    let horizontal;\n    if (fill === 'start') {\n      target = scale.bottom;\n    } else if (fill === 'end') {\n      target = scale.top;\n    } else if (isObject(fill)) {\n      target = scale.getPixelForValue(fill.value);\n    } else if (scale.getBasePixel) {\n      target = scale.getBasePixel();\n    }\n    if (isNumberFinite(target)) {\n      horizontal = scale.isHorizontal();\n      return {\n        x: horizontal ? target : null,\n        y: horizontal ? null : target\n      };\n    }\n    return null;\n  }\n  class simpleArc {\n    constructor(opts) {\n      this.x = opts.x;\n      this.y = opts.y;\n      this.radius = opts.radius;\n    }\n    pathSegment(ctx, bounds, opts) {\n      const {\n        x,\n        y,\n        radius\n      } = this;\n      bounds = bounds || {\n        start: 0,\n        end: TAU\n      };\n      ctx.arc(x, y, radius, bounds.end, bounds.start, true);\n      return !opts.bounds;\n    }\n    interpolate(point) {\n      const {\n        x,\n        y,\n        radius\n      } = this;\n      const angle = point.angle;\n      return {\n        x: x + Math.cos(angle) * radius,\n        y: y + Math.sin(angle) * radius,\n        angle\n      };\n    }\n  }\n  function computeCircularBoundary(source) {\n    const {\n      scale,\n      fill\n    } = source;\n    const options = scale.options;\n    const length = scale.getLabels().length;\n    const target = [];\n    const start = options.reverse ? scale.max : scale.min;\n    const end = options.reverse ? scale.min : scale.max;\n    let i, center, value;\n    if (fill === 'start') {\n      value = start;\n    } else if (fill === 'end') {\n      value = end;\n    } else if (isObject(fill)) {\n      value = fill.value;\n    } else {\n      value = scale.getBaseValue();\n    }\n    if (options.grid.circular) {\n      center = scale.getPointPositionForValue(0, start);\n      return new simpleArc({\n        x: center.x,\n        y: center.y,\n        radius: scale.getDistanceFromCenterForValue(value)\n      });\n    }\n    for (i = 0; i < length; ++i) {\n      target.push(scale.getPointPositionForValue(i, value));\n    }\n    return target;\n  }\n  function computeBoundary(source) {\n    const scale = source.scale || {};\n    if (scale.getPointPositionForValue) {\n      return computeCircularBoundary(source);\n    }\n    return computeLinearBoundary(source);\n  }\n  function pointsFromSegments(boundary, line) {\n    const {\n      x = null,\n      y = null\n    } = boundary || {};\n    const linePoints = line.points;\n    const points = [];\n    line.segments.forEach(segment => {\n      const first = linePoints[segment.start];\n      const last = linePoints[segment.end];\n      if (y !== null) {\n        points.push({\n          x: first.x,\n          y\n        });\n        points.push({\n          x: last.x,\n          y\n        });\n      } else if (x !== null) {\n        points.push({\n          x,\n          y: first.y\n        });\n        points.push({\n          x,\n          y: last.y\n        });\n      }\n    });\n    return points;\n  }\n  function buildStackLine(source) {\n    const {\n      chart,\n      scale,\n      index,\n      line\n    } = source;\n    const points = [];\n    const segments = line.segments;\n    const sourcePoints = line.points;\n    const linesBelow = getLinesBelow(chart, index);\n    linesBelow.push(createBoundaryLine({\n      x: null,\n      y: scale.bottom\n    }, line));\n    for (let i = 0; i < segments.length; i++) {\n      const segment = segments[i];\n      for (let j = segment.start; j <= segment.end; j++) {\n        addPointsBelow(points, sourcePoints[j], linesBelow);\n      }\n    }\n    return new LineElement({\n      points,\n      options: {}\n    });\n  }\n  const isLineAndNotInHideAnimation = meta => meta.type === 'line' && !meta.hidden;\n  function getLinesBelow(chart, index) {\n    const below = [];\n    const metas = chart.getSortedVisibleDatasetMetas();\n    for (let i = 0; i < metas.length; i++) {\n      const meta = metas[i];\n      if (meta.index === index) {\n        break;\n      }\n      if (isLineAndNotInHideAnimation(meta)) {\n        below.unshift(meta.dataset);\n      }\n    }\n    return below;\n  }\n  function addPointsBelow(points, sourcePoint, linesBelow) {\n    const postponed = [];\n    for (let j = 0; j < linesBelow.length; j++) {\n      const line = linesBelow[j];\n      const {\n        first,\n        last,\n        point\n      } = findPoint(line, sourcePoint, 'x');\n      if (!point || first && last) {\n        continue;\n      }\n      if (first) {\n        postponed.unshift(point);\n      } else {\n        points.push(point);\n        if (!last) {\n          break;\n        }\n      }\n    }\n    points.push(...postponed);\n  }\n  function findPoint(line, sourcePoint, property) {\n    const point = line.interpolate(sourcePoint, property);\n    if (!point) {\n      return {};\n    }\n    const pointValue = point[property];\n    const segments = line.segments;\n    const linePoints = line.points;\n    let first = false;\n    let last = false;\n    for (let i = 0; i < segments.length; i++) {\n      const segment = segments[i];\n      const firstValue = linePoints[segment.start][property];\n      const lastValue = linePoints[segment.end][property];\n      if (pointValue >= firstValue && pointValue <= lastValue) {\n        first = pointValue === firstValue;\n        last = pointValue === lastValue;\n        break;\n      }\n    }\n    return {\n      first,\n      last,\n      point\n    };\n  }\n  function getTarget(source) {\n    const {\n      chart,\n      fill,\n      line\n    } = source;\n    if (isNumberFinite(fill)) {\n      return getLineByIndex(chart, fill);\n    }\n    if (fill === 'stack') {\n      return buildStackLine(source);\n    }\n    const boundary = computeBoundary(source);\n    if (boundary instanceof simpleArc) {\n      return boundary;\n    }\n    return createBoundaryLine(boundary, line);\n  }\n  function createBoundaryLine(boundary, line) {\n    let points = [];\n    let _loop = false;\n    if (isArray(boundary)) {\n      _loop = true;\n      points = boundary;\n    } else {\n      points = pointsFromSegments(boundary, line);\n    }\n    return points.length ? new LineElement({\n      points,\n      options: {\n        tension: 0\n      },\n      _loop,\n      _fullLoop: _loop\n    }) : null;\n  }\n  function resolveTarget(sources, index, propagate) {\n    const source = sources[index];\n    let fill = source.fill;\n    const visited = [index];\n    let target;\n    if (!propagate) {\n      return fill;\n    }\n    while (fill !== false && visited.indexOf(fill) === -1) {\n      if (!isNumberFinite(fill)) {\n        return fill;\n      }\n      target = sources[fill];\n      if (!target) {\n        return false;\n      }\n      if (target.visible) {\n        return fill;\n      }\n      visited.push(fill);\n      fill = target.fill;\n    }\n    return false;\n  }\n  function _clip(ctx, target, clipY) {\n    ctx.beginPath();\n    target.path(ctx);\n    ctx.lineTo(target.last().x, clipY);\n    ctx.lineTo(target.first().x, clipY);\n    ctx.closePath();\n    ctx.clip();\n  }\n  function getBounds(property, first, last, loop) {\n    if (loop) {\n      return;\n    }\n    let start = first[property];\n    let end = last[property];\n    if (property === 'angle') {\n      start = _normalizeAngle(start);\n      end = _normalizeAngle(end);\n    }\n    return {\n      property,\n      start,\n      end\n    };\n  }\n  function _getEdge(a, b, prop, fn) {\n    if (a && b) {\n      return fn(a[prop], b[prop]);\n    }\n    return a ? a[prop] : b ? b[prop] : 0;\n  }\n  function _segments(line, target, property) {\n    const segments = line.segments;\n    const points = line.points;\n    const tpoints = target.points;\n    const parts = [];\n    for (const segment of segments) {\n      const bounds = getBounds(property, points[segment.start], points[segment.end], segment.loop);\n      if (!target.segments) {\n        parts.push({\n          source: segment,\n          target: bounds,\n          start: points[segment.start],\n          end: points[segment.end]\n        });\n        continue;\n      }\n      const targetSegments = _boundSegments(target, bounds);\n      for (const tgt of targetSegments) {\n        const subBounds = getBounds(property, tpoints[tgt.start], tpoints[tgt.end], tgt.loop);\n        const fillSources = _boundSegment(segment, points, subBounds);\n        for (const fillSource of fillSources) {\n          parts.push({\n            source: fillSource,\n            target: tgt,\n            start: {\n              [property]: _getEdge(bounds, subBounds, 'start', Math.max)\n            },\n            end: {\n              [property]: _getEdge(bounds, subBounds, 'end', Math.min)\n            }\n          });\n        }\n      }\n    }\n    return parts;\n  }\n  function clipBounds(ctx, scale, bounds) {\n    const {\n      top,\n      bottom\n    } = scale.chart.chartArea;\n    const {\n      property,\n      start,\n      end\n    } = bounds || {};\n    if (property === 'x') {\n      ctx.beginPath();\n      ctx.rect(start, top, end - start, bottom - top);\n      ctx.clip();\n    }\n  }\n  function interpolatedLineTo(ctx, target, point, property) {\n    const interpolatedPoint = target.interpolate(point, property);\n    if (interpolatedPoint) {\n      ctx.lineTo(interpolatedPoint.x, interpolatedPoint.y);\n    }\n  }\n  function _fill(ctx, cfg) {\n    const {\n      line,\n      target,\n      property,\n      color,\n      scale\n    } = cfg;\n    const segments = _segments(line, target, property);\n    for (const {\n      source: src,\n      target: tgt,\n      start,\n      end\n    } of segments) {\n      const {\n        style: {\n          backgroundColor = color\n        } = {}\n      } = src;\n      ctx.save();\n      ctx.fillStyle = backgroundColor;\n      clipBounds(ctx, scale, getBounds(property, start, end));\n      ctx.beginPath();\n      const lineLoop = !!line.pathSegment(ctx, src);\n      if (lineLoop) {\n        ctx.closePath();\n      } else {\n        interpolatedLineTo(ctx, target, end, property);\n      }\n      const targetLoop = !!target.pathSegment(ctx, tgt, {\n        move: lineLoop,\n        reverse: true\n      });\n      const loop = lineLoop && targetLoop;\n      if (!loop) {\n        interpolatedLineTo(ctx, target, start, property);\n      }\n      ctx.closePath();\n      ctx.fill(loop ? 'evenodd' : 'nonzero');\n      ctx.restore();\n    }\n  }\n  function doFill(ctx, cfg) {\n    const {\n      line,\n      target,\n      above,\n      below,\n      area,\n      scale\n    } = cfg;\n    const property = line._loop ? 'angle' : cfg.axis;\n    ctx.save();\n    if (property === 'x' && below !== above) {\n      _clip(ctx, target, area.top);\n      _fill(ctx, {\n        line,\n        target,\n        color: above,\n        scale,\n        property\n      });\n      ctx.restore();\n      ctx.save();\n      _clip(ctx, target, area.bottom);\n    }\n    _fill(ctx, {\n      line,\n      target,\n      color: below,\n      scale,\n      property\n    });\n    ctx.restore();\n  }\n  function drawfill(ctx, source, area) {\n    const target = getTarget(source);\n    const {\n      line,\n      scale,\n      axis\n    } = source;\n    const lineOpts = line.options;\n    const fillOption = lineOpts.fill;\n    const color = lineOpts.backgroundColor;\n    const {\n      above = color,\n      below = color\n    } = fillOption || {};\n    if (target && line.points.length) {\n      clipArea(ctx, area);\n      doFill(ctx, {\n        line,\n        target,\n        above,\n        below,\n        area,\n        scale,\n        axis\n      });\n      unclipArea(ctx);\n    }\n  }\n  var plugin_filler = {\n    id: 'filler',\n    afterDatasetsUpdate(chart, _args, options) {\n      const count = (chart.data.datasets || []).length;\n      const sources = [];\n      let meta, i, line, source;\n      for (i = 0; i < count; ++i) {\n        meta = chart.getDatasetMeta(i);\n        line = meta.dataset;\n        source = null;\n        if (line && line.options && line instanceof LineElement) {\n          source = {\n            visible: chart.isDatasetVisible(i),\n            index: i,\n            fill: decodeFill(line, i, count),\n            chart,\n            axis: meta.controller.options.indexAxis,\n            scale: meta.vScale,\n            line\n          };\n        }\n        meta.$filler = source;\n        sources.push(source);\n      }\n      for (i = 0; i < count; ++i) {\n        source = sources[i];\n        if (!source || source.fill === false) {\n          continue;\n        }\n        source.fill = resolveTarget(sources, i, options.propagate);\n      }\n    },\n    beforeDraw(chart, _args, options) {\n      const draw = options.drawTime === 'beforeDraw';\n      const metasets = chart.getSortedVisibleDatasetMetas();\n      const area = chart.chartArea;\n      for (let i = metasets.length - 1; i >= 0; --i) {\n        const source = metasets[i].$filler;\n        if (!source) {\n          continue;\n        }\n        source.line.updateControlPoints(area, source.axis);\n        if (draw) {\n          drawfill(chart.ctx, source, area);\n        }\n      }\n    },\n    beforeDatasetsDraw(chart, _args, options) {\n      if (options.drawTime !== 'beforeDatasetsDraw') {\n        return;\n      }\n      const metasets = chart.getSortedVisibleDatasetMetas();\n      for (let i = metasets.length - 1; i >= 0; --i) {\n        const source = metasets[i].$filler;\n        if (source) {\n          drawfill(chart.ctx, source, chart.chartArea);\n        }\n      }\n    },\n    beforeDatasetDraw(chart, args, options) {\n      const source = args.meta.$filler;\n      if (!source || source.fill === false || options.drawTime !== 'beforeDatasetDraw') {\n        return;\n      }\n      drawfill(chart.ctx, source, chart.chartArea);\n    },\n    defaults: {\n      propagate: true,\n      drawTime: 'beforeDatasetDraw'\n    }\n  };\n  const getBoxSize = (labelOpts, fontSize) => {\n    let {\n      boxHeight = fontSize,\n      boxWidth = fontSize\n    } = labelOpts;\n    if (labelOpts.usePointStyle) {\n      boxHeight = Math.min(boxHeight, fontSize);\n      boxWidth = Math.min(boxWidth, fontSize);\n    }\n    return {\n      boxWidth,\n      boxHeight,\n      itemHeight: Math.max(fontSize, boxHeight)\n    };\n  };\n  const itemsEqual = (a, b) => a !== null && b !== null && a.datasetIndex === b.datasetIndex && a.index === b.index;\n  class Legend extends Element {\n    constructor(config) {\n      super();\n      this._added = false;\n      this.legendHitBoxes = [];\n      this._hoveredItem = null;\n      this.doughnutMode = false;\n      this.chart = config.chart;\n      this.options = config.options;\n      this.ctx = config.ctx;\n      this.legendItems = undefined;\n      this.columnSizes = undefined;\n      this.lineWidths = undefined;\n      this.maxHeight = undefined;\n      this.maxWidth = undefined;\n      this.top = undefined;\n      this.bottom = undefined;\n      this.left = undefined;\n      this.right = undefined;\n      this.height = undefined;\n      this.width = undefined;\n      this._margins = undefined;\n      this.position = undefined;\n      this.weight = undefined;\n      this.fullSize = undefined;\n    }\n    update(maxWidth, maxHeight, margins) {\n      const me = this;\n      me.maxWidth = maxWidth;\n      me.maxHeight = maxHeight;\n      me._margins = margins;\n      me.setDimensions();\n      me.buildLabels();\n      me.fit();\n    }\n    setDimensions() {\n      const me = this;\n      if (me.isHorizontal()) {\n        me.width = me.maxWidth;\n        me.left = 0;\n        me.right = me.width;\n      } else {\n        me.height = me.maxHeight;\n        me.top = 0;\n        me.bottom = me.height;\n      }\n    }\n    buildLabels() {\n      const me = this;\n      const labelOpts = me.options.labels || {};\n      let legendItems = callback(labelOpts.generateLabels, [me.chart], me) || [];\n      if (labelOpts.filter) {\n        legendItems = legendItems.filter(item => labelOpts.filter(item, me.chart.data));\n      }\n      if (labelOpts.sort) {\n        legendItems = legendItems.sort((a, b) => labelOpts.sort(a, b, me.chart.data));\n      }\n      if (me.options.reverse) {\n        legendItems.reverse();\n      }\n      me.legendItems = legendItems;\n    }\n    fit() {\n      const me = this;\n      const {\n        options,\n        ctx\n      } = me;\n      if (!options.display) {\n        me.width = me.height = 0;\n        return;\n      }\n      const labelOpts = options.labels;\n      const labelFont = toFont(labelOpts.font);\n      const fontSize = labelFont.size;\n      const titleHeight = me._computeTitleHeight();\n      const {\n        boxWidth,\n        itemHeight\n      } = getBoxSize(labelOpts, fontSize);\n      let width, height;\n      ctx.font = labelFont.string;\n      if (me.isHorizontal()) {\n        width = me.maxWidth;\n        height = me._fitRows(titleHeight, fontSize, boxWidth, itemHeight) + 10;\n      } else {\n        height = me.maxHeight;\n        width = me._fitCols(titleHeight, fontSize, boxWidth, itemHeight) + 10;\n      }\n      me.width = Math.min(width, options.maxWidth || me.maxWidth);\n      me.height = Math.min(height, options.maxHeight || me.maxHeight);\n    }\n    _fitRows(titleHeight, fontSize, boxWidth, itemHeight) {\n      const me = this;\n      const {\n        ctx,\n        maxWidth,\n        options: {\n          labels: {\n            padding\n          }\n        }\n      } = me;\n      const hitboxes = me.legendHitBoxes = [];\n      const lineWidths = me.lineWidths = [0];\n      const lineHeight = itemHeight + padding;\n      let totalHeight = titleHeight;\n      ctx.textAlign = 'left';\n      ctx.textBaseline = 'middle';\n      let row = -1;\n      let top = -lineHeight;\n      me.legendItems.forEach((legendItem, i) => {\n        const itemWidth = boxWidth + fontSize / 2 + ctx.measureText(legendItem.text).width;\n        if (i === 0 || lineWidths[lineWidths.length - 1] + itemWidth + 2 * padding > maxWidth) {\n          totalHeight += lineHeight;\n          lineWidths[lineWidths.length - (i > 0 ? 0 : 1)] = 0;\n          top += lineHeight;\n          row++;\n        }\n        hitboxes[i] = {\n          left: 0,\n          top,\n          row,\n          width: itemWidth,\n          height: itemHeight\n        };\n        lineWidths[lineWidths.length - 1] += itemWidth + padding;\n      });\n      return totalHeight;\n    }\n    _fitCols(titleHeight, fontSize, boxWidth, itemHeight) {\n      const me = this;\n      const {\n        ctx,\n        maxHeight,\n        options: {\n          labels: {\n            padding\n          }\n        }\n      } = me;\n      const hitboxes = me.legendHitBoxes = [];\n      const columnSizes = me.columnSizes = [];\n      const heightLimit = maxHeight - titleHeight;\n      let totalWidth = padding;\n      let currentColWidth = 0;\n      let currentColHeight = 0;\n      let left = 0;\n      let top = 0;\n      let col = 0;\n      me.legendItems.forEach((legendItem, i) => {\n        const itemWidth = boxWidth + fontSize / 2 + ctx.measureText(legendItem.text).width;\n        if (i > 0 && currentColHeight + fontSize + 2 * padding > heightLimit) {\n          totalWidth += currentColWidth + padding;\n          columnSizes.push({\n            width: currentColWidth,\n            height: currentColHeight\n          });\n          left += currentColWidth + padding;\n          col++;\n          top = 0;\n          currentColWidth = currentColHeight = 0;\n        }\n        currentColWidth = Math.max(currentColWidth, itemWidth);\n        currentColHeight += fontSize + padding;\n        hitboxes[i] = {\n          left,\n          top,\n          col,\n          width: itemWidth,\n          height: itemHeight\n        };\n        top += itemHeight + padding;\n      });\n      totalWidth += currentColWidth;\n      columnSizes.push({\n        width: currentColWidth,\n        height: currentColHeight\n      });\n      return totalWidth;\n    }\n    adjustHitBoxes() {\n      const me = this;\n      if (!me.options.display) {\n        return;\n      }\n      const titleHeight = me._computeTitleHeight();\n      const {\n        legendHitBoxes: hitboxes,\n        options: {\n          align,\n          labels: {\n            padding\n          }\n        }\n      } = me;\n      if (this.isHorizontal()) {\n        let row = 0;\n        let left = _alignStartEnd(align, me.left + padding, me.right - me.lineWidths[row]);\n        for (const hitbox of hitboxes) {\n          if (row !== hitbox.row) {\n            row = hitbox.row;\n            left = _alignStartEnd(align, me.left + padding, me.right - me.lineWidths[row]);\n          }\n          hitbox.top += me.top + titleHeight + padding;\n          hitbox.left = left;\n          left += hitbox.width + padding;\n        }\n      } else {\n        let col = 0;\n        let top = _alignStartEnd(align, me.top + titleHeight + padding, me.bottom - me.columnSizes[col].height);\n        for (const hitbox of hitboxes) {\n          if (hitbox.col !== col) {\n            col = hitbox.col;\n            top = _alignStartEnd(align, me.top + titleHeight + padding, me.bottom - me.columnSizes[col].height);\n          }\n          hitbox.top = top;\n          hitbox.left += me.left + padding;\n          top += hitbox.height + padding;\n        }\n      }\n    }\n    isHorizontal() {\n      return this.options.position === 'top' || this.options.position === 'bottom';\n    }\n    draw() {\n      const me = this;\n      if (me.options.display) {\n        const ctx = me.ctx;\n        clipArea(ctx, me);\n        me._draw();\n        unclipArea(ctx);\n      }\n    }\n    _draw() {\n      const me = this;\n      const {\n        options: opts,\n        columnSizes,\n        lineWidths,\n        ctx\n      } = me;\n      const {\n        align,\n        labels: labelOpts\n      } = opts;\n      const defaultColor = defaults.color;\n      const rtlHelper = getRtlAdapter(opts.rtl, me.left, me.width);\n      const labelFont = toFont(labelOpts.font);\n      const {\n        color: fontColor,\n        padding\n      } = labelOpts;\n      const fontSize = labelFont.size;\n      const halfFontSize = fontSize / 2;\n      let cursor;\n      me.drawTitle();\n      ctx.textAlign = rtlHelper.textAlign('left');\n      ctx.textBaseline = 'middle';\n      ctx.lineWidth = 0.5;\n      ctx.font = labelFont.string;\n      const {\n        boxWidth,\n        boxHeight,\n        itemHeight\n      } = getBoxSize(labelOpts, fontSize);\n      const drawLegendBox = function (x, y, legendItem) {\n        if (isNaN(boxWidth) || boxWidth <= 0 || isNaN(boxHeight) || boxHeight < 0) {\n          return;\n        }\n        ctx.save();\n        const lineWidth = valueOrDefault(legendItem.lineWidth, 1);\n        ctx.fillStyle = valueOrDefault(legendItem.fillStyle, defaultColor);\n        ctx.lineCap = valueOrDefault(legendItem.lineCap, 'butt');\n        ctx.lineDashOffset = valueOrDefault(legendItem.lineDashOffset, 0);\n        ctx.lineJoin = valueOrDefault(legendItem.lineJoin, 'miter');\n        ctx.lineWidth = lineWidth;\n        ctx.strokeStyle = valueOrDefault(legendItem.strokeStyle, defaultColor);\n        ctx.setLineDash(valueOrDefault(legendItem.lineDash, []));\n        if (labelOpts.usePointStyle) {\n          const drawOptions = {\n            radius: boxWidth * Math.SQRT2 / 2,\n            pointStyle: legendItem.pointStyle,\n            rotation: legendItem.rotation,\n            borderWidth: lineWidth\n          };\n          const centerX = rtlHelper.xPlus(x, boxWidth / 2);\n          const centerY = y + halfFontSize;\n          drawPoint(ctx, drawOptions, centerX, centerY);\n        } else {\n          const yBoxTop = y + Math.max((fontSize - boxHeight) / 2, 0);\n          const xBoxLeft = rtlHelper.leftForLtr(x, boxWidth);\n          const borderRadius = toTRBLCorners(legendItem.borderRadius);\n          ctx.beginPath();\n          if (Object.values(borderRadius).some(v => v !== 0)) {\n            addRoundedRectPath(ctx, {\n              x: xBoxLeft,\n              y: yBoxTop,\n              w: boxWidth,\n              h: boxHeight,\n              radius: borderRadius\n            });\n          } else {\n            ctx.rect(xBoxLeft, yBoxTop, boxWidth, boxHeight);\n          }\n          ctx.fill();\n          if (lineWidth !== 0) {\n            ctx.stroke();\n          }\n        }\n        ctx.restore();\n      };\n      const fillText = function (x, y, legendItem) {\n        renderText(ctx, legendItem.text, x, y + itemHeight / 2, labelFont, {\n          strikethrough: legendItem.hidden,\n          textAlign: legendItem.textAlign\n        });\n      };\n      const isHorizontal = me.isHorizontal();\n      const titleHeight = this._computeTitleHeight();\n      if (isHorizontal) {\n        cursor = {\n          x: _alignStartEnd(align, me.left + padding, me.right - lineWidths[0]),\n          y: me.top + padding + titleHeight,\n          line: 0\n        };\n      } else {\n        cursor = {\n          x: me.left + padding,\n          y: _alignStartEnd(align, me.top + titleHeight + padding, me.bottom - columnSizes[0].height),\n          line: 0\n        };\n      }\n      overrideTextDirection(me.ctx, opts.textDirection);\n      const lineHeight = itemHeight + padding;\n      me.legendItems.forEach((legendItem, i) => {\n        ctx.strokeStyle = legendItem.fontColor || fontColor;\n        ctx.fillStyle = legendItem.fontColor || fontColor;\n        const textWidth = ctx.measureText(legendItem.text).width;\n        const textAlign = rtlHelper.textAlign(legendItem.textAlign || (legendItem.textAlign = labelOpts.textAlign));\n        const width = boxWidth + fontSize / 2 + textWidth;\n        let x = cursor.x;\n        let y = cursor.y;\n        rtlHelper.setWidth(me.width);\n        if (isHorizontal) {\n          if (i > 0 && x + width + padding > me.right) {\n            y = cursor.y += lineHeight;\n            cursor.line++;\n            x = cursor.x = _alignStartEnd(align, me.left + padding, me.right - lineWidths[cursor.line]);\n          }\n        } else if (i > 0 && y + lineHeight > me.bottom) {\n          x = cursor.x = x + columnSizes[cursor.line].width + padding;\n          cursor.line++;\n          y = cursor.y = _alignStartEnd(align, me.top + titleHeight + padding, me.bottom - columnSizes[cursor.line].height);\n        }\n        const realX = rtlHelper.x(x);\n        drawLegendBox(realX, y, legendItem);\n        x = _textX(textAlign, x + boxWidth + halfFontSize, me.right);\n        fillText(rtlHelper.x(x), y, legendItem);\n        if (isHorizontal) {\n          cursor.x += width + padding;\n        } else {\n          cursor.y += lineHeight;\n        }\n      });\n      restoreTextDirection(me.ctx, opts.textDirection);\n    }\n    drawTitle() {\n      const me = this;\n      const opts = me.options;\n      const titleOpts = opts.title;\n      const titleFont = toFont(titleOpts.font);\n      const titlePadding = toPadding(titleOpts.padding);\n      if (!titleOpts.display) {\n        return;\n      }\n      const rtlHelper = getRtlAdapter(opts.rtl, me.left, me.width);\n      const ctx = me.ctx;\n      const position = titleOpts.position;\n      const halfFontSize = titleFont.size / 2;\n      const topPaddingPlusHalfFontSize = titlePadding.top + halfFontSize;\n      let y;\n      let left = me.left;\n      let maxWidth = me.width;\n      if (this.isHorizontal()) {\n        maxWidth = Math.max(...me.lineWidths);\n        y = me.top + topPaddingPlusHalfFontSize;\n        left = _alignStartEnd(opts.align, left, me.right - maxWidth);\n      } else {\n        const maxHeight = me.columnSizes.reduce((acc, size) => Math.max(acc, size.height), 0);\n        y = topPaddingPlusHalfFontSize + _alignStartEnd(opts.align, me.top, me.bottom - maxHeight - opts.labels.padding - me._computeTitleHeight());\n      }\n      const x = _alignStartEnd(position, left, left + maxWidth);\n      ctx.textAlign = rtlHelper.textAlign(_toLeftRightCenter(position));\n      ctx.textBaseline = 'middle';\n      ctx.strokeStyle = titleOpts.color;\n      ctx.fillStyle = titleOpts.color;\n      ctx.font = titleFont.string;\n      renderText(ctx, titleOpts.text, x, y, titleFont);\n    }\n    _computeTitleHeight() {\n      const titleOpts = this.options.title;\n      const titleFont = toFont(titleOpts.font);\n      const titlePadding = toPadding(titleOpts.padding);\n      return titleOpts.display ? titleFont.lineHeight + titlePadding.height : 0;\n    }\n    _getLegendItemAt(x, y) {\n      const me = this;\n      let i, hitBox, lh;\n      if (x >= me.left && x <= me.right && y >= me.top && y <= me.bottom) {\n        lh = me.legendHitBoxes;\n        for (i = 0; i < lh.length; ++i) {\n          hitBox = lh[i];\n          if (x >= hitBox.left && x <= hitBox.left + hitBox.width && y >= hitBox.top && y <= hitBox.top + hitBox.height) {\n            return me.legendItems[i];\n          }\n        }\n      }\n      return null;\n    }\n    handleEvent(e) {\n      const me = this;\n      const opts = me.options;\n      if (!isListened(e.type, opts)) {\n        return;\n      }\n      const hoveredItem = me._getLegendItemAt(e.x, e.y);\n      if (e.type === 'mousemove') {\n        const previous = me._hoveredItem;\n        const sameItem = itemsEqual(previous, hoveredItem);\n        if (previous && !sameItem) {\n          callback(opts.onLeave, [e, previous, me], me);\n        }\n        me._hoveredItem = hoveredItem;\n        if (hoveredItem && !sameItem) {\n          callback(opts.onHover, [e, hoveredItem, me], me);\n        }\n      } else if (hoveredItem) {\n        callback(opts.onClick, [e, hoveredItem, me], me);\n      }\n    }\n  }\n  function isListened(type, opts) {\n    if (type === 'mousemove' && (opts.onHover || opts.onLeave)) {\n      return true;\n    }\n    if (opts.onClick && (type === 'click' || type === 'mouseup')) {\n      return true;\n    }\n    return false;\n  }\n  var plugin_legend = {\n    id: 'legend',\n    _element: Legend,\n    start(chart, _args, options) {\n      const legend = chart.legend = new Legend({\n        ctx: chart.ctx,\n        options,\n        chart\n      });\n      layouts.configure(chart, legend, options);\n      layouts.addBox(chart, legend);\n    },\n    stop(chart) {\n      layouts.removeBox(chart, chart.legend);\n      delete chart.legend;\n    },\n    beforeUpdate(chart, _args, options) {\n      const legend = chart.legend;\n      layouts.configure(chart, legend, options);\n      legend.options = options;\n    },\n    afterUpdate(chart) {\n      const legend = chart.legend;\n      legend.buildLabels();\n      legend.adjustHitBoxes();\n    },\n    afterEvent(chart, args) {\n      if (!args.replay) {\n        chart.legend.handleEvent(args.event);\n      }\n    },\n    defaults: {\n      display: true,\n      position: 'top',\n      align: 'center',\n      fullSize: true,\n      reverse: false,\n      weight: 1000,\n      onClick(e, legendItem, legend) {\n        const index = legendItem.datasetIndex;\n        const ci = legend.chart;\n        if (ci.isDatasetVisible(index)) {\n          ci.hide(index);\n          legendItem.hidden = true;\n        } else {\n          ci.show(index);\n          legendItem.hidden = false;\n        }\n      },\n      onHover: null,\n      onLeave: null,\n      labels: {\n        color: ctx => ctx.chart.options.color,\n        boxWidth: 40,\n        padding: 10,\n        generateLabels(chart) {\n          const datasets = chart.data.datasets;\n          const {\n            labels: {\n              usePointStyle,\n              pointStyle,\n              textAlign,\n              color\n            }\n          } = chart.legend.options;\n          return chart._getSortedDatasetMetas().map(meta => {\n            const style = meta.controller.getStyle(usePointStyle ? 0 : undefined);\n            const borderWidth = toPadding(style.borderWidth);\n            return {\n              text: datasets[meta.index].label,\n              fillStyle: style.backgroundColor,\n              fontColor: color,\n              hidden: !meta.visible,\n              lineCap: style.borderCapStyle,\n              lineDash: style.borderDash,\n              lineDashOffset: style.borderDashOffset,\n              lineJoin: style.borderJoinStyle,\n              lineWidth: (borderWidth.width + borderWidth.height) / 4,\n              strokeStyle: style.borderColor,\n              pointStyle: pointStyle || style.pointStyle,\n              rotation: style.rotation,\n              textAlign: textAlign || style.textAlign,\n              borderRadius: 0,\n              datasetIndex: meta.index\n            };\n          }, this);\n        }\n      },\n      title: {\n        color: ctx => ctx.chart.options.color,\n        display: false,\n        position: 'center',\n        text: ''\n      }\n    },\n    descriptors: {\n      _scriptable: name => !name.startsWith('on'),\n      labels: {\n        _scriptable: name => !['generateLabels', 'filter', 'sort'].includes(name)\n      }\n    }\n  };\n  class Title extends Element {\n    constructor(config) {\n      super();\n      this.chart = config.chart;\n      this.options = config.options;\n      this.ctx = config.ctx;\n      this._padding = undefined;\n      this.top = undefined;\n      this.bottom = undefined;\n      this.left = undefined;\n      this.right = undefined;\n      this.width = undefined;\n      this.height = undefined;\n      this.position = undefined;\n      this.weight = undefined;\n      this.fullSize = undefined;\n    }\n    update(maxWidth, maxHeight) {\n      const me = this;\n      const opts = me.options;\n      me.left = 0;\n      me.top = 0;\n      if (!opts.display) {\n        me.width = me.height = me.right = me.bottom = 0;\n        return;\n      }\n      me.width = me.right = maxWidth;\n      me.height = me.bottom = maxHeight;\n      const lineCount = isArray(opts.text) ? opts.text.length : 1;\n      me._padding = toPadding(opts.padding);\n      const textSize = lineCount * toFont(opts.font).lineHeight + me._padding.height;\n      if (me.isHorizontal()) {\n        me.height = textSize;\n      } else {\n        me.width = textSize;\n      }\n    }\n    isHorizontal() {\n      const pos = this.options.position;\n      return pos === 'top' || pos === 'bottom';\n    }\n    _drawArgs(offset) {\n      const {\n        top,\n        left,\n        bottom,\n        right,\n        options\n      } = this;\n      const align = options.align;\n      let rotation = 0;\n      let maxWidth, titleX, titleY;\n      if (this.isHorizontal()) {\n        titleX = _alignStartEnd(align, left, right);\n        titleY = top + offset;\n        maxWidth = right - left;\n      } else {\n        if (options.position === 'left') {\n          titleX = left + offset;\n          titleY = _alignStartEnd(align, bottom, top);\n          rotation = PI * -0.5;\n        } else {\n          titleX = right - offset;\n          titleY = _alignStartEnd(align, top, bottom);\n          rotation = PI * 0.5;\n        }\n        maxWidth = bottom - top;\n      }\n      return {\n        titleX,\n        titleY,\n        maxWidth,\n        rotation\n      };\n    }\n    draw() {\n      const me = this;\n      const ctx = me.ctx;\n      const opts = me.options;\n      if (!opts.display) {\n        return;\n      }\n      const fontOpts = toFont(opts.font);\n      const lineHeight = fontOpts.lineHeight;\n      const offset = lineHeight / 2 + me._padding.top;\n      const {\n        titleX,\n        titleY,\n        maxWidth,\n        rotation\n      } = me._drawArgs(offset);\n      renderText(ctx, opts.text, 0, 0, fontOpts, {\n        color: opts.color,\n        maxWidth,\n        rotation,\n        textAlign: _toLeftRightCenter(opts.align),\n        textBaseline: 'middle',\n        translation: [titleX, titleY]\n      });\n    }\n  }\n  function createTitle(chart, titleOpts) {\n    const title = new Title({\n      ctx: chart.ctx,\n      options: titleOpts,\n      chart\n    });\n    layouts.configure(chart, title, titleOpts);\n    layouts.addBox(chart, title);\n    chart.titleBlock = title;\n  }\n  var plugin_title = {\n    id: 'title',\n    _element: Title,\n    start(chart, _args, options) {\n      createTitle(chart, options);\n    },\n    stop(chart) {\n      const titleBlock = chart.titleBlock;\n      layouts.removeBox(chart, titleBlock);\n      delete chart.titleBlock;\n    },\n    beforeUpdate(chart, _args, options) {\n      const title = chart.titleBlock;\n      layouts.configure(chart, title, options);\n      title.options = options;\n    },\n    defaults: {\n      align: 'center',\n      display: false,\n      font: {\n        weight: 'bold'\n      },\n      fullSize: true,\n      padding: 10,\n      position: 'top',\n      text: '',\n      weight: 2000\n    },\n    defaultRoutes: {\n      color: 'color'\n    },\n    descriptors: {\n      _scriptable: true,\n      _indexable: false\n    }\n  };\n  const positioners = {\n    average(items) {\n      if (!items.length) {\n        return false;\n      }\n      let i, len;\n      let x = 0;\n      let y = 0;\n      let count = 0;\n      for (i = 0, len = items.length; i < len; ++i) {\n        const el = items[i].element;\n        if (el && el.hasValue()) {\n          const pos = el.tooltipPosition();\n          x += pos.x;\n          y += pos.y;\n          ++count;\n        }\n      }\n      return {\n        x: x / count,\n        y: y / count\n      };\n    },\n    nearest(items, eventPosition) {\n      if (!items.length) {\n        return false;\n      }\n      let x = eventPosition.x;\n      let y = eventPosition.y;\n      let minDistance = Number.POSITIVE_INFINITY;\n      let i, len, nearestElement;\n      for (i = 0, len = items.length; i < len; ++i) {\n        const el = items[i].element;\n        if (el && el.hasValue()) {\n          const center = el.getCenterPoint();\n          const d = distanceBetweenPoints(eventPosition, center);\n          if (d < minDistance) {\n            minDistance = d;\n            nearestElement = el;\n          }\n        }\n      }\n      if (nearestElement) {\n        const tp = nearestElement.tooltipPosition();\n        x = tp.x;\n        y = tp.y;\n      }\n      return {\n        x,\n        y\n      };\n    }\n  };\n  function pushOrConcat(base, toPush) {\n    if (toPush) {\n      if (isArray(toPush)) {\n        Array.prototype.push.apply(base, toPush);\n      } else {\n        base.push(toPush);\n      }\n    }\n    return base;\n  }\n  function splitNewlines(str) {\n    if ((typeof str === 'string' || str instanceof String) && str.indexOf('\\n') > -1) {\n      return str.split('\\n');\n    }\n    return str;\n  }\n  function createTooltipItem(chart, item) {\n    const {\n      element,\n      datasetIndex,\n      index\n    } = item;\n    const controller = chart.getDatasetMeta(datasetIndex).controller;\n    const {\n      label,\n      value\n    } = controller.getLabelAndValue(index);\n    return {\n      chart,\n      label,\n      parsed: controller.getParsed(index),\n      raw: chart.data.datasets[datasetIndex].data[index],\n      formattedValue: value,\n      dataset: controller.getDataset(),\n      dataIndex: index,\n      datasetIndex,\n      element\n    };\n  }\n  function getTooltipSize(tooltip, options) {\n    const ctx = tooltip._chart.ctx;\n    const {\n      body,\n      footer,\n      title\n    } = tooltip;\n    const {\n      boxWidth,\n      boxHeight\n    } = options;\n    const bodyFont = toFont(options.bodyFont);\n    const titleFont = toFont(options.titleFont);\n    const footerFont = toFont(options.footerFont);\n    const titleLineCount = title.length;\n    const footerLineCount = footer.length;\n    const bodyLineItemCount = body.length;\n    const padding = toPadding(options.padding);\n    let height = padding.height;\n    let width = 0;\n    let combinedBodyLength = body.reduce((count, bodyItem) => count + bodyItem.before.length + bodyItem.lines.length + bodyItem.after.length, 0);\n    combinedBodyLength += tooltip.beforeBody.length + tooltip.afterBody.length;\n    if (titleLineCount) {\n      height += titleLineCount * titleFont.lineHeight + (titleLineCount - 1) * options.titleSpacing + options.titleMarginBottom;\n    }\n    if (combinedBodyLength) {\n      const bodyLineHeight = options.displayColors ? Math.max(boxHeight, bodyFont.lineHeight) : bodyFont.lineHeight;\n      height += bodyLineItemCount * bodyLineHeight + (combinedBodyLength - bodyLineItemCount) * bodyFont.lineHeight + (combinedBodyLength - 1) * options.bodySpacing;\n    }\n    if (footerLineCount) {\n      height += options.footerMarginTop + footerLineCount * footerFont.lineHeight + (footerLineCount - 1) * options.footerSpacing;\n    }\n    let widthPadding = 0;\n    const maxLineWidth = function (line) {\n      width = Math.max(width, ctx.measureText(line).width + widthPadding);\n    };\n    ctx.save();\n    ctx.font = titleFont.string;\n    each(tooltip.title, maxLineWidth);\n    ctx.font = bodyFont.string;\n    each(tooltip.beforeBody.concat(tooltip.afterBody), maxLineWidth);\n    widthPadding = options.displayColors ? boxWidth + 2 : 0;\n    each(body, bodyItem => {\n      each(bodyItem.before, maxLineWidth);\n      each(bodyItem.lines, maxLineWidth);\n      each(bodyItem.after, maxLineWidth);\n    });\n    widthPadding = 0;\n    ctx.font = footerFont.string;\n    each(tooltip.footer, maxLineWidth);\n    ctx.restore();\n    width += padding.width;\n    return {\n      width,\n      height\n    };\n  }\n  function determineYAlign(chart, size) {\n    const {\n      y,\n      height\n    } = size;\n    if (y < height / 2) {\n      return 'top';\n    } else if (y > chart.height - height / 2) {\n      return 'bottom';\n    }\n    return 'center';\n  }\n  function doesNotFitWithAlign(xAlign, chart, options, size) {\n    const {\n      x,\n      width\n    } = size;\n    const caret = options.caretSize + options.caretPadding;\n    if (xAlign === 'left' && x + width + caret > chart.width) {\n      return true;\n    }\n    if (xAlign === 'right' && x - width - caret < 0) {\n      return true;\n    }\n  }\n  function determineXAlign(chart, options, size, yAlign) {\n    const {\n      x,\n      width\n    } = size;\n    const {\n      width: chartWidth,\n      chartArea: {\n        left,\n        right\n      }\n    } = chart;\n    let xAlign = 'center';\n    if (yAlign === 'center') {\n      xAlign = x <= (left + right) / 2 ? 'left' : 'right';\n    } else if (x <= width / 2) {\n      xAlign = 'left';\n    } else if (x >= chartWidth - width / 2) {\n      xAlign = 'right';\n    }\n    if (doesNotFitWithAlign(xAlign, chart, options, size)) {\n      xAlign = 'center';\n    }\n    return xAlign;\n  }\n  function determineAlignment(chart, options, size) {\n    const yAlign = options.yAlign || determineYAlign(chart, size);\n    return {\n      xAlign: options.xAlign || determineXAlign(chart, options, size, yAlign),\n      yAlign\n    };\n  }\n  function alignX(size, xAlign) {\n    let {\n      x,\n      width\n    } = size;\n    if (xAlign === 'right') {\n      x -= width;\n    } else if (xAlign === 'center') {\n      x -= width / 2;\n    }\n    return x;\n  }\n  function alignY(size, yAlign, paddingAndSize) {\n    let {\n      y,\n      height\n    } = size;\n    if (yAlign === 'top') {\n      y += paddingAndSize;\n    } else if (yAlign === 'bottom') {\n      y -= height + paddingAndSize;\n    } else {\n      y -= height / 2;\n    }\n    return y;\n  }\n  function getBackgroundPoint(options, size, alignment, chart) {\n    const {\n      caretSize,\n      caretPadding,\n      cornerRadius\n    } = options;\n    const {\n      xAlign,\n      yAlign\n    } = alignment;\n    const paddingAndSize = caretSize + caretPadding;\n    const radiusAndPadding = cornerRadius + caretPadding;\n    let x = alignX(size, xAlign);\n    const y = alignY(size, yAlign, paddingAndSize);\n    if (yAlign === 'center') {\n      if (xAlign === 'left') {\n        x += paddingAndSize;\n      } else if (xAlign === 'right') {\n        x -= paddingAndSize;\n      }\n    } else if (xAlign === 'left') {\n      x -= radiusAndPadding;\n    } else if (xAlign === 'right') {\n      x += radiusAndPadding;\n    }\n    return {\n      x: _limitValue(x, 0, chart.width - size.width),\n      y: _limitValue(y, 0, chart.height - size.height)\n    };\n  }\n  function getAlignedX(tooltip, align, options) {\n    const padding = toPadding(options.padding);\n    return align === 'center' ? tooltip.x + tooltip.width / 2 : align === 'right' ? tooltip.x + tooltip.width - padding.right : tooltip.x + padding.left;\n  }\n  function getBeforeAfterBodyLines(callback) {\n    return pushOrConcat([], splitNewlines(callback));\n  }\n  function createTooltipContext(parent, tooltip, tooltipItems) {\n    return Object.assign(Object.create(parent), {\n      tooltip,\n      tooltipItems,\n      type: 'tooltip'\n    });\n  }\n  function overrideCallbacks(callbacks, context) {\n    const override = context && context.dataset && context.dataset.tooltip && context.dataset.tooltip.callbacks;\n    return override ? callbacks.override(override) : callbacks;\n  }\n  class Tooltip extends Element {\n    constructor(config) {\n      super();\n      this.opacity = 0;\n      this._active = [];\n      this._chart = config._chart;\n      this._eventPosition = undefined;\n      this._size = undefined;\n      this._cachedAnimations = undefined;\n      this._tooltipItems = [];\n      this.$animations = undefined;\n      this.$context = undefined;\n      this.options = config.options;\n      this.dataPoints = undefined;\n      this.title = undefined;\n      this.beforeBody = undefined;\n      this.body = undefined;\n      this.afterBody = undefined;\n      this.footer = undefined;\n      this.xAlign = undefined;\n      this.yAlign = undefined;\n      this.x = undefined;\n      this.y = undefined;\n      this.height = undefined;\n      this.width = undefined;\n      this.caretX = undefined;\n      this.caretY = undefined;\n      this.labelColors = undefined;\n      this.labelPointStyles = undefined;\n      this.labelTextColors = undefined;\n    }\n    initialize(options) {\n      this.options = options;\n      this._cachedAnimations = undefined;\n      this.$context = undefined;\n    }\n    _resolveAnimations() {\n      const me = this;\n      const cached = me._cachedAnimations;\n      if (cached) {\n        return cached;\n      }\n      const chart = me._chart;\n      const options = me.options.setContext(me.getContext());\n      const opts = options.enabled && chart.options.animation && options.animations;\n      const animations = new Animations(me._chart, opts);\n      if (opts._cacheable) {\n        me._cachedAnimations = Object.freeze(animations);\n      }\n      return animations;\n    }\n    getContext() {\n      const me = this;\n      return me.$context || (me.$context = createTooltipContext(me._chart.getContext(), me, me._tooltipItems));\n    }\n    getTitle(context, options) {\n      const me = this;\n      const {\n        callbacks\n      } = options;\n      const beforeTitle = callbacks.beforeTitle.apply(me, [context]);\n      const title = callbacks.title.apply(me, [context]);\n      const afterTitle = callbacks.afterTitle.apply(me, [context]);\n      let lines = [];\n      lines = pushOrConcat(lines, splitNewlines(beforeTitle));\n      lines = pushOrConcat(lines, splitNewlines(title));\n      lines = pushOrConcat(lines, splitNewlines(afterTitle));\n      return lines;\n    }\n    getBeforeBody(tooltipItems, options) {\n      return getBeforeAfterBodyLines(options.callbacks.beforeBody.apply(this, [tooltipItems]));\n    }\n    getBody(tooltipItems, options) {\n      const me = this;\n      const {\n        callbacks\n      } = options;\n      const bodyItems = [];\n      each(tooltipItems, context => {\n        const bodyItem = {\n          before: [],\n          lines: [],\n          after: []\n        };\n        const scoped = overrideCallbacks(callbacks, context);\n        pushOrConcat(bodyItem.before, splitNewlines(scoped.beforeLabel.call(me, context)));\n        pushOrConcat(bodyItem.lines, scoped.label.call(me, context));\n        pushOrConcat(bodyItem.after, splitNewlines(scoped.afterLabel.call(me, context)));\n        bodyItems.push(bodyItem);\n      });\n      return bodyItems;\n    }\n    getAfterBody(tooltipItems, options) {\n      return getBeforeAfterBodyLines(options.callbacks.afterBody.apply(this, [tooltipItems]));\n    }\n    getFooter(tooltipItems, options) {\n      const me = this;\n      const {\n        callbacks\n      } = options;\n      const beforeFooter = callbacks.beforeFooter.apply(me, [tooltipItems]);\n      const footer = callbacks.footer.apply(me, [tooltipItems]);\n      const afterFooter = callbacks.afterFooter.apply(me, [tooltipItems]);\n      let lines = [];\n      lines = pushOrConcat(lines, splitNewlines(beforeFooter));\n      lines = pushOrConcat(lines, splitNewlines(footer));\n      lines = pushOrConcat(lines, splitNewlines(afterFooter));\n      return lines;\n    }\n    _createItems(options) {\n      const me = this;\n      const active = me._active;\n      const data = me._chart.data;\n      const labelColors = [];\n      const labelPointStyles = [];\n      const labelTextColors = [];\n      let tooltipItems = [];\n      let i, len;\n      for (i = 0, len = active.length; i < len; ++i) {\n        tooltipItems.push(createTooltipItem(me._chart, active[i]));\n      }\n      if (options.filter) {\n        tooltipItems = tooltipItems.filter((element, index, array) => options.filter(element, index, array, data));\n      }\n      if (options.itemSort) {\n        tooltipItems = tooltipItems.sort((a, b) => options.itemSort(a, b, data));\n      }\n      each(tooltipItems, context => {\n        const scoped = overrideCallbacks(options.callbacks, context);\n        labelColors.push(scoped.labelColor.call(me, context));\n        labelPointStyles.push(scoped.labelPointStyle.call(me, context));\n        labelTextColors.push(scoped.labelTextColor.call(me, context));\n      });\n      me.labelColors = labelColors;\n      me.labelPointStyles = labelPointStyles;\n      me.labelTextColors = labelTextColors;\n      me.dataPoints = tooltipItems;\n      return tooltipItems;\n    }\n    update(changed, replay) {\n      const me = this;\n      const options = me.options.setContext(me.getContext());\n      const active = me._active;\n      let properties;\n      let tooltipItems = [];\n      if (!active.length) {\n        if (me.opacity !== 0) {\n          properties = {\n            opacity: 0\n          };\n        }\n      } else {\n        const position = positioners[options.position].call(me, active, me._eventPosition);\n        tooltipItems = me._createItems(options);\n        me.title = me.getTitle(tooltipItems, options);\n        me.beforeBody = me.getBeforeBody(tooltipItems, options);\n        me.body = me.getBody(tooltipItems, options);\n        me.afterBody = me.getAfterBody(tooltipItems, options);\n        me.footer = me.getFooter(tooltipItems, options);\n        const size = me._size = getTooltipSize(me, options);\n        const positionAndSize = Object.assign({}, position, size);\n        const alignment = determineAlignment(me._chart, options, positionAndSize);\n        const backgroundPoint = getBackgroundPoint(options, positionAndSize, alignment, me._chart);\n        me.xAlign = alignment.xAlign;\n        me.yAlign = alignment.yAlign;\n        properties = {\n          opacity: 1,\n          x: backgroundPoint.x,\n          y: backgroundPoint.y,\n          width: size.width,\n          height: size.height,\n          caretX: position.x,\n          caretY: position.y\n        };\n      }\n      me._tooltipItems = tooltipItems;\n      me.$context = undefined;\n      if (properties) {\n        me._resolveAnimations().update(me, properties);\n      }\n      if (changed && options.external) {\n        options.external.call(me, {\n          chart: me._chart,\n          tooltip: me,\n          replay\n        });\n      }\n    }\n    drawCaret(tooltipPoint, ctx, size, options) {\n      const caretPosition = this.getCaretPosition(tooltipPoint, size, options);\n      ctx.lineTo(caretPosition.x1, caretPosition.y1);\n      ctx.lineTo(caretPosition.x2, caretPosition.y2);\n      ctx.lineTo(caretPosition.x3, caretPosition.y3);\n    }\n    getCaretPosition(tooltipPoint, size, options) {\n      const {\n        xAlign,\n        yAlign\n      } = this;\n      const {\n        cornerRadius,\n        caretSize\n      } = options;\n      const {\n        x: ptX,\n        y: ptY\n      } = tooltipPoint;\n      const {\n        width,\n        height\n      } = size;\n      let x1, x2, x3, y1, y2, y3;\n      if (yAlign === 'center') {\n        y2 = ptY + height / 2;\n        if (xAlign === 'left') {\n          x1 = ptX;\n          x2 = x1 - caretSize;\n          y1 = y2 + caretSize;\n          y3 = y2 - caretSize;\n        } else {\n          x1 = ptX + width;\n          x2 = x1 + caretSize;\n          y1 = y2 - caretSize;\n          y3 = y2 + caretSize;\n        }\n        x3 = x1;\n      } else {\n        if (xAlign === 'left') {\n          x2 = ptX + cornerRadius + caretSize;\n        } else if (xAlign === 'right') {\n          x2 = ptX + width - cornerRadius - caretSize;\n        } else {\n          x2 = this.caretX;\n        }\n        if (yAlign === 'top') {\n          y1 = ptY;\n          y2 = y1 - caretSize;\n          x1 = x2 - caretSize;\n          x3 = x2 + caretSize;\n        } else {\n          y1 = ptY + height;\n          y2 = y1 + caretSize;\n          x1 = x2 + caretSize;\n          x3 = x2 - caretSize;\n        }\n        y3 = y1;\n      }\n      return {\n        x1,\n        x2,\n        x3,\n        y1,\n        y2,\n        y3\n      };\n    }\n    drawTitle(pt, ctx, options) {\n      const me = this;\n      const title = me.title;\n      const length = title.length;\n      let titleFont, titleSpacing, i;\n      if (length) {\n        const rtlHelper = getRtlAdapter(options.rtl, me.x, me.width);\n        pt.x = getAlignedX(me, options.titleAlign, options);\n        ctx.textAlign = rtlHelper.textAlign(options.titleAlign);\n        ctx.textBaseline = 'middle';\n        titleFont = toFont(options.titleFont);\n        titleSpacing = options.titleSpacing;\n        ctx.fillStyle = options.titleColor;\n        ctx.font = titleFont.string;\n        for (i = 0; i < length; ++i) {\n          ctx.fillText(title[i], rtlHelper.x(pt.x), pt.y + titleFont.lineHeight / 2);\n          pt.y += titleFont.lineHeight + titleSpacing;\n          if (i + 1 === length) {\n            pt.y += options.titleMarginBottom - titleSpacing;\n          }\n        }\n      }\n    }\n    _drawColorBox(ctx, pt, i, rtlHelper, options) {\n      const me = this;\n      const labelColors = me.labelColors[i];\n      const labelPointStyle = me.labelPointStyles[i];\n      const {\n        boxHeight,\n        boxWidth\n      } = options;\n      const bodyFont = toFont(options.bodyFont);\n      const colorX = getAlignedX(me, 'left', options);\n      const rtlColorX = rtlHelper.x(colorX);\n      const yOffSet = boxHeight < bodyFont.lineHeight ? (bodyFont.lineHeight - boxHeight) / 2 : 0;\n      const colorY = pt.y + yOffSet;\n      if (options.usePointStyle) {\n        const drawOptions = {\n          radius: Math.min(boxWidth, boxHeight) / 2,\n          pointStyle: labelPointStyle.pointStyle,\n          rotation: labelPointStyle.rotation,\n          borderWidth: 1\n        };\n        const centerX = rtlHelper.leftForLtr(rtlColorX, boxWidth) + boxWidth / 2;\n        const centerY = colorY + boxHeight / 2;\n        ctx.strokeStyle = options.multiKeyBackground;\n        ctx.fillStyle = options.multiKeyBackground;\n        drawPoint(ctx, drawOptions, centerX, centerY);\n        ctx.strokeStyle = labelColors.borderColor;\n        ctx.fillStyle = labelColors.backgroundColor;\n        drawPoint(ctx, drawOptions, centerX, centerY);\n      } else {\n        ctx.lineWidth = labelColors.borderWidth || 1;\n        ctx.strokeStyle = labelColors.borderColor;\n        ctx.setLineDash(labelColors.borderDash || []);\n        ctx.lineDashOffset = labelColors.borderDashOffset || 0;\n        const outerX = rtlHelper.leftForLtr(rtlColorX, boxWidth);\n        const innerX = rtlHelper.leftForLtr(rtlHelper.xPlus(rtlColorX, 1), boxWidth - 2);\n        const borderRadius = toTRBLCorners(labelColors.borderRadius);\n        if (Object.values(borderRadius).some(v => v !== 0)) {\n          ctx.beginPath();\n          ctx.fillStyle = options.multiKeyBackground;\n          addRoundedRectPath(ctx, {\n            x: outerX,\n            y: colorY,\n            w: boxWidth,\n            h: boxHeight,\n            radius: borderRadius\n          });\n          ctx.fill();\n          ctx.stroke();\n          ctx.fillStyle = labelColors.backgroundColor;\n          ctx.beginPath();\n          addRoundedRectPath(ctx, {\n            x: innerX,\n            y: colorY + 1,\n            w: boxWidth - 2,\n            h: boxHeight - 2,\n            radius: borderRadius\n          });\n          ctx.fill();\n        } else {\n          ctx.fillStyle = options.multiKeyBackground;\n          ctx.fillRect(outerX, colorY, boxWidth, boxHeight);\n          ctx.strokeRect(outerX, colorY, boxWidth, boxHeight);\n          ctx.fillStyle = labelColors.backgroundColor;\n          ctx.fillRect(innerX, colorY + 1, boxWidth - 2, boxHeight - 2);\n        }\n      }\n      ctx.fillStyle = me.labelTextColors[i];\n    }\n    drawBody(pt, ctx, options) {\n      const me = this;\n      const {\n        body\n      } = me;\n      const {\n        bodySpacing,\n        bodyAlign,\n        displayColors,\n        boxHeight,\n        boxWidth\n      } = options;\n      const bodyFont = toFont(options.bodyFont);\n      let bodyLineHeight = bodyFont.lineHeight;\n      let xLinePadding = 0;\n      const rtlHelper = getRtlAdapter(options.rtl, me.x, me.width);\n      const fillLineOfText = function (line) {\n        ctx.fillText(line, rtlHelper.x(pt.x + xLinePadding), pt.y + bodyLineHeight / 2);\n        pt.y += bodyLineHeight + bodySpacing;\n      };\n      const bodyAlignForCalculation = rtlHelper.textAlign(bodyAlign);\n      let bodyItem, textColor, lines, i, j, ilen, jlen;\n      ctx.textAlign = bodyAlign;\n      ctx.textBaseline = 'middle';\n      ctx.font = bodyFont.string;\n      pt.x = getAlignedX(me, bodyAlignForCalculation, options);\n      ctx.fillStyle = options.bodyColor;\n      each(me.beforeBody, fillLineOfText);\n      xLinePadding = displayColors && bodyAlignForCalculation !== 'right' ? bodyAlign === 'center' ? boxWidth / 2 + 1 : boxWidth + 2 : 0;\n      for (i = 0, ilen = body.length; i < ilen; ++i) {\n        bodyItem = body[i];\n        textColor = me.labelTextColors[i];\n        ctx.fillStyle = textColor;\n        each(bodyItem.before, fillLineOfText);\n        lines = bodyItem.lines;\n        if (displayColors && lines.length) {\n          me._drawColorBox(ctx, pt, i, rtlHelper, options);\n          bodyLineHeight = Math.max(bodyFont.lineHeight, boxHeight);\n        }\n        for (j = 0, jlen = lines.length; j < jlen; ++j) {\n          fillLineOfText(lines[j]);\n          bodyLineHeight = bodyFont.lineHeight;\n        }\n        each(bodyItem.after, fillLineOfText);\n      }\n      xLinePadding = 0;\n      bodyLineHeight = bodyFont.lineHeight;\n      each(me.afterBody, fillLineOfText);\n      pt.y -= bodySpacing;\n    }\n    drawFooter(pt, ctx, options) {\n      const me = this;\n      const footer = me.footer;\n      const length = footer.length;\n      let footerFont, i;\n      if (length) {\n        const rtlHelper = getRtlAdapter(options.rtl, me.x, me.width);\n        pt.x = getAlignedX(me, options.footerAlign, options);\n        pt.y += options.footerMarginTop;\n        ctx.textAlign = rtlHelper.textAlign(options.footerAlign);\n        ctx.textBaseline = 'middle';\n        footerFont = toFont(options.footerFont);\n        ctx.fillStyle = options.footerColor;\n        ctx.font = footerFont.string;\n        for (i = 0; i < length; ++i) {\n          ctx.fillText(footer[i], rtlHelper.x(pt.x), pt.y + footerFont.lineHeight / 2);\n          pt.y += footerFont.lineHeight + options.footerSpacing;\n        }\n      }\n    }\n    drawBackground(pt, ctx, tooltipSize, options) {\n      const {\n        xAlign,\n        yAlign\n      } = this;\n      const {\n        x,\n        y\n      } = pt;\n      const {\n        width,\n        height\n      } = tooltipSize;\n      const radius = options.cornerRadius;\n      ctx.fillStyle = options.backgroundColor;\n      ctx.strokeStyle = options.borderColor;\n      ctx.lineWidth = options.borderWidth;\n      ctx.beginPath();\n      ctx.moveTo(x + radius, y);\n      if (yAlign === 'top') {\n        this.drawCaret(pt, ctx, tooltipSize, options);\n      }\n      ctx.lineTo(x + width - radius, y);\n      ctx.quadraticCurveTo(x + width, y, x + width, y + radius);\n      if (yAlign === 'center' && xAlign === 'right') {\n        this.drawCaret(pt, ctx, tooltipSize, options);\n      }\n      ctx.lineTo(x + width, y + height - radius);\n      ctx.quadraticCurveTo(x + width, y + height, x + width - radius, y + height);\n      if (yAlign === 'bottom') {\n        this.drawCaret(pt, ctx, tooltipSize, options);\n      }\n      ctx.lineTo(x + radius, y + height);\n      ctx.quadraticCurveTo(x, y + height, x, y + height - radius);\n      if (yAlign === 'center' && xAlign === 'left') {\n        this.drawCaret(pt, ctx, tooltipSize, options);\n      }\n      ctx.lineTo(x, y + radius);\n      ctx.quadraticCurveTo(x, y, x + radius, y);\n      ctx.closePath();\n      ctx.fill();\n      if (options.borderWidth > 0) {\n        ctx.stroke();\n      }\n    }\n    _updateAnimationTarget(options) {\n      const me = this;\n      const chart = me._chart;\n      const anims = me.$animations;\n      const animX = anims && anims.x;\n      const animY = anims && anims.y;\n      if (animX || animY) {\n        const position = positioners[options.position].call(me, me._active, me._eventPosition);\n        if (!position) {\n          return;\n        }\n        const size = me._size = getTooltipSize(me, options);\n        const positionAndSize = Object.assign({}, position, me._size);\n        const alignment = determineAlignment(chart, options, positionAndSize);\n        const point = getBackgroundPoint(options, positionAndSize, alignment, chart);\n        if (animX._to !== point.x || animY._to !== point.y) {\n          me.xAlign = alignment.xAlign;\n          me.yAlign = alignment.yAlign;\n          me.width = size.width;\n          me.height = size.height;\n          me.caretX = position.x;\n          me.caretY = position.y;\n          me._resolveAnimations().update(me, point);\n        }\n      }\n    }\n    draw(ctx) {\n      const me = this;\n      const options = me.options.setContext(me.getContext());\n      let opacity = me.opacity;\n      if (!opacity) {\n        return;\n      }\n      me._updateAnimationTarget(options);\n      const tooltipSize = {\n        width: me.width,\n        height: me.height\n      };\n      const pt = {\n        x: me.x,\n        y: me.y\n      };\n      opacity = Math.abs(opacity) < 1e-3 ? 0 : opacity;\n      const padding = toPadding(options.padding);\n      const hasTooltipContent = me.title.length || me.beforeBody.length || me.body.length || me.afterBody.length || me.footer.length;\n      if (options.enabled && hasTooltipContent) {\n        ctx.save();\n        ctx.globalAlpha = opacity;\n        me.drawBackground(pt, ctx, tooltipSize, options);\n        overrideTextDirection(ctx, options.textDirection);\n        pt.y += padding.top;\n        me.drawTitle(pt, ctx, options);\n        me.drawBody(pt, ctx, options);\n        me.drawFooter(pt, ctx, options);\n        restoreTextDirection(ctx, options.textDirection);\n        ctx.restore();\n      }\n    }\n    getActiveElements() {\n      return this._active || [];\n    }\n    setActiveElements(activeElements, eventPosition) {\n      const me = this;\n      const lastActive = me._active;\n      const active = activeElements.map(_ref3 => {\n        let {\n          datasetIndex,\n          index\n        } = _ref3;\n        const meta = me._chart.getDatasetMeta(datasetIndex);\n        if (!meta) {\n          throw new Error('Cannot find a dataset at index ' + datasetIndex);\n        }\n        return {\n          datasetIndex,\n          element: meta.data[index],\n          index\n        };\n      });\n      const changed = !_elementsEqual(lastActive, active);\n      const positionChanged = me._positionChanged(active, eventPosition);\n      if (changed || positionChanged) {\n        me._active = active;\n        me._eventPosition = eventPosition;\n        me.update(true);\n      }\n    }\n    handleEvent(e, replay) {\n      const me = this;\n      const options = me.options;\n      const lastActive = me._active || [];\n      let changed = false;\n      let active = [];\n      if (e.type !== 'mouseout') {\n        active = me._chart.getElementsAtEventForMode(e, options.mode, options, replay);\n        if (options.reverse) {\n          active.reverse();\n        }\n      }\n      const positionChanged = me._positionChanged(active, e);\n      changed = replay || !_elementsEqual(active, lastActive) || positionChanged;\n      if (changed) {\n        me._active = active;\n        if (options.enabled || options.external) {\n          me._eventPosition = {\n            x: e.x,\n            y: e.y\n          };\n          me.update(true, replay);\n        }\n      }\n      return changed;\n    }\n    _positionChanged(active, e) {\n      const {\n        caretX,\n        caretY,\n        options\n      } = this;\n      const position = positioners[options.position].call(this, active, e);\n      return position !== false && (caretX !== position.x || caretY !== position.y);\n    }\n  }\n  Tooltip.positioners = positioners;\n  var plugin_tooltip = {\n    id: 'tooltip',\n    _element: Tooltip,\n    positioners,\n    afterInit(chart, _args, options) {\n      if (options) {\n        chart.tooltip = new Tooltip({\n          _chart: chart,\n          options\n        });\n      }\n    },\n    beforeUpdate(chart, _args, options) {\n      if (chart.tooltip) {\n        chart.tooltip.initialize(options);\n      }\n    },\n    reset(chart, _args, options) {\n      if (chart.tooltip) {\n        chart.tooltip.initialize(options);\n      }\n    },\n    afterDraw(chart) {\n      const tooltip = chart.tooltip;\n      const args = {\n        tooltip\n      };\n      if (chart.notifyPlugins('beforeTooltipDraw', args) === false) {\n        return;\n      }\n      if (tooltip) {\n        tooltip.draw(chart.ctx);\n      }\n      chart.notifyPlugins('afterTooltipDraw', args);\n    },\n    afterEvent(chart, args) {\n      if (chart.tooltip) {\n        const useFinalPosition = args.replay;\n        if (chart.tooltip.handleEvent(args.event, useFinalPosition)) {\n          args.changed = true;\n        }\n      }\n    },\n    defaults: {\n      enabled: true,\n      external: null,\n      position: 'average',\n      backgroundColor: 'rgba(0,0,0,0.8)',\n      titleColor: '#fff',\n      titleFont: {\n        weight: 'bold'\n      },\n      titleSpacing: 2,\n      titleMarginBottom: 6,\n      titleAlign: 'left',\n      bodyColor: '#fff',\n      bodySpacing: 2,\n      bodyFont: {},\n      bodyAlign: 'left',\n      footerColor: '#fff',\n      footerSpacing: 2,\n      footerMarginTop: 6,\n      footerFont: {\n        weight: 'bold'\n      },\n      footerAlign: 'left',\n      padding: 6,\n      caretPadding: 2,\n      caretSize: 5,\n      cornerRadius: 6,\n      boxHeight: (ctx, opts) => opts.bodyFont.size,\n      boxWidth: (ctx, opts) => opts.bodyFont.size,\n      multiKeyBackground: '#fff',\n      displayColors: true,\n      borderColor: 'rgba(0,0,0,0)',\n      borderWidth: 0,\n      animation: {\n        duration: 400,\n        easing: 'easeOutQuart'\n      },\n      animations: {\n        numbers: {\n          type: 'number',\n          properties: ['x', 'y', 'width', 'height', 'caretX', 'caretY']\n        },\n        opacity: {\n          easing: 'linear',\n          duration: 200\n        }\n      },\n      callbacks: {\n        beforeTitle: noop,\n        title(tooltipItems) {\n          if (tooltipItems.length > 0) {\n            const item = tooltipItems[0];\n            const labels = item.chart.data.labels;\n            const labelCount = labels ? labels.length : 0;\n            if (this && this.options && this.options.mode === 'dataset') {\n              return item.dataset.label || '';\n            } else if (item.label) {\n              return item.label;\n            } else if (labelCount > 0 && item.dataIndex < labelCount) {\n              return labels[item.dataIndex];\n            }\n          }\n          return '';\n        },\n        afterTitle: noop,\n        beforeBody: noop,\n        beforeLabel: noop,\n        label(tooltipItem) {\n          if (this && this.options && this.options.mode === 'dataset') {\n            return tooltipItem.label + ': ' + tooltipItem.formattedValue || tooltipItem.formattedValue;\n          }\n          let label = tooltipItem.dataset.label || '';\n          if (label) {\n            label += ': ';\n          }\n          const value = tooltipItem.formattedValue;\n          if (!isNullOrUndef(value)) {\n            label += value;\n          }\n          return label;\n        },\n        labelColor(tooltipItem) {\n          const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n          const options = meta.controller.getStyle(tooltipItem.dataIndex);\n          return {\n            borderColor: options.borderColor,\n            backgroundColor: options.backgroundColor,\n            borderWidth: options.borderWidth,\n            borderDash: options.borderDash,\n            borderDashOffset: options.borderDashOffset,\n            borderRadius: 0\n          };\n        },\n        labelTextColor() {\n          return this.options.bodyColor;\n        },\n        labelPointStyle(tooltipItem) {\n          const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n          const options = meta.controller.getStyle(tooltipItem.dataIndex);\n          return {\n            pointStyle: options.pointStyle,\n            rotation: options.rotation\n          };\n        },\n        afterLabel: noop,\n        afterBody: noop,\n        beforeFooter: noop,\n        footer: noop,\n        afterFooter: noop\n      }\n    },\n    defaultRoutes: {\n      bodyFont: 'font',\n      footerFont: 'font',\n      titleFont: 'font'\n    },\n    descriptors: {\n      _scriptable: name => name !== 'filter' && name !== 'itemSort' && name !== 'external',\n      _indexable: false,\n      callbacks: {\n        _scriptable: false,\n        _indexable: false\n      },\n      animation: {\n        _fallback: false\n      },\n      animations: {\n        _fallback: 'animation'\n      }\n    },\n    additionalOptionScopes: ['interaction']\n  };\n  var plugins = /*#__PURE__*/Object.freeze({\n    __proto__: null,\n    Decimation: plugin_decimation,\n    Filler: plugin_filler,\n    Legend: plugin_legend,\n    Title: plugin_title,\n    Tooltip: plugin_tooltip\n  });\n  const addIfString = (labels, raw, index) => typeof raw === 'string' ? labels.push(raw) - 1 : isNaN(raw) ? null : index;\n  function findOrAddLabel(labels, raw, index) {\n    const first = labels.indexOf(raw);\n    if (first === -1) {\n      return addIfString(labels, raw, index);\n    }\n    const last = labels.lastIndexOf(raw);\n    return first !== last ? index : first;\n  }\n  const validIndex = (index, max) => index === null ? null : _limitValue(Math.round(index), 0, max);\n  class CategoryScale extends Scale {\n    constructor(cfg) {\n      super(cfg);\n      this._startValue = undefined;\n      this._valueRange = 0;\n    }\n    parse(raw, index) {\n      if (isNullOrUndef(raw)) {\n        return null;\n      }\n      const labels = this.getLabels();\n      index = isFinite(index) && labels[index] === raw ? index : findOrAddLabel(labels, raw, valueOrDefault(index, raw));\n      return validIndex(index, labels.length - 1);\n    }\n    determineDataLimits() {\n      const me = this;\n      const {\n        minDefined,\n        maxDefined\n      } = me.getUserBounds();\n      let {\n        min,\n        max\n      } = me.getMinMax(true);\n      if (me.options.bounds === 'ticks') {\n        if (!minDefined) {\n          min = 0;\n        }\n        if (!maxDefined) {\n          max = me.getLabels().length - 1;\n        }\n      }\n      me.min = min;\n      me.max = max;\n    }\n    buildTicks() {\n      const me = this;\n      const min = me.min;\n      const max = me.max;\n      const offset = me.options.offset;\n      const ticks = [];\n      let labels = me.getLabels();\n      labels = min === 0 && max === labels.length - 1 ? labels : labels.slice(min, max + 1);\n      me._valueRange = Math.max(labels.length - (offset ? 0 : 1), 1);\n      me._startValue = me.min - (offset ? 0.5 : 0);\n      for (let value = min; value <= max; value++) {\n        ticks.push({\n          value\n        });\n      }\n      return ticks;\n    }\n    getLabelForValue(value) {\n      const me = this;\n      const labels = me.getLabels();\n      if (value >= 0 && value < labels.length) {\n        return labels[value];\n      }\n      return value;\n    }\n    configure() {\n      const me = this;\n      super.configure();\n      if (!me.isHorizontal()) {\n        me._reversePixels = !me._reversePixels;\n      }\n    }\n    getPixelForValue(value) {\n      const me = this;\n      if (typeof value !== 'number') {\n        value = me.parse(value);\n      }\n      return value === null ? NaN : me.getPixelForDecimal((value - me._startValue) / me._valueRange);\n    }\n    getPixelForTick(index) {\n      const me = this;\n      const ticks = me.ticks;\n      if (index < 0 || index > ticks.length - 1) {\n        return null;\n      }\n      return me.getPixelForValue(ticks[index].value);\n    }\n    getValueForPixel(pixel) {\n      const me = this;\n      return Math.round(me._startValue + me.getDecimalForPixel(pixel) * me._valueRange);\n    }\n    getBasePixel() {\n      return this.bottom;\n    }\n  }\n  CategoryScale.id = 'category';\n  CategoryScale.defaults = {\n    ticks: {\n      callback: CategoryScale.prototype.getLabelForValue\n    }\n  };\n  function generateTicks$1(generationOptions, dataRange) {\n    const ticks = [];\n    const MIN_SPACING = 1e-14;\n    const {\n      bounds,\n      step,\n      min,\n      max,\n      precision,\n      count,\n      maxTicks,\n      maxDigits,\n      includeBounds\n    } = generationOptions;\n    const unit = step || 1;\n    const maxSpaces = maxTicks - 1;\n    const {\n      min: rmin,\n      max: rmax\n    } = dataRange;\n    const minDefined = !isNullOrUndef(min);\n    const maxDefined = !isNullOrUndef(max);\n    const countDefined = !isNullOrUndef(count);\n    const minSpacing = (rmax - rmin) / (maxDigits + 1);\n    let spacing = niceNum((rmax - rmin) / maxSpaces / unit) * unit;\n    let factor, niceMin, niceMax, numSpaces;\n    if (spacing < MIN_SPACING && !minDefined && !maxDefined) {\n      return [{\n        value: rmin\n      }, {\n        value: rmax\n      }];\n    }\n    numSpaces = Math.ceil(rmax / spacing) - Math.floor(rmin / spacing);\n    if (numSpaces > maxSpaces) {\n      spacing = niceNum(numSpaces * spacing / maxSpaces / unit) * unit;\n    }\n    if (!isNullOrUndef(precision)) {\n      factor = Math.pow(10, precision);\n      spacing = Math.ceil(spacing * factor) / factor;\n    }\n    if (bounds === 'ticks') {\n      niceMin = Math.floor(rmin / spacing) * spacing;\n      niceMax = Math.ceil(rmax / spacing) * spacing;\n    } else {\n      niceMin = rmin;\n      niceMax = rmax;\n    }\n    if (minDefined && maxDefined && step && almostWhole((max - min) / step, spacing / 1000)) {\n      numSpaces = Math.min((max - min) / spacing, maxTicks);\n      spacing = (max - min) / numSpaces;\n      niceMin = min;\n      niceMax = max;\n    } else if (countDefined) {\n      niceMin = minDefined ? min : niceMin;\n      niceMax = maxDefined ? max : niceMax;\n      numSpaces = count - 1;\n      spacing = (niceMax - niceMin) / numSpaces;\n    } else {\n      numSpaces = (niceMax - niceMin) / spacing;\n      if (almostEquals(numSpaces, Math.round(numSpaces), spacing / 1000)) {\n        numSpaces = Math.round(numSpaces);\n      } else {\n        numSpaces = Math.ceil(numSpaces);\n      }\n    }\n    const decimalPlaces = Math.max(_decimalPlaces(spacing), _decimalPlaces(niceMin));\n    factor = Math.pow(10, isNullOrUndef(precision) ? decimalPlaces : precision);\n    niceMin = Math.round(niceMin * factor) / factor;\n    niceMax = Math.round(niceMax * factor) / factor;\n    let j = 0;\n    if (minDefined) {\n      if (includeBounds && niceMin !== min) {\n        ticks.push({\n          value: min\n        });\n        if (niceMin < min) {\n          j++;\n        }\n        if (almostEquals(Math.round((niceMin + j * spacing) * factor) / factor, min, relativeLabelSize(min, minSpacing, generationOptions))) {\n          j++;\n        }\n      } else if (niceMin < min) {\n        j++;\n      }\n    }\n    for (; j < numSpaces; ++j) {\n      ticks.push({\n        value: Math.round((niceMin + j * spacing) * factor) / factor\n      });\n    }\n    if (maxDefined && includeBounds && niceMax !== max) {\n      if (almostEquals(ticks[ticks.length - 1].value, max, relativeLabelSize(max, minSpacing, generationOptions))) {\n        ticks[ticks.length - 1].value = max;\n      } else {\n        ticks.push({\n          value: max\n        });\n      }\n    } else if (!maxDefined || niceMax === max) {\n      ticks.push({\n        value: niceMax\n      });\n    }\n    return ticks;\n  }\n  function relativeLabelSize(value, minSpacing, _ref4) {\n    let {\n      horizontal,\n      minRotation\n    } = _ref4;\n    const rad = toRadians(minRotation);\n    const ratio = (horizontal ? Math.sin(rad) : Math.cos(rad)) || 0.001;\n    const length = 0.75 * minSpacing * ('' + value).length;\n    return Math.min(minSpacing / ratio, length);\n  }\n  class LinearScaleBase extends Scale {\n    constructor(cfg) {\n      super(cfg);\n      this.start = undefined;\n      this.end = undefined;\n      this._startValue = undefined;\n      this._endValue = undefined;\n      this._valueRange = 0;\n    }\n    parse(raw, index) {\n      if (isNullOrUndef(raw)) {\n        return null;\n      }\n      if ((typeof raw === 'number' || raw instanceof Number) && !isFinite(+raw)) {\n        return null;\n      }\n      return +raw;\n    }\n    handleTickRangeOptions() {\n      const me = this;\n      const {\n        beginAtZero\n      } = me.options;\n      const {\n        minDefined,\n        maxDefined\n      } = me.getUserBounds();\n      let {\n        min,\n        max\n      } = me;\n      const setMin = v => min = minDefined ? min : v;\n      const setMax = v => max = maxDefined ? max : v;\n      if (beginAtZero) {\n        const minSign = sign(min);\n        const maxSign = sign(max);\n        if (minSign < 0 && maxSign < 0) {\n          setMax(0);\n        } else if (minSign > 0 && maxSign > 0) {\n          setMin(0);\n        }\n      }\n      if (min === max) {\n        setMax(max + 1);\n        if (!beginAtZero) {\n          setMin(min - 1);\n        }\n      }\n      me.min = min;\n      me.max = max;\n    }\n    getTickLimit() {\n      const me = this;\n      const tickOpts = me.options.ticks;\n      let {\n        maxTicksLimit,\n        stepSize\n      } = tickOpts;\n      let maxTicks;\n      if (stepSize) {\n        maxTicks = Math.ceil(me.max / stepSize) - Math.floor(me.min / stepSize) + 1;\n      } else {\n        maxTicks = me.computeTickLimit();\n        maxTicksLimit = maxTicksLimit || 11;\n      }\n      if (maxTicksLimit) {\n        maxTicks = Math.min(maxTicksLimit, maxTicks);\n      }\n      return maxTicks;\n    }\n    computeTickLimit() {\n      return Number.POSITIVE_INFINITY;\n    }\n    buildTicks() {\n      const me = this;\n      const opts = me.options;\n      const tickOpts = opts.ticks;\n      let maxTicks = me.getTickLimit();\n      maxTicks = Math.max(2, maxTicks);\n      const numericGeneratorOptions = {\n        maxTicks,\n        bounds: opts.bounds,\n        min: opts.min,\n        max: opts.max,\n        precision: tickOpts.precision,\n        step: tickOpts.stepSize,\n        count: tickOpts.count,\n        maxDigits: me._maxDigits(),\n        horizontal: me.isHorizontal(),\n        minRotation: tickOpts.minRotation || 0,\n        includeBounds: tickOpts.includeBounds !== false\n      };\n      const dataRange = me._range || me;\n      const ticks = generateTicks$1(numericGeneratorOptions, dataRange);\n      if (opts.bounds === 'ticks') {\n        _setMinAndMaxByKey(ticks, me, 'value');\n      }\n      if (opts.reverse) {\n        ticks.reverse();\n        me.start = me.max;\n        me.end = me.min;\n      } else {\n        me.start = me.min;\n        me.end = me.max;\n      }\n      return ticks;\n    }\n    configure() {\n      const me = this;\n      const ticks = me.ticks;\n      let start = me.min;\n      let end = me.max;\n      super.configure();\n      if (me.options.offset && ticks.length) {\n        const offset = (end - start) / Math.max(ticks.length - 1, 1) / 2;\n        start -= offset;\n        end += offset;\n      }\n      me._startValue = start;\n      me._endValue = end;\n      me._valueRange = end - start;\n    }\n    getLabelForValue(value) {\n      return formatNumber(value, this.chart.options.locale);\n    }\n  }\n  class LinearScale extends LinearScaleBase {\n    determineDataLimits() {\n      const me = this;\n      const {\n        min,\n        max\n      } = me.getMinMax(true);\n      me.min = isNumberFinite(min) ? min : 0;\n      me.max = isNumberFinite(max) ? max : 1;\n      me.handleTickRangeOptions();\n    }\n    computeTickLimit() {\n      const me = this;\n      const horizontal = me.isHorizontal();\n      const length = horizontal ? me.width : me.height;\n      const minRotation = toRadians(me.options.ticks.minRotation);\n      const ratio = (horizontal ? Math.sin(minRotation) : Math.cos(minRotation)) || 0.001;\n      const tickFont = me._resolveTickFontOptions(0);\n      return Math.ceil(length / Math.min(40, tickFont.lineHeight / ratio));\n    }\n    getPixelForValue(value) {\n      return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n    }\n    getValueForPixel(pixel) {\n      return this._startValue + this.getDecimalForPixel(pixel) * this._valueRange;\n    }\n  }\n  LinearScale.id = 'linear';\n  LinearScale.defaults = {\n    ticks: {\n      callback: Ticks.formatters.numeric\n    }\n  };\n  function isMajor(tickVal) {\n    const remain = tickVal / Math.pow(10, Math.floor(log10(tickVal)));\n    return remain === 1;\n  }\n  function generateTicks(generationOptions, dataRange) {\n    const endExp = Math.floor(log10(dataRange.max));\n    const endSignificand = Math.ceil(dataRange.max / Math.pow(10, endExp));\n    const ticks = [];\n    let tickVal = finiteOrDefault(generationOptions.min, Math.pow(10, Math.floor(log10(dataRange.min))));\n    let exp = Math.floor(log10(tickVal));\n    let significand = Math.floor(tickVal / Math.pow(10, exp));\n    let precision = exp < 0 ? Math.pow(10, Math.abs(exp)) : 1;\n    do {\n      ticks.push({\n        value: tickVal,\n        major: isMajor(tickVal)\n      });\n      ++significand;\n      if (significand === 10) {\n        significand = 1;\n        ++exp;\n        precision = exp >= 0 ? 1 : precision;\n      }\n      tickVal = Math.round(significand * Math.pow(10, exp) * precision) / precision;\n    } while (exp < endExp || exp === endExp && significand < endSignificand);\n    const lastTick = finiteOrDefault(generationOptions.max, tickVal);\n    ticks.push({\n      value: lastTick,\n      major: isMajor(tickVal)\n    });\n    return ticks;\n  }\n  class LogarithmicScale extends Scale {\n    constructor(cfg) {\n      super(cfg);\n      this.start = undefined;\n      this.end = undefined;\n      this._startValue = undefined;\n      this._valueRange = 0;\n    }\n    parse(raw, index) {\n      const value = LinearScaleBase.prototype.parse.apply(this, [raw, index]);\n      if (value === 0) {\n        this._zero = true;\n        return undefined;\n      }\n      return isNumberFinite(value) && value > 0 ? value : null;\n    }\n    determineDataLimits() {\n      const me = this;\n      const {\n        min,\n        max\n      } = me.getMinMax(true);\n      me.min = isNumberFinite(min) ? Math.max(0, min) : null;\n      me.max = isNumberFinite(max) ? Math.max(0, max) : null;\n      if (me.options.beginAtZero) {\n        me._zero = true;\n      }\n      me.handleTickRangeOptions();\n    }\n    handleTickRangeOptions() {\n      const me = this;\n      const {\n        minDefined,\n        maxDefined\n      } = me.getUserBounds();\n      let min = me.min;\n      let max = me.max;\n      const setMin = v => min = minDefined ? min : v;\n      const setMax = v => max = maxDefined ? max : v;\n      const exp = (v, m) => Math.pow(10, Math.floor(log10(v)) + m);\n      if (min === max) {\n        if (min <= 0) {\n          setMin(1);\n          setMax(10);\n        } else {\n          setMin(exp(min, -1));\n          setMax(exp(max, +1));\n        }\n      }\n      if (min <= 0) {\n        setMin(exp(max, -1));\n      }\n      if (max <= 0) {\n        setMax(exp(min, +1));\n      }\n      if (me._zero && me.min !== me._suggestedMin && min === exp(me.min, 0)) {\n        setMin(exp(min, -1));\n      }\n      me.min = min;\n      me.max = max;\n    }\n    buildTicks() {\n      const me = this;\n      const opts = me.options;\n      const generationOptions = {\n        min: me._userMin,\n        max: me._userMax\n      };\n      const ticks = generateTicks(generationOptions, me);\n      if (opts.bounds === 'ticks') {\n        _setMinAndMaxByKey(ticks, me, 'value');\n      }\n      if (opts.reverse) {\n        ticks.reverse();\n        me.start = me.max;\n        me.end = me.min;\n      } else {\n        me.start = me.min;\n        me.end = me.max;\n      }\n      return ticks;\n    }\n    getLabelForValue(value) {\n      return value === undefined ? '0' : formatNumber(value, this.chart.options.locale);\n    }\n    configure() {\n      const me = this;\n      const start = me.min;\n      super.configure();\n      me._startValue = log10(start);\n      me._valueRange = log10(me.max) - log10(start);\n    }\n    getPixelForValue(value) {\n      const me = this;\n      if (value === undefined || value === 0) {\n        value = me.min;\n      }\n      if (value === null || isNaN(value)) {\n        return NaN;\n      }\n      return me.getPixelForDecimal(value === me.min ? 0 : (log10(value) - me._startValue) / me._valueRange);\n    }\n    getValueForPixel(pixel) {\n      const me = this;\n      const decimal = me.getDecimalForPixel(pixel);\n      return Math.pow(10, me._startValue + decimal * me._valueRange);\n    }\n  }\n  LogarithmicScale.id = 'logarithmic';\n  LogarithmicScale.defaults = {\n    ticks: {\n      callback: Ticks.formatters.logarithmic,\n      major: {\n        enabled: true\n      }\n    }\n  };\n  function getTickBackdropHeight(opts) {\n    const tickOpts = opts.ticks;\n    if (tickOpts.display && opts.display) {\n      const padding = toPadding(tickOpts.backdropPadding);\n      return valueOrDefault(tickOpts.font && tickOpts.font.size, defaults.font.size) + padding.height;\n    }\n    return 0;\n  }\n  function measureLabelSize(ctx, lineHeight, label) {\n    if (isArray(label)) {\n      return {\n        w: _longestText(ctx, ctx.font, label),\n        h: label.length * lineHeight\n      };\n    }\n    return {\n      w: ctx.measureText(label).width,\n      h: lineHeight\n    };\n  }\n  function determineLimits(angle, pos, size, min, max) {\n    if (angle === min || angle === max) {\n      return {\n        start: pos - size / 2,\n        end: pos + size / 2\n      };\n    } else if (angle < min || angle > max) {\n      return {\n        start: pos - size,\n        end: pos\n      };\n    }\n    return {\n      start: pos,\n      end: pos + size\n    };\n  }\n  function fitWithPointLabels(scale) {\n    const furthestLimits = {\n      l: 0,\n      r: scale.width,\n      t: 0,\n      b: scale.height - scale.paddingTop\n    };\n    const furthestAngles = {};\n    let i, textSize, pointPosition;\n    const labelSizes = [];\n    const padding = [];\n    const valueCount = scale.getLabels().length;\n    for (i = 0; i < valueCount; i++) {\n      const opts = scale.options.pointLabels.setContext(scale.getContext(i));\n      padding[i] = opts.padding;\n      pointPosition = scale.getPointPosition(i, scale.drawingArea + padding[i]);\n      const plFont = toFont(opts.font);\n      scale.ctx.font = plFont.string;\n      textSize = measureLabelSize(scale.ctx, plFont.lineHeight, scale._pointLabels[i]);\n      labelSizes[i] = textSize;\n      const angleRadians = scale.getIndexAngle(i);\n      const angle = toDegrees(angleRadians);\n      const hLimits = determineLimits(angle, pointPosition.x, textSize.w, 0, 180);\n      const vLimits = determineLimits(angle, pointPosition.y, textSize.h, 90, 270);\n      if (hLimits.start < furthestLimits.l) {\n        furthestLimits.l = hLimits.start;\n        furthestAngles.l = angleRadians;\n      }\n      if (hLimits.end > furthestLimits.r) {\n        furthestLimits.r = hLimits.end;\n        furthestAngles.r = angleRadians;\n      }\n      if (vLimits.start < furthestLimits.t) {\n        furthestLimits.t = vLimits.start;\n        furthestAngles.t = angleRadians;\n      }\n      if (vLimits.end > furthestLimits.b) {\n        furthestLimits.b = vLimits.end;\n        furthestAngles.b = angleRadians;\n      }\n    }\n    scale._setReductions(scale.drawingArea, furthestLimits, furthestAngles);\n    scale._pointLabelItems = [];\n    const opts = scale.options;\n    const tickBackdropHeight = getTickBackdropHeight(opts);\n    const outerDistance = scale.getDistanceFromCenterForValue(opts.ticks.reverse ? scale.min : scale.max);\n    for (i = 0; i < valueCount; i++) {\n      const extra = i === 0 ? tickBackdropHeight / 2 : 0;\n      const pointLabelPosition = scale.getPointPosition(i, outerDistance + extra + padding[i]);\n      const angle = toDegrees(scale.getIndexAngle(i));\n      const size = labelSizes[i];\n      adjustPointPositionForLabelHeight(angle, size, pointLabelPosition);\n      const textAlign = getTextAlignForAngle(angle);\n      let left;\n      if (textAlign === 'left') {\n        left = pointLabelPosition.x;\n      } else if (textAlign === 'center') {\n        left = pointLabelPosition.x - size.w / 2;\n      } else {\n        left = pointLabelPosition.x - size.w;\n      }\n      const right = left + size.w;\n      scale._pointLabelItems[i] = {\n        x: pointLabelPosition.x,\n        y: pointLabelPosition.y,\n        textAlign,\n        left,\n        top: pointLabelPosition.y,\n        right,\n        bottom: pointLabelPosition.y + size.h\n      };\n    }\n  }\n  function getTextAlignForAngle(angle) {\n    if (angle === 0 || angle === 180) {\n      return 'center';\n    } else if (angle < 180) {\n      return 'left';\n    }\n    return 'right';\n  }\n  function adjustPointPositionForLabelHeight(angle, textSize, position) {\n    if (angle === 90 || angle === 270) {\n      position.y -= textSize.h / 2;\n    } else if (angle > 270 || angle < 90) {\n      position.y -= textSize.h;\n    }\n  }\n  function drawPointLabels(scale, labelCount) {\n    const {\n      ctx,\n      options: {\n        pointLabels\n      }\n    } = scale;\n    for (let i = labelCount - 1; i >= 0; i--) {\n      const optsAtIndex = pointLabels.setContext(scale.getContext(i));\n      const plFont = toFont(optsAtIndex.font);\n      const {\n        x,\n        y,\n        textAlign,\n        left,\n        top,\n        right,\n        bottom\n      } = scale._pointLabelItems[i];\n      const {\n        backdropColor\n      } = optsAtIndex;\n      if (!isNullOrUndef(backdropColor)) {\n        const padding = toPadding(optsAtIndex.backdropPadding);\n        ctx.fillStyle = backdropColor;\n        ctx.fillRect(left - padding.left, top - padding.top, right - left + padding.width, bottom - top + padding.height);\n      }\n      renderText(ctx, scale._pointLabels[i], x, y + plFont.lineHeight / 2, plFont, {\n        color: optsAtIndex.color,\n        textAlign: textAlign,\n        textBaseline: 'middle'\n      });\n    }\n  }\n  function pathRadiusLine(scale, radius, circular, labelCount) {\n    const {\n      ctx\n    } = scale;\n    if (circular) {\n      ctx.arc(scale.xCenter, scale.yCenter, radius, 0, TAU);\n    } else {\n      let pointPosition = scale.getPointPosition(0, radius);\n      ctx.moveTo(pointPosition.x, pointPosition.y);\n      for (let i = 1; i < labelCount; i++) {\n        pointPosition = scale.getPointPosition(i, radius);\n        ctx.lineTo(pointPosition.x, pointPosition.y);\n      }\n    }\n  }\n  function drawRadiusLine(scale, gridLineOpts, radius, labelCount) {\n    const ctx = scale.ctx;\n    const circular = gridLineOpts.circular;\n    const {\n      color,\n      lineWidth\n    } = gridLineOpts;\n    if (!circular && !labelCount || !color || !lineWidth || radius < 0) {\n      return;\n    }\n    ctx.save();\n    ctx.strokeStyle = color;\n    ctx.lineWidth = lineWidth;\n    ctx.setLineDash(gridLineOpts.borderDash);\n    ctx.lineDashOffset = gridLineOpts.borderDashOffset;\n    ctx.beginPath();\n    pathRadiusLine(scale, radius, circular, labelCount);\n    ctx.closePath();\n    ctx.stroke();\n    ctx.restore();\n  }\n  function numberOrZero(param) {\n    return isNumber(param) ? param : 0;\n  }\n  class RadialLinearScale extends LinearScaleBase {\n    constructor(cfg) {\n      super(cfg);\n      this.xCenter = undefined;\n      this.yCenter = undefined;\n      this.drawingArea = undefined;\n      this._pointLabels = [];\n      this._pointLabelItems = [];\n    }\n    setDimensions() {\n      const me = this;\n      me.width = me.maxWidth;\n      me.height = me.maxHeight;\n      me.paddingTop = getTickBackdropHeight(me.options) / 2;\n      me.xCenter = Math.floor(me.width / 2);\n      me.yCenter = Math.floor((me.height - me.paddingTop) / 2);\n      me.drawingArea = Math.min(me.height - me.paddingTop, me.width) / 2;\n    }\n    determineDataLimits() {\n      const me = this;\n      const {\n        min,\n        max\n      } = me.getMinMax(false);\n      me.min = isNumberFinite(min) && !isNaN(min) ? min : 0;\n      me.max = isNumberFinite(max) && !isNaN(max) ? max : 0;\n      me.handleTickRangeOptions();\n    }\n    computeTickLimit() {\n      return Math.ceil(this.drawingArea / getTickBackdropHeight(this.options));\n    }\n    generateTickLabels(ticks) {\n      const me = this;\n      LinearScaleBase.prototype.generateTickLabels.call(me, ticks);\n      me._pointLabels = me.getLabels().map((value, index) => {\n        const label = callback(me.options.pointLabels.callback, [value, index], me);\n        return label || label === 0 ? label : '';\n      });\n    }\n    fit() {\n      const me = this;\n      const opts = me.options;\n      if (opts.display && opts.pointLabels.display) {\n        fitWithPointLabels(me);\n      } else {\n        me.setCenterPoint(0, 0, 0, 0);\n      }\n    }\n    _setReductions(largestPossibleRadius, furthestLimits, furthestAngles) {\n      const me = this;\n      let radiusReductionLeft = furthestLimits.l / Math.sin(furthestAngles.l);\n      let radiusReductionRight = Math.max(furthestLimits.r - me.width, 0) / Math.sin(furthestAngles.r);\n      let radiusReductionTop = -furthestLimits.t / Math.cos(furthestAngles.t);\n      let radiusReductionBottom = -Math.max(furthestLimits.b - (me.height - me.paddingTop), 0) / Math.cos(furthestAngles.b);\n      radiusReductionLeft = numberOrZero(radiusReductionLeft);\n      radiusReductionRight = numberOrZero(radiusReductionRight);\n      radiusReductionTop = numberOrZero(radiusReductionTop);\n      radiusReductionBottom = numberOrZero(radiusReductionBottom);\n      me.drawingArea = Math.max(largestPossibleRadius / 2, Math.min(Math.floor(largestPossibleRadius - (radiusReductionLeft + radiusReductionRight) / 2), Math.floor(largestPossibleRadius - (radiusReductionTop + radiusReductionBottom) / 2)));\n      me.setCenterPoint(radiusReductionLeft, radiusReductionRight, radiusReductionTop, radiusReductionBottom);\n    }\n    setCenterPoint(leftMovement, rightMovement, topMovement, bottomMovement) {\n      const me = this;\n      const maxRight = me.width - rightMovement - me.drawingArea;\n      const maxLeft = leftMovement + me.drawingArea;\n      const maxTop = topMovement + me.drawingArea;\n      const maxBottom = me.height - me.paddingTop - bottomMovement - me.drawingArea;\n      me.xCenter = Math.floor((maxLeft + maxRight) / 2 + me.left);\n      me.yCenter = Math.floor((maxTop + maxBottom) / 2 + me.top + me.paddingTop);\n    }\n    getIndexAngle(index) {\n      const angleMultiplier = TAU / this.getLabels().length;\n      const startAngle = this.options.startAngle || 0;\n      return _normalizeAngle(index * angleMultiplier + toRadians(startAngle));\n    }\n    getDistanceFromCenterForValue(value) {\n      const me = this;\n      if (isNullOrUndef(value)) {\n        return NaN;\n      }\n      const scalingFactor = me.drawingArea / (me.max - me.min);\n      if (me.options.reverse) {\n        return (me.max - value) * scalingFactor;\n      }\n      return (value - me.min) * scalingFactor;\n    }\n    getValueForDistanceFromCenter(distance) {\n      if (isNullOrUndef(distance)) {\n        return NaN;\n      }\n      const me = this;\n      const scaledDistance = distance / (me.drawingArea / (me.max - me.min));\n      return me.options.reverse ? me.max - scaledDistance : me.min + scaledDistance;\n    }\n    getPointPosition(index, distanceFromCenter) {\n      const me = this;\n      const angle = me.getIndexAngle(index) - HALF_PI;\n      return {\n        x: Math.cos(angle) * distanceFromCenter + me.xCenter,\n        y: Math.sin(angle) * distanceFromCenter + me.yCenter,\n        angle\n      };\n    }\n    getPointPositionForValue(index, value) {\n      return this.getPointPosition(index, this.getDistanceFromCenterForValue(value));\n    }\n    getBasePosition(index) {\n      return this.getPointPositionForValue(index || 0, this.getBaseValue());\n    }\n    getPointLabelPosition(index) {\n      const {\n        left,\n        top,\n        right,\n        bottom\n      } = this._pointLabelItems[index];\n      return {\n        left,\n        top,\n        right,\n        bottom\n      };\n    }\n    drawBackground() {\n      const me = this;\n      const {\n        backgroundColor,\n        grid: {\n          circular\n        }\n      } = me.options;\n      if (backgroundColor) {\n        const ctx = me.ctx;\n        ctx.save();\n        ctx.beginPath();\n        pathRadiusLine(me, me.getDistanceFromCenterForValue(me._endValue), circular, me.getLabels().length);\n        ctx.closePath();\n        ctx.fillStyle = backgroundColor;\n        ctx.fill();\n        ctx.restore();\n      }\n    }\n    drawGrid() {\n      const me = this;\n      const ctx = me.ctx;\n      const opts = me.options;\n      const {\n        angleLines,\n        grid\n      } = opts;\n      const labelCount = me.getLabels().length;\n      let i, offset, position;\n      if (opts.pointLabels.display) {\n        drawPointLabels(me, labelCount);\n      }\n      if (grid.display) {\n        me.ticks.forEach((tick, index) => {\n          if (index !== 0) {\n            offset = me.getDistanceFromCenterForValue(tick.value);\n            const optsAtIndex = grid.setContext(me.getContext(index - 1));\n            drawRadiusLine(me, optsAtIndex, offset, labelCount);\n          }\n        });\n      }\n      if (angleLines.display) {\n        ctx.save();\n        for (i = me.getLabels().length - 1; i >= 0; i--) {\n          const optsAtIndex = angleLines.setContext(me.getContext(i));\n          const {\n            color,\n            lineWidth\n          } = optsAtIndex;\n          if (!lineWidth || !color) {\n            continue;\n          }\n          ctx.lineWidth = lineWidth;\n          ctx.strokeStyle = color;\n          ctx.setLineDash(optsAtIndex.borderDash);\n          ctx.lineDashOffset = optsAtIndex.borderDashOffset;\n          offset = me.getDistanceFromCenterForValue(opts.ticks.reverse ? me.min : me.max);\n          position = me.getPointPosition(i, offset);\n          ctx.beginPath();\n          ctx.moveTo(me.xCenter, me.yCenter);\n          ctx.lineTo(position.x, position.y);\n          ctx.stroke();\n        }\n        ctx.restore();\n      }\n    }\n    drawBorder() {}\n    drawLabels() {\n      const me = this;\n      const ctx = me.ctx;\n      const opts = me.options;\n      const tickOpts = opts.ticks;\n      if (!tickOpts.display) {\n        return;\n      }\n      const startAngle = me.getIndexAngle(0);\n      let offset, width;\n      ctx.save();\n      ctx.translate(me.xCenter, me.yCenter);\n      ctx.rotate(startAngle);\n      ctx.textAlign = 'center';\n      ctx.textBaseline = 'middle';\n      me.ticks.forEach((tick, index) => {\n        if (index === 0 && !opts.reverse) {\n          return;\n        }\n        const optsAtIndex = tickOpts.setContext(me.getContext(index));\n        const tickFont = toFont(optsAtIndex.font);\n        offset = me.getDistanceFromCenterForValue(me.ticks[index].value);\n        if (optsAtIndex.showLabelBackdrop) {\n          width = ctx.measureText(tick.label).width;\n          ctx.fillStyle = optsAtIndex.backdropColor;\n          const padding = toPadding(optsAtIndex.backdropPadding);\n          ctx.fillRect(-width / 2 - padding.left, -offset - tickFont.size / 2 - padding.top, width + padding.width, tickFont.size + padding.height);\n        }\n        renderText(ctx, tick.label, 0, -offset, tickFont, {\n          color: optsAtIndex.color\n        });\n      });\n      ctx.restore();\n    }\n    drawTitle() {}\n  }\n  RadialLinearScale.id = 'radialLinear';\n  RadialLinearScale.defaults = {\n    display: true,\n    animate: true,\n    position: 'chartArea',\n    angleLines: {\n      display: true,\n      lineWidth: 1,\n      borderDash: [],\n      borderDashOffset: 0.0\n    },\n    grid: {\n      circular: false\n    },\n    startAngle: 0,\n    ticks: {\n      showLabelBackdrop: true,\n      callback: Ticks.formatters.numeric\n    },\n    pointLabels: {\n      backdropColor: undefined,\n      backdropPadding: 2,\n      display: true,\n      font: {\n        size: 10\n      },\n      callback(label) {\n        return label;\n      },\n      padding: 5\n    }\n  };\n  RadialLinearScale.defaultRoutes = {\n    'angleLines.color': 'borderColor',\n    'pointLabels.color': 'color',\n    'ticks.color': 'color'\n  };\n  RadialLinearScale.descriptors = {\n    angleLines: {\n      _fallback: 'grid'\n    }\n  };\n  const INTERVALS = {\n    millisecond: {\n      common: true,\n      size: 1,\n      steps: 1000\n    },\n    second: {\n      common: true,\n      size: 1000,\n      steps: 60\n    },\n    minute: {\n      common: true,\n      size: 60000,\n      steps: 60\n    },\n    hour: {\n      common: true,\n      size: 3600000,\n      steps: 24\n    },\n    day: {\n      common: true,\n      size: 86400000,\n      steps: 30\n    },\n    week: {\n      common: false,\n      size: 604800000,\n      steps: 4\n    },\n    month: {\n      common: true,\n      size: 2.628e9,\n      steps: 12\n    },\n    quarter: {\n      common: false,\n      size: 7.884e9,\n      steps: 4\n    },\n    year: {\n      common: true,\n      size: 3.154e10\n    }\n  };\n  const UNITS = Object.keys(INTERVALS);\n  function sorter(a, b) {\n    return a - b;\n  }\n  function parse(scale, input) {\n    if (isNullOrUndef(input)) {\n      return null;\n    }\n    const adapter = scale._adapter;\n    const {\n      parser,\n      round,\n      isoWeekday\n    } = scale._parseOpts;\n    let value = input;\n    if (typeof parser === 'function') {\n      value = parser(value);\n    }\n    if (!isNumberFinite(value)) {\n      value = typeof parser === 'string' ? adapter.parse(value, parser) : adapter.parse(value);\n    }\n    if (value === null) {\n      return null;\n    }\n    if (round) {\n      value = round === 'week' && (isNumber(isoWeekday) || isoWeekday === true) ? adapter.startOf(value, 'isoWeek', isoWeekday) : adapter.startOf(value, round);\n    }\n    return +value;\n  }\n  function determineUnitForAutoTicks(minUnit, min, max, capacity) {\n    const ilen = UNITS.length;\n    for (let i = UNITS.indexOf(minUnit); i < ilen - 1; ++i) {\n      const interval = INTERVALS[UNITS[i]];\n      const factor = interval.steps ? interval.steps : Number.MAX_SAFE_INTEGER;\n      if (interval.common && Math.ceil((max - min) / (factor * interval.size)) <= capacity) {\n        return UNITS[i];\n      }\n    }\n    return UNITS[ilen - 1];\n  }\n  function determineUnitForFormatting(scale, numTicks, minUnit, min, max) {\n    for (let i = UNITS.length - 1; i >= UNITS.indexOf(minUnit); i--) {\n      const unit = UNITS[i];\n      if (INTERVALS[unit].common && scale._adapter.diff(max, min, unit) >= numTicks - 1) {\n        return unit;\n      }\n    }\n    return UNITS[minUnit ? UNITS.indexOf(minUnit) : 0];\n  }\n  function determineMajorUnit(unit) {\n    for (let i = UNITS.indexOf(unit) + 1, ilen = UNITS.length; i < ilen; ++i) {\n      if (INTERVALS[UNITS[i]].common) {\n        return UNITS[i];\n      }\n    }\n  }\n  function addTick(ticks, time, timestamps) {\n    if (!timestamps) {\n      ticks[time] = true;\n    } else if (timestamps.length) {\n      const {\n        lo,\n        hi\n      } = _lookup(timestamps, time);\n      const timestamp = timestamps[lo] >= time ? timestamps[lo] : timestamps[hi];\n      ticks[timestamp] = true;\n    }\n  }\n  function setMajorTicks(scale, ticks, map, majorUnit) {\n    const adapter = scale._adapter;\n    const first = +adapter.startOf(ticks[0].value, majorUnit);\n    const last = ticks[ticks.length - 1].value;\n    let major, index;\n    for (major = first; major <= last; major = +adapter.add(major, 1, majorUnit)) {\n      index = map[major];\n      if (index >= 0) {\n        ticks[index].major = true;\n      }\n    }\n    return ticks;\n  }\n  function ticksFromTimestamps(scale, values, majorUnit) {\n    const ticks = [];\n    const map = {};\n    const ilen = values.length;\n    let i, value;\n    for (i = 0; i < ilen; ++i) {\n      value = values[i];\n      map[value] = i;\n      ticks.push({\n        value,\n        major: false\n      });\n    }\n    return ilen === 0 || !majorUnit ? ticks : setMajorTicks(scale, ticks, map, majorUnit);\n  }\n  class TimeScale extends Scale {\n    constructor(props) {\n      super(props);\n      this._cache = {\n        data: [],\n        labels: [],\n        all: []\n      };\n      this._unit = 'day';\n      this._majorUnit = undefined;\n      this._offsets = {};\n      this._normalized = false;\n      this._parseOpts = undefined;\n    }\n    init(scaleOpts, opts) {\n      const time = scaleOpts.time || (scaleOpts.time = {});\n      const adapter = this._adapter = new _adapters._date(scaleOpts.adapters.date);\n      mergeIf(time.displayFormats, adapter.formats());\n      this._parseOpts = {\n        parser: time.parser,\n        round: time.round,\n        isoWeekday: time.isoWeekday\n      };\n      super.init(scaleOpts);\n      this._normalized = opts.normalized;\n    }\n    parse(raw, index) {\n      if (raw === undefined) {\n        return null;\n      }\n      return parse(this, raw);\n    }\n    beforeLayout() {\n      super.beforeLayout();\n      this._cache = {\n        data: [],\n        labels: [],\n        all: []\n      };\n    }\n    determineDataLimits() {\n      const me = this;\n      const options = me.options;\n      const adapter = me._adapter;\n      const unit = options.time.unit || 'day';\n      let {\n        min,\n        max,\n        minDefined,\n        maxDefined\n      } = me.getUserBounds();\n      function _applyBounds(bounds) {\n        if (!minDefined && !isNaN(bounds.min)) {\n          min = Math.min(min, bounds.min);\n        }\n        if (!maxDefined && !isNaN(bounds.max)) {\n          max = Math.max(max, bounds.max);\n        }\n      }\n      if (!minDefined || !maxDefined) {\n        _applyBounds(me._getLabelBounds());\n        if (options.bounds !== 'ticks' || options.ticks.source !== 'labels') {\n          _applyBounds(me.getMinMax(false));\n        }\n      }\n      min = isNumberFinite(min) && !isNaN(min) ? min : +adapter.startOf(Date.now(), unit);\n      max = isNumberFinite(max) && !isNaN(max) ? max : +adapter.endOf(Date.now(), unit) + 1;\n      me.min = Math.min(min, max - 1);\n      me.max = Math.max(min + 1, max);\n    }\n    _getLabelBounds() {\n      const arr = this.getLabelTimestamps();\n      let min = Number.POSITIVE_INFINITY;\n      let max = Number.NEGATIVE_INFINITY;\n      if (arr.length) {\n        min = arr[0];\n        max = arr[arr.length - 1];\n      }\n      return {\n        min,\n        max\n      };\n    }\n    buildTicks() {\n      const me = this;\n      const options = me.options;\n      const timeOpts = options.time;\n      const tickOpts = options.ticks;\n      const timestamps = tickOpts.source === 'labels' ? me.getLabelTimestamps() : me._generate();\n      if (options.bounds === 'ticks' && timestamps.length) {\n        me.min = me._userMin || timestamps[0];\n        me.max = me._userMax || timestamps[timestamps.length - 1];\n      }\n      const min = me.min;\n      const max = me.max;\n      const ticks = _filterBetween(timestamps, min, max);\n      me._unit = timeOpts.unit || (tickOpts.autoSkip ? determineUnitForAutoTicks(timeOpts.minUnit, me.min, me.max, me._getLabelCapacity(min)) : determineUnitForFormatting(me, ticks.length, timeOpts.minUnit, me.min, me.max));\n      me._majorUnit = !tickOpts.major.enabled || me._unit === 'year' ? undefined : determineMajorUnit(me._unit);\n      me.initOffsets(timestamps);\n      if (options.reverse) {\n        ticks.reverse();\n      }\n      return ticksFromTimestamps(me, ticks, me._majorUnit);\n    }\n    initOffsets(timestamps) {\n      const me = this;\n      let start = 0;\n      let end = 0;\n      let first, last;\n      if (me.options.offset && timestamps.length) {\n        first = me.getDecimalForValue(timestamps[0]);\n        if (timestamps.length === 1) {\n          start = 1 - first;\n        } else {\n          start = (me.getDecimalForValue(timestamps[1]) - first) / 2;\n        }\n        last = me.getDecimalForValue(timestamps[timestamps.length - 1]);\n        if (timestamps.length === 1) {\n          end = last;\n        } else {\n          end = (last - me.getDecimalForValue(timestamps[timestamps.length - 2])) / 2;\n        }\n      }\n      const limit = timestamps.length < 3 ? 0.5 : 0.25;\n      start = _limitValue(start, 0, limit);\n      end = _limitValue(end, 0, limit);\n      me._offsets = {\n        start,\n        end,\n        factor: 1 / (start + 1 + end)\n      };\n    }\n    _generate() {\n      const me = this;\n      const adapter = me._adapter;\n      const min = me.min;\n      const max = me.max;\n      const options = me.options;\n      const timeOpts = options.time;\n      const minor = timeOpts.unit || determineUnitForAutoTicks(timeOpts.minUnit, min, max, me._getLabelCapacity(min));\n      const stepSize = valueOrDefault(timeOpts.stepSize, 1);\n      const weekday = minor === 'week' ? timeOpts.isoWeekday : false;\n      const hasWeekday = isNumber(weekday) || weekday === true;\n      const ticks = {};\n      let first = min;\n      let time, count;\n      if (hasWeekday) {\n        first = +adapter.startOf(first, 'isoWeek', weekday);\n      }\n      first = +adapter.startOf(first, hasWeekday ? 'day' : minor);\n      if (adapter.diff(max, min, minor) > 100000 * stepSize) {\n        throw new Error(min + ' and ' + max + ' are too far apart with stepSize of ' + stepSize + ' ' + minor);\n      }\n      const timestamps = options.ticks.source === 'data' && me.getDataTimestamps();\n      for (time = first, count = 0; time < max; time = +adapter.add(time, stepSize, minor), count++) {\n        addTick(ticks, time, timestamps);\n      }\n      if (time === max || options.bounds === 'ticks' || count === 1) {\n        addTick(ticks, time, timestamps);\n      }\n      return Object.keys(ticks).sort((a, b) => a - b).map(x => +x);\n    }\n    getLabelForValue(value) {\n      const me = this;\n      const adapter = me._adapter;\n      const timeOpts = me.options.time;\n      if (timeOpts.tooltipFormat) {\n        return adapter.format(value, timeOpts.tooltipFormat);\n      }\n      return adapter.format(value, timeOpts.displayFormats.datetime);\n    }\n    _tickFormatFunction(time, index, ticks, format) {\n      const me = this;\n      const options = me.options;\n      const formats = options.time.displayFormats;\n      const unit = me._unit;\n      const majorUnit = me._majorUnit;\n      const minorFormat = unit && formats[unit];\n      const majorFormat = majorUnit && formats[majorUnit];\n      const tick = ticks[index];\n      const major = majorUnit && majorFormat && tick && tick.major;\n      const label = me._adapter.format(time, format || (major ? majorFormat : minorFormat));\n      const formatter = options.ticks.callback;\n      return formatter ? callback(formatter, [label, index, ticks], me) : label;\n    }\n    generateTickLabels(ticks) {\n      let i, ilen, tick;\n      for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n        tick = ticks[i];\n        tick.label = this._tickFormatFunction(tick.value, i, ticks);\n      }\n    }\n    getDecimalForValue(value) {\n      const me = this;\n      return value === null ? NaN : (value - me.min) / (me.max - me.min);\n    }\n    getPixelForValue(value) {\n      const me = this;\n      const offsets = me._offsets;\n      const pos = me.getDecimalForValue(value);\n      return me.getPixelForDecimal((offsets.start + pos) * offsets.factor);\n    }\n    getValueForPixel(pixel) {\n      const me = this;\n      const offsets = me._offsets;\n      const pos = me.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n      return me.min + pos * (me.max - me.min);\n    }\n    _getLabelSize(label) {\n      const me = this;\n      const ticksOpts = me.options.ticks;\n      const tickLabelWidth = me.ctx.measureText(label).width;\n      const angle = toRadians(me.isHorizontal() ? ticksOpts.maxRotation : ticksOpts.minRotation);\n      const cosRotation = Math.cos(angle);\n      const sinRotation = Math.sin(angle);\n      const tickFontSize = me._resolveTickFontOptions(0).size;\n      return {\n        w: tickLabelWidth * cosRotation + tickFontSize * sinRotation,\n        h: tickLabelWidth * sinRotation + tickFontSize * cosRotation\n      };\n    }\n    _getLabelCapacity(exampleTime) {\n      const me = this;\n      const timeOpts = me.options.time;\n      const displayFormats = timeOpts.displayFormats;\n      const format = displayFormats[timeOpts.unit] || displayFormats.millisecond;\n      const exampleLabel = me._tickFormatFunction(exampleTime, 0, ticksFromTimestamps(me, [exampleTime], me._majorUnit), format);\n      const size = me._getLabelSize(exampleLabel);\n      const capacity = Math.floor(me.isHorizontal() ? me.width / size.w : me.height / size.h) - 1;\n      return capacity > 0 ? capacity : 1;\n    }\n    getDataTimestamps() {\n      const me = this;\n      let timestamps = me._cache.data || [];\n      let i, ilen;\n      if (timestamps.length) {\n        return timestamps;\n      }\n      const metas = me.getMatchingVisibleMetas();\n      if (me._normalized && metas.length) {\n        return me._cache.data = metas[0].controller.getAllParsedValues(me);\n      }\n      for (i = 0, ilen = metas.length; i < ilen; ++i) {\n        timestamps = timestamps.concat(metas[i].controller.getAllParsedValues(me));\n      }\n      return me._cache.data = me.normalize(timestamps);\n    }\n    getLabelTimestamps() {\n      const me = this;\n      const timestamps = me._cache.labels || [];\n      let i, ilen;\n      if (timestamps.length) {\n        return timestamps;\n      }\n      const labels = me.getLabels();\n      for (i = 0, ilen = labels.length; i < ilen; ++i) {\n        timestamps.push(parse(me, labels[i]));\n      }\n      return me._cache.labels = me._normalized ? timestamps : me.normalize(timestamps);\n    }\n    normalize(values) {\n      return _arrayUnique(values.sort(sorter));\n    }\n  }\n  TimeScale.id = 'time';\n  TimeScale.defaults = {\n    bounds: 'data',\n    adapters: {},\n    time: {\n      parser: false,\n      unit: false,\n      round: false,\n      isoWeekday: false,\n      minUnit: 'millisecond',\n      displayFormats: {}\n    },\n    ticks: {\n      source: 'auto',\n      major: {\n        enabled: false\n      }\n    }\n  };\n  function interpolate(table, val, reverse) {\n    let prevSource, nextSource, prevTarget, nextTarget;\n    if (reverse) {\n      prevSource = Math.floor(val);\n      nextSource = Math.ceil(val);\n      prevTarget = table[prevSource];\n      nextTarget = table[nextSource];\n    } else {\n      const result = _lookup(table, val);\n      prevTarget = result.lo;\n      nextTarget = result.hi;\n      prevSource = table[prevTarget];\n      nextSource = table[nextTarget];\n    }\n    const span = nextSource - prevSource;\n    return span ? prevTarget + (nextTarget - prevTarget) * (val - prevSource) / span : prevTarget;\n  }\n  class TimeSeriesScale extends TimeScale {\n    constructor(props) {\n      super(props);\n      this._table = [];\n      this._maxIndex = undefined;\n    }\n    initOffsets() {\n      const me = this;\n      const timestamps = me._getTimestampsForTable();\n      me._table = me.buildLookupTable(timestamps);\n      me._maxIndex = me._table.length - 1;\n      super.initOffsets(timestamps);\n    }\n    buildLookupTable(timestamps) {\n      const me = this;\n      const {\n        min,\n        max\n      } = me;\n      if (!timestamps.length) {\n        return [{\n          time: min,\n          pos: 0\n        }, {\n          time: max,\n          pos: 1\n        }];\n      }\n      const items = [min];\n      let i, ilen, curr;\n      for (i = 0, ilen = timestamps.length; i < ilen; ++i) {\n        curr = timestamps[i];\n        if (curr > min && curr < max) {\n          items.push(curr);\n        }\n      }\n      items.push(max);\n      return items;\n    }\n    _getTimestampsForTable() {\n      const me = this;\n      let timestamps = me._cache.all || [];\n      if (timestamps.length) {\n        return timestamps;\n      }\n      const data = me.getDataTimestamps();\n      const label = me.getLabelTimestamps();\n      if (data.length && label.length) {\n        timestamps = me.normalize(data.concat(label));\n      } else {\n        timestamps = data.length ? data : label;\n      }\n      timestamps = me._cache.all = timestamps;\n      return timestamps;\n    }\n    getPixelForValue(value, index) {\n      const me = this;\n      const offsets = me._offsets;\n      const pos = me._normalized && me._maxIndex > 0 && !isNullOrUndef(index) ? index / me._maxIndex : me.getDecimalForValue(value);\n      return me.getPixelForDecimal((offsets.start + pos) * offsets.factor);\n    }\n    getDecimalForValue(value) {\n      return interpolate(this._table, value) / this._maxIndex;\n    }\n    getValueForPixel(pixel) {\n      const me = this;\n      const offsets = me._offsets;\n      const decimal = me.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n      return interpolate(me._table, decimal * this._maxIndex, true);\n    }\n  }\n  TimeSeriesScale.id = 'timeseries';\n  TimeSeriesScale.defaults = TimeScale.defaults;\n  var scales = /*#__PURE__*/Object.freeze({\n    __proto__: null,\n    CategoryScale: CategoryScale,\n    LinearScale: LinearScale,\n    LogarithmicScale: LogarithmicScale,\n    RadialLinearScale: RadialLinearScale,\n    TimeScale: TimeScale,\n    TimeSeriesScale: TimeSeriesScale\n  });\n  Chart.register(controllers, scales, elements, plugins);\n  Chart.helpers = {\n    ...helpers\n  };\n  Chart._adapters = _adapters;\n  Chart.Animation = Animation;\n  Chart.Animations = Animations;\n  Chart.animator = animator;\n  Chart.controllers = registry.controllers.items;\n  Chart.DatasetController = DatasetController;\n  Chart.Element = Element;\n  Chart.elements = elements;\n  Chart.Interaction = Interaction;\n  Chart.layouts = layouts;\n  Chart.platforms = platforms;\n  Chart.Scale = Scale;\n  Chart.Ticks = Ticks;\n  Object.assign(Chart, controllers, scales, elements, plugins, platforms);\n  Chart.Chart = Chart;\n  if (typeof window !== 'undefined') {\n    window.Chart = Chart;\n  }\n  return Chart;\n});","map":{"version":3,"names":["global","factory","exports","module","define","amd","globalThis","self","Chart","fontString","pixelSize","fontStyle","fontFamily","requestAnimFrame","window","callback","requestAnimationFrame","throttled","fn","thisArg","updateFn","updateArgs","args","Array","prototype","slice","call","ticking","_len","arguments","length","rest","_key","apply","debounce","delay","timeout","clearTimeout","setTimeout","_toLeftRightCenter","align","_alignStartEnd","start","end","_textX","left","right","Animator","constructor","_request","_charts","Map","_running","_lastDate","undefined","_notify","chart","anims","date","type","callbacks","listeners","numSteps","duration","forEach","initial","currentStep","Math","min","_refresh","me","_update","Date","now","remaining","running","items","i","draw","item","_active","_total","tick","pop","_getAnims","charts","get","complete","progress","set","listen","event","cb","push","add","has","reduce","acc","cur","max","_duration","stop","cancel","remove","delete","animator","map","A","B","C","D","E","F","a","b","c","d","e","f","hex","h1","h2","eq","isShort","v","r","g","hexParse","str","len","ret","hexString","round","lim","l","h","p2b","n2b","b2n","n2p","RGB_RE","rgbParse","m","exec","rgbString","HUE_RE","hsl2rgbn","s","n","k","hsv2rgbn","hwb2rgbn","w","rgb","rgb2hsl","range","calln","isArray","hsl2rgb","hwb2rgb","hsv2rgb","hue","hueParse","p1","p2","rotate","deg","hslString","map$1","x","Z","Y","X","W","V","U","T","S","R","Q","P","O","N","M","L","K","G","H","I","J","names","OiceXe","antiquewEte","aqua","aquamarRe","azuY","beige","bisque","black","blanKedOmond","Xe","XeviTet","bPwn","burlywood","caMtXe","KartYuse","KocTate","cSO","cSnflowerXe","cSnsilk","crimson","cyan","xXe","xcyan","xgTMnPd","xWay","xgYF","xgYy","xkhaki","xmagFta","xTivegYF","xSange","xScEd","xYd","xsOmon","xsHgYF","xUXe","xUWay","xUgYy","xQe","xviTet","dAppRk","dApskyXe","dimWay","dimgYy","dodgerXe","fiYbrick","flSOwEte","foYstWAn","fuKsia","gaRsbSo","ghostwEte","gTd","gTMnPd","Way","gYF","gYFLw","gYy","honeyMw","hotpRk","RdianYd","Rdigo","ivSy","khaki","lavFMr","lavFMrXsh","lawngYF","NmoncEffon","ZXe","ZcSO","Zcyan","ZgTMnPdLw","ZWay","ZgYF","ZgYy","ZpRk","ZsOmon","ZsHgYF","ZskyXe","ZUWay","ZUgYy","ZstAlXe","ZLw","lime","limegYF","lRF","magFta","maPon","VaquamarRe","VXe","VScEd","VpurpN","VsHgYF","VUXe","VsprRggYF","VQe","VviTetYd","midnightXe","mRtcYam","mistyPse","moccasR","navajowEte","navy","Tdlace","Tive","TivedBb","Sange","SangeYd","ScEd","pOegTMnPd","pOegYF","pOeQe","pOeviTetYd","papayawEp","pHKpuff","peru","pRk","plum","powMrXe","purpN","YbeccapurpN","Yd","Psybrown","PyOXe","saddNbPwn","sOmon","sandybPwn","sHgYF","sHshell","siFna","silver","skyXe","UXe","UWay","UgYy","snow","sprRggYF","stAlXe","tan","teO","tEstN","tomato","Qe","viTet","JHt","wEte","wEtesmoke","Lw","LwgYF","unpack","unpacked","keys","Object","tkeys","j","ok","nk","replace","parseInt","names$1","nameParse","transparent","toLowerCase","modHSL","ratio","tmp","clone$1","proto","assign","fromObject","input","functionParse","charAt","Color","_rgb","_valid","valid","obj","mix","color","weight","c1","c2","w2","p","w1","clone","alpha","clearer","greyscale","val","opaquer","negate","lighten","darken","saturate","desaturate","index_esm","isPatternOrGradient","value","CanvasGradient","CanvasPattern","getHoverColor","noop","uid","id","isNullOrUndef","toString","substr","isObject","isNumberFinite","Number","isFinite","finiteOrDefault","defaultValue","valueOrDefault","toPercentage","dimension","endsWith","parseFloat","toDimension","each","loopable","reverse","_elementsEqual","a0","a1","ilen","v0","v1","datasetIndex","index","source","target","create","klen","isValidKey","key","indexOf","_merger","options","tval","sval","merge","sources","merger","mergeIf","_mergerIf","hasOwnProperty","_deprecated","scope","previous","current","console","warn","emptyString","dot","indexOfDotOrLength","idx","resolveObjectKey","pos","_capitalize","toUpperCase","defined","isFunction","setsEqual","size","overrides","descriptors","getScope$1","node","split","root","values","Defaults","_descriptors","animation","backgroundColor","borderColor","datasets","devicePixelRatio","context","platform","getDevicePixelRatio","elements","events","font","family","style","lineHeight","hover","hoverBackgroundColor","ctx","hoverBorderColor","hoverColor","indexAxis","interaction","mode","intersect","maintainAspectRatio","onHover","onClick","parsing","plugins","responsive","scale","scales","showLine","describe","override","route","name","targetScope","targetName","scopeObject","targetScopeObject","privateName","defineProperties","writable","enumerable","local","defaults","_scriptable","startsWith","_indexable","_fallback","PI","TAU","PITAU","INFINITY","POSITIVE_INFINITY","RAD_PER_DEG","HALF_PI","QUARTER_PI","TWO_THIRDS_PI","log10","sign","niceNum","niceRange","pow","floor","fraction","niceFraction","_factorize","result","sqrt","sort","isNumber","isNaN","almostEquals","y","epsilon","abs","almostWhole","rounded","_setMinAndMaxByKey","array","property","toRadians","degrees","toDegrees","radians","_decimalPlaces","getAngleFromPoint","centrePoint","anglePoint","distanceFromXCenter","distanceFromYCenter","radialDistanceFromCenter","angle","atan2","distance","distanceBetweenPoints","pt1","pt2","_angleDiff","_normalizeAngle","_angleBetween","sameAngleIsFullCircle","angleToStart","angleToEnd","startToAngle","endToAngle","_limitValue","_int16Range","toFontString","_measureText","data","gc","longest","string","textWidth","measureText","width","_longestText","arrayOfThings","cache","garbageCollect","save","jlen","thing","nestedThing","restore","gcLen","splice","_alignPixel","pixel","currentDevicePixelRatio","halfWidth","clearCanvas","canvas","getContext","resetTransform","clearRect","height","drawPoint","xOffset","yOffset","cornerRadius","pointStyle","rotation","radius","rad","translate","drawImage","beginPath","arc","closePath","moveTo","sin","cos","lineTo","SQRT1_2","rect","fill","borderWidth","stroke","_isPointInArea","point","area","margin","top","bottom","clipArea","clip","unclipArea","_steppedLineTo","flip","midpoint","_bezierCurveTo","bezierCurveTo","cp1x","cp2x","cp1y","cp2y","renderText","text","opts","lines","strokeWidth","strokeColor","line","translation","fillStyle","textAlign","textBaseline","strokeStyle","lineWidth","strokeText","maxWidth","fillText","strikethrough","underline","metrics","actualBoundingBoxLeft","actualBoundingBoxRight","actualBoundingBoxAscent","actualBoundingBoxDescent","yDecoration","decorationWidth","addRoundedRectPath","topLeft","bottomLeft","bottomRight","topRight","_lookup","table","cmp","hi","lo","mid","_lookupByKey","_rlookupByKey","_filterBetween","arrayEvents","listenArrayEvents","listener","_chartjs","defineProperty","configurable","method","base","_len2","_key2","res","object","unlistenArrayEvents","stub","_arrayUnique","Set","_getParentNode","domNode","parent","parentNode","host","parseMaxStyle","styleValue","parentProperty","valueInPixels","getComputedStyle","element","getStyle","el","getPropertyValue","positions","getPositionedStyle","styles","suffix","useOffsetPos","shadowRoot","getCanvasPosition","evt","native","touches","offsetX","offsetY","box","getBoundingClientRect","clientX","clientY","getRelativePosition$1","borderBox","boxSizing","paddings","borders","getContainerSize","maxHeight","container","clientWidth","clientHeight","containerStyle","containerBorder","containerPadding","round1","getMaximumSize","bbWidth","bbHeight","aspectRatio","margins","containerSize","retinaScale","forceRatio","forceStyle","pixelRatio","deviceHeight","deviceWidth","setTransform","supportsEventListenerOptions","passiveSupported","passive","addEventListener","removeEventListener","readUsedSize","matches","match","getRelativePosition","evaluateAllVisibleItems","handler","metasets","getSortedVisibleDatasetMetas","skip","binarySearch","metaset","axis","controller","_sorted","iScale","_cachedMeta","lookupMethod","_reversePixels","_sharedOptions","getRange","optimizedEvaluateItems","position","getDistanceMetricForAxis","useX","useY","deltaX","deltaY","getIntersectItems","useFinalPosition","chartArea","_minPadding","evaluationFunc","inRange","getNearestItems","distanceMetric","minDistance","center","getCenterPoint","getAxisItems","rangeMethod","intersectsItem","Interaction","modes","meta","dataset","getDatasetMeta","nearest","LINE_HEIGHT","RegExp","FONT_STYLE","toLineHeight","numberOrZero$1","_readValueToProps","props","objProps","read","prop","toTRBL","toTRBLCorners","toPadding","toFont","fallback","resolve","inputs","info","cacheable","_addGrace","minmax","grace","STATIC_POSITIONS","filterByPosition","filter","filterDynamicPositionByAxis","sortByWeight","wrapBoxes","boxes","layoutBoxes","horizontal","isHorizontal","setLayoutDims","layouts","params","layout","fullSize","availableWidth","hBoxMaxHeight","vBoxMaxWidth","availableHeight","buildLayoutBoxes","wrap","centerHorizontal","centerVertical","leftAndTop","concat","rightAndBottom","vertical","getCombinedMax","maxPadding","updateMaxPadding","boxPadding","updateDims","getPadding","newWidth","outerWidth","newHeight","outerHeight","widthChanged","heightChanged","same","other","handleMaxPadding","updatePos","change","getMargins","marginForPositions","fitBoxes","refitBoxes","refit","changed","update","placeBoxes","userPadding","padding","addBox","_layers","z","removeBox","layoutItem","configure","minPadding","verticalBoxes","horizontalBoxes","beforeLayout","visibleVerticalBoxCount","total","display","freeze","BasePlatform","acquireContext","releaseContext","isAttached","BasicPlatform","EXPANDO_KEY","EVENT_TYPES","touchstart","touchmove","touchend","pointerenter","pointerdown","pointermove","pointerup","pointerleave","pointerout","isNullOrEmpty","initCanvas","renderHeight","getAttribute","renderWidth","displayWidth","displayHeight","eventListenerOptions","addListener","removeListener","fromNativeEvent","createAttachObserver","observer","MutationObserver","entries","entry","addedNodes","added","observe","document","childList","subtree","createDetachObserver","removedNodes","drpListeningCharts","oldDevicePixelRatio","onWindowResize","dpr","resize","listenDevicePixelRatioChanges","unlistenDevicePixelRatioChanges","createResizeObserver","ResizeObserver","contentRect","releaseObserver","disconnect","createProxyAndListen","proxy","DomPlatform","removeAttribute","setAttribute","proxies","$proxies","handlers","attach","detach","platforms","__proto__","atEdge","t","elasticIn","elasticOut","effects","linear","easeInQuad","easeOutQuad","easeInOutQuad","easeInCubic","easeOutCubic","easeInOutCubic","easeInQuart","easeOutQuart","easeInOutQuart","easeInQuint","easeOutQuint","easeInOutQuint","easeInSine","easeOutSine","easeInOutSine","easeInExpo","easeOutExpo","easeInOutExpo","easeInCirc","easeOutCirc","easeInOutCirc","easeInElastic","easeOutElastic","easeInOutElastic","easeInBack","easeOutBack","easeInOutBack","easeInBounce","easeOutBounce","easeInOutBounce","interpolators","boolean","from","to","factor","c0","number","Animation","cfg","currentValue","_fn","_easing","easing","_start","_loop","loop","_target","_prop","_from","_to","_promises","active","elapsed","remain","wait","promises","Promise","rej","resolved","numbers","colors","animationOptions","properties","show","animations","visible","hide","Animations","config","_chart","_properties","animatedProps","getOwnPropertyNames","option","_animateOptions","newOptions","resolveTargetOptions","_createAnimations","$shared","awaitAll","$animations","then","anim","all","scaleClip","allowedOverflow","defaultClip","xScale","yScale","toClip","getSortedDatasetIndices","filterVisible","_getSortedDatasetMetas","applyStack","stack","dsIndex","singleMode","otherValue","convertObjectDataToArray","adata","isStacked","stacked","getStackKey","indexScale","valueScale","getUserBounds","minDefined","maxDefined","NEGATIVE_INFINITY","getOrCreateStack","stacks","stackKey","indexValue","subStack","getLastIndexInStack","vScale","positive","getMatchingVisibleMetas","updateStacks","parsed","_stacks","iAxis","vAxis","itemStacks","_top","_bottom","getFirstScaleId","shift","createDatasetContext","createDataContext","dataIndex","raw","clearStacks","_parsed","isDirectUpdateMode","cloneIfNotShared","cached","shared","DatasetController","_ctx","_cachedDataOpts","getMeta","_type","_parsing","_data","_objectData","_drawStart","_drawCount","enableOptionSharing","$context","_syncList","initialize","linkScales","_stacked","addElements","updateIndex","getDataset","chooseId","xid","xAxisID","yid","yAxisID","rid","rAxisID","iid","iAxisID","vid","vAxisID","getScaleForId","rScale","scaleID","_getOtherScale","reset","_destroy","_dataCheck","isExtensible","datasetElementType","buildOrUpdateElements","resetNewElements","stackChanged","oldStacked","_resyncElements","scopeKeys","datasetScopeKeys","scopes","getOptionScopes","createResolver","parse","count","sorted","prev","parseArrayData","parseObjectData","parsePrimitiveData","isNotInOrderComparedToPrev","labels","getLabels","singleScale","xAxisKey","yAxisKey","getParsed","getDataElement","updateRangeFromParsed","parsedValue","NaN","getMinMax","canStack","otherScale","otherMin","otherMax","_skip","getAllParsedValues","getMaxOverflow","getLabelAndValue","label","getLabelForValue","_clip","resolveDatasetElementOptions","resolveDataElementOptions","_resolveElementOptions","dataElementType","elementType","cacheKey","sharing","datasetElementScopeKeys","prefixes","resolveNamedOptions","_resolveAnimations","transition","datasetAnimationScopeKeys","_cacheable","getSharedOptions","includeOptions","sharedOptions","_animationsDisabled","updateElement","updateSharedOptions","_setStyle","removeHoverStyle","setHoverStyle","_removeDatasetHoverStyle","_setDatasetHoverStyle","arg1","arg2","numMeta","numData","_insertElements","_removeElements","move","arr","updateElements","removed","_onDataPush","_onDataPop","_onDataShift","_onDataSplice","_onDataUnshift","Element","tooltipPosition","getProps","hasValue","final","defaultRoutes","intlCache","getNumberFormat","locale","JSON","stringify","formatter","Intl","NumberFormat","formatNumber","num","format","formatters","numeric","tickValue","ticks","notation","delta","maxTick","calculateDelta","logDelta","numDecimal","minimumFractionDigits","maximumFractionDigits","logarithmic","Ticks","offset","beginAtZero","bounds","grid","drawBorder","drawOnChartArea","drawTicks","tickLength","tickWidth","tickColor","borderDash","borderDashOffset","title","minRotation","maxRotation","mirror","textStrokeWidth","textStrokeColor","autoSkip","autoSkipPadding","labelOffset","minor","major","crossAlign","showLabelBackdrop","backdropColor","backdropPadding","tickOpts","ticksLimit","maxTicksLimit","determineMaxTicks","majorIndices","enabled","getMajorIndices","numMajorIndices","first","last","newTicks","skipMajors","spacing","calculateSpacing","avgMajorSpacing","_tickSize","maxScale","_length","maxChart","_maxLength","evenMajorSpacing","getEvenSpacing","factors","next","ceil","majorStart","majorEnd","diff","reverseAlign","offsetFromEdge","edge","sample","numItems","increment","getPixelForGridLine","offsetGridLines","validIndex","_startPixel","_endPixel","lineValue","getPixelForTick","caches","getTickMarkLength","getTitleHeight","createScaleContext","createTickContext","titleAlign","titleArgs","titleX","titleY","Scale","_margins","paddingTop","paddingBottom","paddingLeft","paddingRight","labelRotation","_range","_gridLineItems","_labelItems","_labelSizes","_longestTextCache","_userMax","_userMin","_suggestedMax","_suggestedMin","_ticksLength","_borderValue","_cache","_dataLimitsCached","init","setContext","suggestedMin","suggestedMax","metas","getTicks","xLabels","yLabels","beforeUpdate","sampleSize","beforeSetDimensions","setDimensions","afterSetDimensions","beforeDataLimits","determineDataLimits","afterDataLimits","beforeBuildTicks","buildTicks","afterBuildTicks","samplingEnabled","_convertTicksToLabels","beforeCalculateLabelRotation","calculateLabelRotation","afterCalculateLabelRotation","beforeFit","fit","afterFit","afterUpdate","reversePixels","startPixel","endPixel","_alignToPixels","alignToPixels","_callHooks","notifyPlugins","beforeTickToLabelConversion","generateTickLabels","afterTickToLabelConversion","numTicks","maxLabelDiagonal","_isVisible","labelSizes","_getLabelSizes","maxLabelWidth","widest","maxLabelHeight","highest","asin","minSize","titleOpts","gridOpts","titleHeight","tickPadding","angleRadians","labelHeight","labelWidth","_calculatePadding","_handleMargins","isRotated","labelsBelowTicks","offsetLeft","offsetRight","isFullSize","_computeLabelSizes","widths","heights","widestLabelSize","highestLabelSize","tickFont","nestedLabel","_resolveTickFontOptions","valueAt","getPixelForValue","getValueForPixel","getPixelForDecimal","decimal","getDecimalForPixel","getBasePixel","getBaseValue","optionTicks","rot","_computeGridLineItems","ticksLength","tl","borderOpts","axisWidth","axisHalfWidth","alignBorderValue","borderValue","alignedLineValue","tx1","ty1","tx2","ty2","x1","y1","x2","y2","positionAxisID","optsAtIndex","lineColor","tickBorderDash","tickBorderDashOffset","_computeLabelItems","tickAndPadding","hTickAndPadding","lineCount","textOffset","_getXAxisLabelAlignment","_getYAxisLabelAlignment","halfCount","backdrop","labelPadding","_computeLabelArea","drawBackground","fillRect","getLineWidthForValue","findIndex","drawGrid","drawLine","setLineDash","lineDashOffset","lastLineWidth","drawLabels","drawTitle","tz","gz","axisID","_maxDigits","fontSize","_createResolver","rootScopes","getTarget","_resolve","Symbol","toStringTag","_scopes","_rootScopes","_getTarget","Proxy","deleteProperty","_keys","_cached","_resolveWithPrefixes","getOwnPropertyDescriptor","Reflect","getPrototypeOf","getKeysFromAllScopes","includes","ownKeys","storage","_storage","_attachContext","subProxy","descriptorDefaults","_proxy","_context","_subProxy","_stack","receiver","_resolveWithContext","allKeys","scriptable","indexable","_allKeys","isScriptable","isIndexable","readKey","prefix","needsSubResolver","_resolveScriptable","_resolveArray","Error","join","createSubResolver","resolver","resolveFallback","getScope","addScopes","parentScopes","parentFallback","allScopes","addScopesFromKey","subGetTarget","resolveKeysFromAllScopes","EPSILON","getPoint","points","getValueAxis","splineCurve","firstPoint","middlePoint","afterPoint","d01","d12","s01","s12","fa","fb","monotoneAdjust","deltaK","mK","pointsLen","alphaK","betaK","tauK","squaredMagnitude","pointCurrent","pointAfter","monotoneCompute","valueAxis","pointBefore","iPixel","vPixel","splineCurveMonotone","slopeDelta","capControlPoint","pt","capBezierPoints","inArea","inAreaPrev","inAreaNext","_updateBezierControlPoints","controlPoints","spanGaps","cubicInterpolationMode","tension","_pointInLine","_steppedInterpolation","_bezierInterpolation","cp1","cp2","getRightToLeftAdapter","rectX","setWidth","xPlus","leftForLtr","itemWidth","getLeftToRightAdapter","_itemWidth","getRtlAdapter","rtl","overrideTextDirection","direction","original","getPropertyPriority","setProperty","prevTextDirection","restoreTextDirection","propertyFn","between","compare","normalize","normalizeSegment","_ref","getSegment","segment","startBound","endBound","_boundSegment","inside","subStart","prevValue","startIsBefore","endIsBefore","shouldStart","shouldStop","_boundSegments","segments","sub","findStartAndEnd","solidSegments","_computeSegments","segmentOptions","splitByStyles","completeLoop","_fullLoop","doSplitByStyles","prevStyle","readStyle","p0","styleChanged","borderCapStyle","borderJoinStyle","helpers","easingEffects","TypedRegistry","isForType","isPrototypeOf","register","parentScope","isIChartComponent","registerDefaults","unregister","itemDefaults","routeDefaults","routes","propertyParts","sourceName","sourceScope","parts","Registry","controllers","_typedRegistries","_len3","_key3","_each","_len4","_key4","addControllers","_len5","_key5","_len6","_key6","addPlugins","_len7","_key7","addScales","_len8","_key8","getController","_get","getElement","getPlugin","getScale","removeControllers","_len9","_key9","removeElements","_len10","_key10","removePlugins","_len11","_key11","removeScales","_len12","_key12","typedRegistry","arg","reg","_getRegistryForType","_exec","itemReg","registry","component","camelMethod","PluginService","_init","notify","hook","_createDescriptors","descriptor","plugin","cancelable","invalidate","_oldCache","_notifyStateChanges","allPlugins","createDescriptors","previousDescriptors","some","getOpts","pluginOpts","pluginScopeKeys","getIndexAxis","datasetDefaults","datasetOptions","getAxisFromDefaultScaleID","getDefaultScaleIDFromAxis","axisFromPosition","determineAxis","scaleOptions","mergeScaleConfig","chartDefaults","configScales","chartIndexAxis","firstIDs","scaleConf","defaultId","defaultScaleOptions","defaultID","initOptions","initData","initConfig","keyCache","keysCached","cachedKeys","generate","addIfFound","Config","_config","_scopeCache","_resolverCache","clearCache","clear","datasetType","additionalOptionScopes","_cachedScopes","mainScope","resetCache","keyLists","chartOptionScopes","subPrefixes","getResolver","needContext","subResolver","resolverCache","version","KNOWN_POSITIONS","positionIsHorizontal","compare2Level","l1","l2","onAnimationsComplete","onComplete","onAnimationProgress","onProgress","isDomSupported","getCanvas","getElementById","instances","getChart","initialCanvas","existingChart","_initializePlatform","_options","_aspectRatio","_metasets","_lastEvent","_listeners","_responsiveListeners","_sortedMetasets","_plugins","_hiddenIndices","attached","_doResize","resizeDelay","error","_initialize","bindEvents","OffscreenCanvas","_resize","_resizeBeforeDraw","newSize","newRatio","onResize","render","ensureScalesHaveIDs","scalesOptions","axisOptions","buildOrUpdateScales","scaleOpts","updated","isRadial","dposition","dtype","scaleType","scaleClass","hasUpdated","_updateMetasets","_destroyDatasetMeta","_removeUnreferencedMetasets","_dataset","buildOrUpdateControllers","newControllers","order","isDatasetVisible","ControllerClass","_resetElements","animsDisabled","existingEvents","newEvents","unbindEvents","_updateLayout","_updateDatasets","_eventHandler","noArea","_idx","_updateDataset","layers","_drawDatasets","_drawDataset","getElementsAtEventForMode","hidden","getVisibleDatasetCount","setDatasetVisibility","toggleDataVisibility","getDataVisibility","_updateDatasetVisibility","destroy","toBase64Image","toDataURL","bindUserEvents","bindResponsiveEvents","_add","_remove","detached","updateHoverStyle","getActiveElements","setActiveElements","activeElements","lastActive","_ref2","_updateHoverStyles","replay","hoverOptions","deactivated","activated","eventFilter","_handleEvent","lastEvent","invalidatePlugins","abstract","DateAdapter","formats","timestamp","amount","unit","startOf","weekday","endOf","members","_adapters","_date","getAllScaleValues","$bar","computeMinSampleSize","curr","updateMinAndPrev","computeFitCategoryTraits","ruler","stackCount","thickness","barThickness","categoryPercentage","barPercentage","chunk","pixels","computeFlexCategoryTraits","percent","parseFloatBar","startValue","endValue","barStart","barEnd","_custom","parseValue","parseArrayOrPrimitive","isFloatBar","custom","BarController","iAxisKey","vAxisKey","bars","_getRuler","firstOpts","vpixels","head","_calculateBarValuePixels","ipixels","_calculateBarIndexPixels","enableBorderRadius","_getStacks","_getStackCount","_getStackIndex","grouped","baseValue","minBarLength","floating","actualBase","halfGrid","skipNull","maxBarThickness","Infinity","stackIndex","rects","_index_","_value_","BubbleController","tooltip","getRatioAndOffset","circumference","cutout","ratioX","ratioY","startAngle","endAngle","startX","startY","endX","endY","calcMax","calcMin","maxX","maxY","minX","minY","DoughnutController","innerRadius","outerRadius","_getRotation","_getCircumference","_getRotationExtents","arcs","getMaxBorderWidth","getMaxOffset","maxSize","chartWeight","_getRingWeight","maxRadius","radiusLength","_getVisibleDatasetWeightTotal","calculateTotal","_getRingWeightOffset","_circumference","animateRotate","calculateCircumference","animationOpts","centerX","centerY","animateScale","metaData","borderAlign","hoverBorderWidth","hoverOffset","ringWeightOffset","legend","generateLabels","legendItem","tooltipItem","dataLabel","formattedValue","LineController","animationsDisabled","getStartAndCountOfVisiblePoints","scaleRangesChanged","_decimated","animated","maxGapLength","directUpdate","prevParsed","nullData","border","lastPoint","updateControlPoints","pointCount","_scaleRanges","newRanges","xmin","xmax","ymin","ymax","PolarAreaController","_updateRadius","cutoutPercentage","xCenter","yCenter","datasetStartAngle","getIndexAngle","defaultAngle","countVisibleElements","_computeAngle","getDistanceFromCenterForValue","angleLines","circular","pointLabels","PieController","RadarController","pointPosition","getPointPositionForValue","ScatterController","clipArc","pixelMargin","angleMargin","toRadiusCorners","parseBorderRadius$1","angleDelta","o","borderRadius","halfThickness","innerLimit","computeOuterLimit","outerArcLimit","outerStart","outerEnd","innerStart","innerEnd","rThetaToXY","theta","pathArc","innerR","beta","angleOffset","outerStartAdjustedRadius","outerEndAdjustedRadius","outerStartAdjustedAngle","outerEndAdjustedAngle","innerStartAdjustedRadius","innerEndAdjustedRadius","innerStartAdjustedAngle","innerEndAdjustedAngle","pCenter","p4","p8","drawArc","fullCircles","drawFullCircleBorders","inner","lineJoin","ArcElement","chartX","chartY","betweenAngles","withinRadius","halfAngle","halfRadius","radiusOffset","setStyle","lineCap","getLineMethod","stepped","pathVars","paramsStart","paramsEnd","segmentStart","segmentEnd","outside","pathSegment","lineMethod","fastPathSegment","avgX","countX","prevX","lastY","pointIndex","drawX","truncX","_getSegmentMethod","useFastPath","_getInterpolationMethod","strokePathWithCache","path","_path","Path2D","strokePathDirect","segmentMethod","usePath2D","LineElement","_points","_segments","_pointsUpdated","interpolate","_interpolate","interpolated","inRange$1","hitRadius","PointElement","mouseX","mouseY","inXRange","inYRange","hoverRadius","getBarBounds","bar","half","parseBorderSkipped","borderSkipped","parseEdge","swap","startEnd","orig","v2","skipOrLimit","parseBorderWidth","maxW","maxH","parseBorderRadius","maxR","enableBorder","boundingRects","outer","skipX","skipY","skipBoth","hasRadius","addNormalRectPath","BarElement","addRectPath","lttbDecimation","samples","decimated","bucketWidth","sampledIndex","endIndex","maxAreaPoint","maxArea","nextA","avgY","avgRangeStart","avgRangeEnd","avgRangeLength","rangeOffs","rangeTo","pointAx","pointAy","minMaxDecimation","minIndex","maxIndex","startIndex","xMin","xMax","dx","lastIndex","intermediateIndex1","intermediateIndex2","cleanDecimatedDataset","cleanDecimatedData","getStartAndCountOfVisiblePointsSimplified","plugin_decimation","algorithm","beforeElementsUpdate","xAxis","getLineByIndex","parseFillOption","fillOption","decodeFill","computeLinearBoundary","simpleArc","computeCircularBoundary","computeBoundary","pointsFromSegments","boundary","linePoints","buildStackLine","sourcePoints","linesBelow","getLinesBelow","createBoundaryLine","addPointsBelow","isLineAndNotInHideAnimation","below","unshift","sourcePoint","postponed","findPoint","pointValue","firstValue","lastValue","resolveTarget","propagate","visited","clipY","getBounds","_getEdge","tpoints","targetSegments","tgt","subBounds","fillSources","fillSource","clipBounds","interpolatedLineTo","interpolatedPoint","_fill","src","lineLoop","targetLoop","doFill","above","drawfill","lineOpts","plugin_filler","afterDatasetsUpdate","_args","$filler","beforeDraw","drawTime","beforeDatasetsDraw","beforeDatasetDraw","getBoxSize","labelOpts","boxHeight","boxWidth","usePointStyle","itemHeight","itemsEqual","Legend","_added","legendHitBoxes","_hoveredItem","doughnutMode","legendItems","columnSizes","lineWidths","buildLabels","labelFont","_computeTitleHeight","_fitRows","_fitCols","hitboxes","totalHeight","row","heightLimit","totalWidth","currentColWidth","currentColHeight","col","adjustHitBoxes","hitbox","_draw","defaultColor","rtlHelper","fontColor","halfFontSize","cursor","drawLegendBox","lineDash","drawOptions","SQRT2","yBoxTop","xBoxLeft","textDirection","realX","titleFont","titlePadding","topPaddingPlusHalfFontSize","_getLegendItemAt","hitBox","lh","handleEvent","isListened","hoveredItem","sameItem","onLeave","plugin_legend","_element","afterEvent","ci","Title","_padding","textSize","_drawArgs","fontOpts","createTitle","titleBlock","plugin_title","positioners","average","eventPosition","nearestElement","tp","pushOrConcat","toPush","splitNewlines","String","createTooltipItem","getTooltipSize","body","footer","bodyFont","footerFont","titleLineCount","footerLineCount","bodyLineItemCount","combinedBodyLength","bodyItem","before","after","beforeBody","afterBody","titleSpacing","titleMarginBottom","bodyLineHeight","displayColors","bodySpacing","footerMarginTop","footerSpacing","widthPadding","maxLineWidth","determineYAlign","doesNotFitWithAlign","xAlign","caret","caretSize","caretPadding","determineXAlign","yAlign","chartWidth","determineAlignment","alignX","alignY","paddingAndSize","getBackgroundPoint","alignment","radiusAndPadding","getAlignedX","getBeforeAfterBodyLines","createTooltipContext","tooltipItems","overrideCallbacks","Tooltip","opacity","_eventPosition","_size","_cachedAnimations","_tooltipItems","dataPoints","caretX","caretY","labelColors","labelPointStyles","labelTextColors","getTitle","beforeTitle","afterTitle","getBeforeBody","getBody","bodyItems","scoped","beforeLabel","afterLabel","getAfterBody","getFooter","beforeFooter","afterFooter","_createItems","itemSort","labelColor","labelPointStyle","labelTextColor","positionAndSize","backgroundPoint","external","drawCaret","tooltipPoint","caretPosition","getCaretPosition","x3","y3","ptX","ptY","titleColor","_drawColorBox","colorX","rtlColorX","yOffSet","colorY","multiKeyBackground","outerX","innerX","strokeRect","drawBody","bodyAlign","xLinePadding","fillLineOfText","bodyAlignForCalculation","textColor","bodyColor","drawFooter","footerAlign","footerColor","tooltipSize","quadraticCurveTo","_updateAnimationTarget","animX","animY","hasTooltipContent","globalAlpha","_ref3","positionChanged","_positionChanged","plugin_tooltip","afterInit","afterDraw","labelCount","Decimation","Filler","addIfString","findOrAddLabel","lastIndexOf","CategoryScale","_startValue","_valueRange","generateTicks$1","generationOptions","dataRange","MIN_SPACING","step","precision","maxTicks","maxDigits","includeBounds","maxSpaces","rmin","rmax","countDefined","minSpacing","niceMin","niceMax","numSpaces","decimalPlaces","relativeLabelSize","_ref4","LinearScaleBase","_endValue","handleTickRangeOptions","setMin","setMax","minSign","maxSign","getTickLimit","stepSize","computeTickLimit","numericGeneratorOptions","LinearScale","isMajor","tickVal","generateTicks","endExp","endSignificand","exp","significand","lastTick","LogarithmicScale","_zero","getTickBackdropHeight","measureLabelSize","determineLimits","fitWithPointLabels","furthestLimits","furthestAngles","valueCount","getPointPosition","drawingArea","plFont","_pointLabels","hLimits","vLimits","_setReductions","_pointLabelItems","tickBackdropHeight","outerDistance","extra","pointLabelPosition","adjustPointPositionForLabelHeight","getTextAlignForAngle","drawPointLabels","pathRadiusLine","drawRadiusLine","gridLineOpts","numberOrZero","param","RadialLinearScale","setCenterPoint","largestPossibleRadius","radiusReductionLeft","radiusReductionRight","radiusReductionTop","radiusReductionBottom","leftMovement","rightMovement","topMovement","bottomMovement","maxRight","maxLeft","maxTop","maxBottom","angleMultiplier","scalingFactor","getValueForDistanceFromCenter","scaledDistance","distanceFromCenter","getBasePosition","getPointLabelPosition","animate","INTERVALS","millisecond","common","steps","second","minute","hour","day","week","month","quarter","year","UNITS","sorter","adapter","_adapter","parser","isoWeekday","_parseOpts","determineUnitForAutoTicks","minUnit","capacity","interval","MAX_SAFE_INTEGER","determineUnitForFormatting","determineMajorUnit","addTick","time","timestamps","setMajorTicks","majorUnit","ticksFromTimestamps","TimeScale","_unit","_majorUnit","_offsets","_normalized","adapters","displayFormats","normalized","_applyBounds","_getLabelBounds","getLabelTimestamps","timeOpts","_generate","_getLabelCapacity","initOffsets","getDecimalForValue","limit","hasWeekday","getDataTimestamps","tooltipFormat","datetime","_tickFormatFunction","minorFormat","majorFormat","offsets","_getLabelSize","ticksOpts","tickLabelWidth","cosRotation","sinRotation","tickFontSize","exampleTime","exampleLabel","prevSource","nextSource","prevTarget","nextTarget","span","TimeSeriesScale","_table","_maxIndex","_getTimestampsForTable","buildLookupTable"],"sources":["/Users/noopurnishikantzambare/Downloads/ROI Website/client/node_modules/chart.js/dist/chart.js"],"sourcesContent":["/*!\n * Chart.js v3.3.2\n * https://www.chartjs.org\n * (c) 2021 Chart.js Contributors\n * Released under the MIT License\n */\n(function (global, factory) {\ntypeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\ntypeof define === 'function' && define.amd ? define(factory) :\n(global = typeof globalThis !== 'undefined' ? globalThis : global || self, global.Chart = factory());\n}(this, (function () { 'use strict';\n\nfunction fontString(pixelSize, fontStyle, fontFamily) {\n  return fontStyle + ' ' + pixelSize + 'px ' + fontFamily;\n}\nconst requestAnimFrame = (function() {\n  if (typeof window === 'undefined') {\n    return function(callback) {\n      return callback();\n    };\n  }\n  return window.requestAnimationFrame;\n}());\nfunction throttled(fn, thisArg, updateFn) {\n  const updateArgs = updateFn || ((args) => Array.prototype.slice.call(args));\n  let ticking = false;\n  let args = [];\n  return function(...rest) {\n    args = updateArgs(rest);\n    if (!ticking) {\n      ticking = true;\n      requestAnimFrame.call(window, () => {\n        ticking = false;\n        fn.apply(thisArg, args);\n      });\n    }\n  };\n}\nfunction debounce(fn, delay) {\n  let timeout;\n  return function() {\n    if (delay) {\n      clearTimeout(timeout);\n      timeout = setTimeout(fn, delay);\n    } else {\n      fn();\n    }\n    return delay;\n  };\n}\nconst _toLeftRightCenter = (align) => align === 'start' ? 'left' : align === 'end' ? 'right' : 'center';\nconst _alignStartEnd = (align, start, end) => align === 'start' ? start : align === 'end' ? end : (start + end) / 2;\nconst _textX = (align, left, right) => align === 'right' ? right : align === 'center' ? (left + right) / 2 : left;\n\nclass Animator {\n  constructor() {\n    this._request = null;\n    this._charts = new Map();\n    this._running = false;\n    this._lastDate = undefined;\n  }\n  _notify(chart, anims, date, type) {\n    const callbacks = anims.listeners[type];\n    const numSteps = anims.duration;\n    callbacks.forEach(fn => fn({\n      chart,\n      initial: anims.initial,\n      numSteps,\n      currentStep: Math.min(date - anims.start, numSteps)\n    }));\n  }\n  _refresh() {\n    const me = this;\n    if (me._request) {\n      return;\n    }\n    me._running = true;\n    me._request = requestAnimFrame.call(window, () => {\n      me._update();\n      me._request = null;\n      if (me._running) {\n        me._refresh();\n      }\n    });\n  }\n  _update(date = Date.now()) {\n    const me = this;\n    let remaining = 0;\n    me._charts.forEach((anims, chart) => {\n      if (!anims.running || !anims.items.length) {\n        return;\n      }\n      const items = anims.items;\n      let i = items.length - 1;\n      let draw = false;\n      let item;\n      for (; i >= 0; --i) {\n        item = items[i];\n        if (item._active) {\n          if (item._total > anims.duration) {\n            anims.duration = item._total;\n          }\n          item.tick(date);\n          draw = true;\n        } else {\n          items[i] = items[items.length - 1];\n          items.pop();\n        }\n      }\n      if (draw) {\n        chart.draw();\n        me._notify(chart, anims, date, 'progress');\n      }\n      if (!items.length) {\n        anims.running = false;\n        me._notify(chart, anims, date, 'complete');\n        anims.initial = false;\n      }\n      remaining += items.length;\n    });\n    me._lastDate = date;\n    if (remaining === 0) {\n      me._running = false;\n    }\n  }\n  _getAnims(chart) {\n    const charts = this._charts;\n    let anims = charts.get(chart);\n    if (!anims) {\n      anims = {\n        running: false,\n        initial: true,\n        items: [],\n        listeners: {\n          complete: [],\n          progress: []\n        }\n      };\n      charts.set(chart, anims);\n    }\n    return anims;\n  }\n  listen(chart, event, cb) {\n    this._getAnims(chart).listeners[event].push(cb);\n  }\n  add(chart, items) {\n    if (!items || !items.length) {\n      return;\n    }\n    this._getAnims(chart).items.push(...items);\n  }\n  has(chart) {\n    return this._getAnims(chart).items.length > 0;\n  }\n  start(chart) {\n    const anims = this._charts.get(chart);\n    if (!anims) {\n      return;\n    }\n    anims.running = true;\n    anims.start = Date.now();\n    anims.duration = anims.items.reduce((acc, cur) => Math.max(acc, cur._duration), 0);\n    this._refresh();\n  }\n  running(chart) {\n    if (!this._running) {\n      return false;\n    }\n    const anims = this._charts.get(chart);\n    if (!anims || !anims.running || !anims.items.length) {\n      return false;\n    }\n    return true;\n  }\n  stop(chart) {\n    const anims = this._charts.get(chart);\n    if (!anims || !anims.items.length) {\n      return;\n    }\n    const items = anims.items;\n    let i = items.length - 1;\n    for (; i >= 0; --i) {\n      items[i].cancel();\n    }\n    anims.items = [];\n    this._notify(chart, anims, Date.now(), 'complete');\n  }\n  remove(chart) {\n    return this._charts.delete(chart);\n  }\n}\nvar animator = new Animator();\n\n/*!\n * @kurkle/color v0.1.9\n * https://github.com/kurkle/color#readme\n * (c) 2020 Jukka Kurkela\n * Released under the MIT License\n */\nconst map = {0: 0, 1: 1, 2: 2, 3: 3, 4: 4, 5: 5, 6: 6, 7: 7, 8: 8, 9: 9, A: 10, B: 11, C: 12, D: 13, E: 14, F: 15, a: 10, b: 11, c: 12, d: 13, e: 14, f: 15};\nconst hex = '0123456789ABCDEF';\nconst h1 = (b) => hex[b & 0xF];\nconst h2 = (b) => hex[(b & 0xF0) >> 4] + hex[b & 0xF];\nconst eq = (b) => (((b & 0xF0) >> 4) === (b & 0xF));\nfunction isShort(v) {\n\treturn eq(v.r) && eq(v.g) && eq(v.b) && eq(v.a);\n}\nfunction hexParse(str) {\n\tvar len = str.length;\n\tvar ret;\n\tif (str[0] === '#') {\n\t\tif (len === 4 || len === 5) {\n\t\t\tret = {\n\t\t\t\tr: 255 & map[str[1]] * 17,\n\t\t\t\tg: 255 & map[str[2]] * 17,\n\t\t\t\tb: 255 & map[str[3]] * 17,\n\t\t\t\ta: len === 5 ? map[str[4]] * 17 : 255\n\t\t\t};\n\t\t} else if (len === 7 || len === 9) {\n\t\t\tret = {\n\t\t\t\tr: map[str[1]] << 4 | map[str[2]],\n\t\t\t\tg: map[str[3]] << 4 | map[str[4]],\n\t\t\t\tb: map[str[5]] << 4 | map[str[6]],\n\t\t\t\ta: len === 9 ? (map[str[7]] << 4 | map[str[8]]) : 255\n\t\t\t};\n\t\t}\n\t}\n\treturn ret;\n}\nfunction hexString(v) {\n\tvar f = isShort(v) ? h1 : h2;\n\treturn v\n\t\t? '#' + f(v.r) + f(v.g) + f(v.b) + (v.a < 255 ? f(v.a) : '')\n\t\t: v;\n}\nfunction round(v) {\n\treturn v + 0.5 | 0;\n}\nconst lim = (v, l, h) => Math.max(Math.min(v, h), l);\nfunction p2b(v) {\n\treturn lim(round(v * 2.55), 0, 255);\n}\nfunction n2b(v) {\n\treturn lim(round(v * 255), 0, 255);\n}\nfunction b2n(v) {\n\treturn lim(round(v / 2.55) / 100, 0, 1);\n}\nfunction n2p(v) {\n\treturn lim(round(v * 100), 0, 100);\n}\nconst RGB_RE = /^rgba?\\(\\s*([-+.\\d]+)(%)?[\\s,]+([-+.e\\d]+)(%)?[\\s,]+([-+.e\\d]+)(%)?(?:[\\s,/]+([-+.e\\d]+)(%)?)?\\s*\\)$/;\nfunction rgbParse(str) {\n\tconst m = RGB_RE.exec(str);\n\tlet a = 255;\n\tlet r, g, b;\n\tif (!m) {\n\t\treturn;\n\t}\n\tif (m[7] !== r) {\n\t\tconst v = +m[7];\n\t\ta = 255 & (m[8] ? p2b(v) : v * 255);\n\t}\n\tr = +m[1];\n\tg = +m[3];\n\tb = +m[5];\n\tr = 255 & (m[2] ? p2b(r) : r);\n\tg = 255 & (m[4] ? p2b(g) : g);\n\tb = 255 & (m[6] ? p2b(b) : b);\n\treturn {\n\t\tr: r,\n\t\tg: g,\n\t\tb: b,\n\t\ta: a\n\t};\n}\nfunction rgbString(v) {\n\treturn v && (\n\t\tv.a < 255\n\t\t\t? `rgba(${v.r}, ${v.g}, ${v.b}, ${b2n(v.a)})`\n\t\t\t: `rgb(${v.r}, ${v.g}, ${v.b})`\n\t);\n}\nconst HUE_RE = /^(hsla?|hwb|hsv)\\(\\s*([-+.e\\d]+)(?:deg)?[\\s,]+([-+.e\\d]+)%[\\s,]+([-+.e\\d]+)%(?:[\\s,]+([-+.e\\d]+)(%)?)?\\s*\\)$/;\nfunction hsl2rgbn(h, s, l) {\n\tconst a = s * Math.min(l, 1 - l);\n\tconst f = (n, k = (n + h / 30) % 12) => l - a * Math.max(Math.min(k - 3, 9 - k, 1), -1);\n\treturn [f(0), f(8), f(4)];\n}\nfunction hsv2rgbn(h, s, v) {\n\tconst f = (n, k = (n + h / 60) % 6) => v - v * s * Math.max(Math.min(k, 4 - k, 1), 0);\n\treturn [f(5), f(3), f(1)];\n}\nfunction hwb2rgbn(h, w, b) {\n\tconst rgb = hsl2rgbn(h, 1, 0.5);\n\tlet i;\n\tif (w + b > 1) {\n\t\ti = 1 / (w + b);\n\t\tw *= i;\n\t\tb *= i;\n\t}\n\tfor (i = 0; i < 3; i++) {\n\t\trgb[i] *= 1 - w - b;\n\t\trgb[i] += w;\n\t}\n\treturn rgb;\n}\nfunction rgb2hsl(v) {\n\tconst range = 255;\n\tconst r = v.r / range;\n\tconst g = v.g / range;\n\tconst b = v.b / range;\n\tconst max = Math.max(r, g, b);\n\tconst min = Math.min(r, g, b);\n\tconst l = (max + min) / 2;\n\tlet h, s, d;\n\tif (max !== min) {\n\t\td = max - min;\n\t\ts = l > 0.5 ? d / (2 - max - min) : d / (max + min);\n\t\th = max === r\n\t\t\t? ((g - b) / d) + (g < b ? 6 : 0)\n\t\t\t: max === g\n\t\t\t\t? (b - r) / d + 2\n\t\t\t\t: (r - g) / d + 4;\n\t\th = h * 60 + 0.5;\n\t}\n\treturn [h | 0, s || 0, l];\n}\nfunction calln(f, a, b, c) {\n\treturn (\n\t\tArray.isArray(a)\n\t\t\t? f(a[0], a[1], a[2])\n\t\t\t: f(a, b, c)\n\t).map(n2b);\n}\nfunction hsl2rgb(h, s, l) {\n\treturn calln(hsl2rgbn, h, s, l);\n}\nfunction hwb2rgb(h, w, b) {\n\treturn calln(hwb2rgbn, h, w, b);\n}\nfunction hsv2rgb(h, s, v) {\n\treturn calln(hsv2rgbn, h, s, v);\n}\nfunction hue(h) {\n\treturn (h % 360 + 360) % 360;\n}\nfunction hueParse(str) {\n\tconst m = HUE_RE.exec(str);\n\tlet a = 255;\n\tlet v;\n\tif (!m) {\n\t\treturn;\n\t}\n\tif (m[5] !== v) {\n\t\ta = m[6] ? p2b(+m[5]) : n2b(+m[5]);\n\t}\n\tconst h = hue(+m[2]);\n\tconst p1 = +m[3] / 100;\n\tconst p2 = +m[4] / 100;\n\tif (m[1] === 'hwb') {\n\t\tv = hwb2rgb(h, p1, p2);\n\t} else if (m[1] === 'hsv') {\n\t\tv = hsv2rgb(h, p1, p2);\n\t} else {\n\t\tv = hsl2rgb(h, p1, p2);\n\t}\n\treturn {\n\t\tr: v[0],\n\t\tg: v[1],\n\t\tb: v[2],\n\t\ta: a\n\t};\n}\nfunction rotate(v, deg) {\n\tvar h = rgb2hsl(v);\n\th[0] = hue(h[0] + deg);\n\th = hsl2rgb(h);\n\tv.r = h[0];\n\tv.g = h[1];\n\tv.b = h[2];\n}\nfunction hslString(v) {\n\tif (!v) {\n\t\treturn;\n\t}\n\tconst a = rgb2hsl(v);\n\tconst h = a[0];\n\tconst s = n2p(a[1]);\n\tconst l = n2p(a[2]);\n\treturn v.a < 255\n\t\t? `hsla(${h}, ${s}%, ${l}%, ${b2n(v.a)})`\n\t\t: `hsl(${h}, ${s}%, ${l}%)`;\n}\nconst map$1 = {\n\tx: 'dark',\n\tZ: 'light',\n\tY: 're',\n\tX: 'blu',\n\tW: 'gr',\n\tV: 'medium',\n\tU: 'slate',\n\tA: 'ee',\n\tT: 'ol',\n\tS: 'or',\n\tB: 'ra',\n\tC: 'lateg',\n\tD: 'ights',\n\tR: 'in',\n\tQ: 'turquois',\n\tE: 'hi',\n\tP: 'ro',\n\tO: 'al',\n\tN: 'le',\n\tM: 'de',\n\tL: 'yello',\n\tF: 'en',\n\tK: 'ch',\n\tG: 'arks',\n\tH: 'ea',\n\tI: 'ightg',\n\tJ: 'wh'\n};\nconst names = {\n\tOiceXe: 'f0f8ff',\n\tantiquewEte: 'faebd7',\n\taqua: 'ffff',\n\taquamarRe: '7fffd4',\n\tazuY: 'f0ffff',\n\tbeige: 'f5f5dc',\n\tbisque: 'ffe4c4',\n\tblack: '0',\n\tblanKedOmond: 'ffebcd',\n\tXe: 'ff',\n\tXeviTet: '8a2be2',\n\tbPwn: 'a52a2a',\n\tburlywood: 'deb887',\n\tcaMtXe: '5f9ea0',\n\tKartYuse: '7fff00',\n\tKocTate: 'd2691e',\n\tcSO: 'ff7f50',\n\tcSnflowerXe: '6495ed',\n\tcSnsilk: 'fff8dc',\n\tcrimson: 'dc143c',\n\tcyan: 'ffff',\n\txXe: '8b',\n\txcyan: '8b8b',\n\txgTMnPd: 'b8860b',\n\txWay: 'a9a9a9',\n\txgYF: '6400',\n\txgYy: 'a9a9a9',\n\txkhaki: 'bdb76b',\n\txmagFta: '8b008b',\n\txTivegYF: '556b2f',\n\txSange: 'ff8c00',\n\txScEd: '9932cc',\n\txYd: '8b0000',\n\txsOmon: 'e9967a',\n\txsHgYF: '8fbc8f',\n\txUXe: '483d8b',\n\txUWay: '2f4f4f',\n\txUgYy: '2f4f4f',\n\txQe: 'ced1',\n\txviTet: '9400d3',\n\tdAppRk: 'ff1493',\n\tdApskyXe: 'bfff',\n\tdimWay: '696969',\n\tdimgYy: '696969',\n\tdodgerXe: '1e90ff',\n\tfiYbrick: 'b22222',\n\tflSOwEte: 'fffaf0',\n\tfoYstWAn: '228b22',\n\tfuKsia: 'ff00ff',\n\tgaRsbSo: 'dcdcdc',\n\tghostwEte: 'f8f8ff',\n\tgTd: 'ffd700',\n\tgTMnPd: 'daa520',\n\tWay: '808080',\n\tgYF: '8000',\n\tgYFLw: 'adff2f',\n\tgYy: '808080',\n\thoneyMw: 'f0fff0',\n\thotpRk: 'ff69b4',\n\tRdianYd: 'cd5c5c',\n\tRdigo: '4b0082',\n\tivSy: 'fffff0',\n\tkhaki: 'f0e68c',\n\tlavFMr: 'e6e6fa',\n\tlavFMrXsh: 'fff0f5',\n\tlawngYF: '7cfc00',\n\tNmoncEffon: 'fffacd',\n\tZXe: 'add8e6',\n\tZcSO: 'f08080',\n\tZcyan: 'e0ffff',\n\tZgTMnPdLw: 'fafad2',\n\tZWay: 'd3d3d3',\n\tZgYF: '90ee90',\n\tZgYy: 'd3d3d3',\n\tZpRk: 'ffb6c1',\n\tZsOmon: 'ffa07a',\n\tZsHgYF: '20b2aa',\n\tZskyXe: '87cefa',\n\tZUWay: '778899',\n\tZUgYy: '778899',\n\tZstAlXe: 'b0c4de',\n\tZLw: 'ffffe0',\n\tlime: 'ff00',\n\tlimegYF: '32cd32',\n\tlRF: 'faf0e6',\n\tmagFta: 'ff00ff',\n\tmaPon: '800000',\n\tVaquamarRe: '66cdaa',\n\tVXe: 'cd',\n\tVScEd: 'ba55d3',\n\tVpurpN: '9370db',\n\tVsHgYF: '3cb371',\n\tVUXe: '7b68ee',\n\tVsprRggYF: 'fa9a',\n\tVQe: '48d1cc',\n\tVviTetYd: 'c71585',\n\tmidnightXe: '191970',\n\tmRtcYam: 'f5fffa',\n\tmistyPse: 'ffe4e1',\n\tmoccasR: 'ffe4b5',\n\tnavajowEte: 'ffdead',\n\tnavy: '80',\n\tTdlace: 'fdf5e6',\n\tTive: '808000',\n\tTivedBb: '6b8e23',\n\tSange: 'ffa500',\n\tSangeYd: 'ff4500',\n\tScEd: 'da70d6',\n\tpOegTMnPd: 'eee8aa',\n\tpOegYF: '98fb98',\n\tpOeQe: 'afeeee',\n\tpOeviTetYd: 'db7093',\n\tpapayawEp: 'ffefd5',\n\tpHKpuff: 'ffdab9',\n\tperu: 'cd853f',\n\tpRk: 'ffc0cb',\n\tplum: 'dda0dd',\n\tpowMrXe: 'b0e0e6',\n\tpurpN: '800080',\n\tYbeccapurpN: '663399',\n\tYd: 'ff0000',\n\tPsybrown: 'bc8f8f',\n\tPyOXe: '4169e1',\n\tsaddNbPwn: '8b4513',\n\tsOmon: 'fa8072',\n\tsandybPwn: 'f4a460',\n\tsHgYF: '2e8b57',\n\tsHshell: 'fff5ee',\n\tsiFna: 'a0522d',\n\tsilver: 'c0c0c0',\n\tskyXe: '87ceeb',\n\tUXe: '6a5acd',\n\tUWay: '708090',\n\tUgYy: '708090',\n\tsnow: 'fffafa',\n\tsprRggYF: 'ff7f',\n\tstAlXe: '4682b4',\n\ttan: 'd2b48c',\n\tteO: '8080',\n\ttEstN: 'd8bfd8',\n\ttomato: 'ff6347',\n\tQe: '40e0d0',\n\tviTet: 'ee82ee',\n\tJHt: 'f5deb3',\n\twEte: 'ffffff',\n\twEtesmoke: 'f5f5f5',\n\tLw: 'ffff00',\n\tLwgYF: '9acd32'\n};\nfunction unpack() {\n\tconst unpacked = {};\n\tconst keys = Object.keys(names);\n\tconst tkeys = Object.keys(map$1);\n\tlet i, j, k, ok, nk;\n\tfor (i = 0; i < keys.length; i++) {\n\t\tok = nk = keys[i];\n\t\tfor (j = 0; j < tkeys.length; j++) {\n\t\t\tk = tkeys[j];\n\t\t\tnk = nk.replace(k, map$1[k]);\n\t\t}\n\t\tk = parseInt(names[ok], 16);\n\t\tunpacked[nk] = [k >> 16 & 0xFF, k >> 8 & 0xFF, k & 0xFF];\n\t}\n\treturn unpacked;\n}\nlet names$1;\nfunction nameParse(str) {\n\tif (!names$1) {\n\t\tnames$1 = unpack();\n\t\tnames$1.transparent = [0, 0, 0, 0];\n\t}\n\tconst a = names$1[str.toLowerCase()];\n\treturn a && {\n\t\tr: a[0],\n\t\tg: a[1],\n\t\tb: a[2],\n\t\ta: a.length === 4 ? a[3] : 255\n\t};\n}\nfunction modHSL(v, i, ratio) {\n\tif (v) {\n\t\tlet tmp = rgb2hsl(v);\n\t\ttmp[i] = Math.max(0, Math.min(tmp[i] + tmp[i] * ratio, i === 0 ? 360 : 1));\n\t\ttmp = hsl2rgb(tmp);\n\t\tv.r = tmp[0];\n\t\tv.g = tmp[1];\n\t\tv.b = tmp[2];\n\t}\n}\nfunction clone$1(v, proto) {\n\treturn v ? Object.assign(proto || {}, v) : v;\n}\nfunction fromObject(input) {\n\tvar v = {r: 0, g: 0, b: 0, a: 255};\n\tif (Array.isArray(input)) {\n\t\tif (input.length >= 3) {\n\t\t\tv = {r: input[0], g: input[1], b: input[2], a: 255};\n\t\t\tif (input.length > 3) {\n\t\t\t\tv.a = n2b(input[3]);\n\t\t\t}\n\t\t}\n\t} else {\n\t\tv = clone$1(input, {r: 0, g: 0, b: 0, a: 1});\n\t\tv.a = n2b(v.a);\n\t}\n\treturn v;\n}\nfunction functionParse(str) {\n\tif (str.charAt(0) === 'r') {\n\t\treturn rgbParse(str);\n\t}\n\treturn hueParse(str);\n}\nclass Color {\n\tconstructor(input) {\n\t\tif (input instanceof Color) {\n\t\t\treturn input;\n\t\t}\n\t\tconst type = typeof input;\n\t\tlet v;\n\t\tif (type === 'object') {\n\t\t\tv = fromObject(input);\n\t\t} else if (type === 'string') {\n\t\t\tv = hexParse(input) || nameParse(input) || functionParse(input);\n\t\t}\n\t\tthis._rgb = v;\n\t\tthis._valid = !!v;\n\t}\n\tget valid() {\n\t\treturn this._valid;\n\t}\n\tget rgb() {\n\t\tvar v = clone$1(this._rgb);\n\t\tif (v) {\n\t\t\tv.a = b2n(v.a);\n\t\t}\n\t\treturn v;\n\t}\n\tset rgb(obj) {\n\t\tthis._rgb = fromObject(obj);\n\t}\n\trgbString() {\n\t\treturn this._valid ? rgbString(this._rgb) : this._rgb;\n\t}\n\thexString() {\n\t\treturn this._valid ? hexString(this._rgb) : this._rgb;\n\t}\n\thslString() {\n\t\treturn this._valid ? hslString(this._rgb) : this._rgb;\n\t}\n\tmix(color, weight) {\n\t\tconst me = this;\n\t\tif (color) {\n\t\t\tconst c1 = me.rgb;\n\t\t\tconst c2 = color.rgb;\n\t\t\tlet w2;\n\t\t\tconst p = weight === w2 ? 0.5 : weight;\n\t\t\tconst w = 2 * p - 1;\n\t\t\tconst a = c1.a - c2.a;\n\t\t\tconst w1 = ((w * a === -1 ? w : (w + a) / (1 + w * a)) + 1) / 2.0;\n\t\t\tw2 = 1 - w1;\n\t\t\tc1.r = 0xFF & w1 * c1.r + w2 * c2.r + 0.5;\n\t\t\tc1.g = 0xFF & w1 * c1.g + w2 * c2.g + 0.5;\n\t\t\tc1.b = 0xFF & w1 * c1.b + w2 * c2.b + 0.5;\n\t\t\tc1.a = p * c1.a + (1 - p) * c2.a;\n\t\t\tme.rgb = c1;\n\t\t}\n\t\treturn me;\n\t}\n\tclone() {\n\t\treturn new Color(this.rgb);\n\t}\n\talpha(a) {\n\t\tthis._rgb.a = n2b(a);\n\t\treturn this;\n\t}\n\tclearer(ratio) {\n\t\tconst rgb = this._rgb;\n\t\trgb.a *= 1 - ratio;\n\t\treturn this;\n\t}\n\tgreyscale() {\n\t\tconst rgb = this._rgb;\n\t\tconst val = round(rgb.r * 0.3 + rgb.g * 0.59 + rgb.b * 0.11);\n\t\trgb.r = rgb.g = rgb.b = val;\n\t\treturn this;\n\t}\n\topaquer(ratio) {\n\t\tconst rgb = this._rgb;\n\t\trgb.a *= 1 + ratio;\n\t\treturn this;\n\t}\n\tnegate() {\n\t\tconst v = this._rgb;\n\t\tv.r = 255 - v.r;\n\t\tv.g = 255 - v.g;\n\t\tv.b = 255 - v.b;\n\t\treturn this;\n\t}\n\tlighten(ratio) {\n\t\tmodHSL(this._rgb, 2, ratio);\n\t\treturn this;\n\t}\n\tdarken(ratio) {\n\t\tmodHSL(this._rgb, 2, -ratio);\n\t\treturn this;\n\t}\n\tsaturate(ratio) {\n\t\tmodHSL(this._rgb, 1, ratio);\n\t\treturn this;\n\t}\n\tdesaturate(ratio) {\n\t\tmodHSL(this._rgb, 1, -ratio);\n\t\treturn this;\n\t}\n\trotate(deg) {\n\t\trotate(this._rgb, deg);\n\t\treturn this;\n\t}\n}\nfunction index_esm(input) {\n\treturn new Color(input);\n}\n\nconst isPatternOrGradient = (value) => value instanceof CanvasGradient || value instanceof CanvasPattern;\nfunction color(value) {\n  return isPatternOrGradient(value) ? value : index_esm(value);\n}\nfunction getHoverColor(value) {\n  return isPatternOrGradient(value)\n    ? value\n    : index_esm(value).saturate(0.5).darken(0.1).hexString();\n}\n\nfunction noop() {}\nconst uid = (function() {\n  let id = 0;\n  return function() {\n    return id++;\n  };\n}());\nfunction isNullOrUndef(value) {\n  return value === null || typeof value === 'undefined';\n}\nfunction isArray(value) {\n  if (Array.isArray && Array.isArray(value)) {\n    return true;\n  }\n  const type = Object.prototype.toString.call(value);\n  if (type.substr(0, 7) === '[object' && type.substr(-6) === 'Array]') {\n    return true;\n  }\n  return false;\n}\nfunction isObject(value) {\n  return value !== null && Object.prototype.toString.call(value) === '[object Object]';\n}\nconst isNumberFinite = (value) => (typeof value === 'number' || value instanceof Number) && isFinite(+value);\nfunction finiteOrDefault(value, defaultValue) {\n  return isNumberFinite(value) ? value : defaultValue;\n}\nfunction valueOrDefault(value, defaultValue) {\n  return typeof value === 'undefined' ? defaultValue : value;\n}\nconst toPercentage = (value, dimension) =>\n  typeof value === 'string' && value.endsWith('%') ?\n    parseFloat(value) / 100\n    : value / dimension;\nconst toDimension = (value, dimension) =>\n  typeof value === 'string' && value.endsWith('%') ?\n    parseFloat(value) / 100 * dimension\n    : +value;\nfunction callback(fn, args, thisArg) {\n  if (fn && typeof fn.call === 'function') {\n    return fn.apply(thisArg, args);\n  }\n}\nfunction each(loopable, fn, thisArg, reverse) {\n  let i, len, keys;\n  if (isArray(loopable)) {\n    len = loopable.length;\n    if (reverse) {\n      for (i = len - 1; i >= 0; i--) {\n        fn.call(thisArg, loopable[i], i);\n      }\n    } else {\n      for (i = 0; i < len; i++) {\n        fn.call(thisArg, loopable[i], i);\n      }\n    }\n  } else if (isObject(loopable)) {\n    keys = Object.keys(loopable);\n    len = keys.length;\n    for (i = 0; i < len; i++) {\n      fn.call(thisArg, loopable[keys[i]], keys[i]);\n    }\n  }\n}\nfunction _elementsEqual(a0, a1) {\n  let i, ilen, v0, v1;\n  if (!a0 || !a1 || a0.length !== a1.length) {\n    return false;\n  }\n  for (i = 0, ilen = a0.length; i < ilen; ++i) {\n    v0 = a0[i];\n    v1 = a1[i];\n    if (v0.datasetIndex !== v1.datasetIndex || v0.index !== v1.index) {\n      return false;\n    }\n  }\n  return true;\n}\nfunction clone(source) {\n  if (isArray(source)) {\n    return source.map(clone);\n  }\n  if (isObject(source)) {\n    const target = Object.create(null);\n    const keys = Object.keys(source);\n    const klen = keys.length;\n    let k = 0;\n    for (; k < klen; ++k) {\n      target[keys[k]] = clone(source[keys[k]]);\n    }\n    return target;\n  }\n  return source;\n}\nfunction isValidKey(key) {\n  return ['__proto__', 'prototype', 'constructor'].indexOf(key) === -1;\n}\nfunction _merger(key, target, source, options) {\n  if (!isValidKey(key)) {\n    return;\n  }\n  const tval = target[key];\n  const sval = source[key];\n  if (isObject(tval) && isObject(sval)) {\n    merge(tval, sval, options);\n  } else {\n    target[key] = clone(sval);\n  }\n}\nfunction merge(target, source, options) {\n  const sources = isArray(source) ? source : [source];\n  const ilen = sources.length;\n  if (!isObject(target)) {\n    return target;\n  }\n  options = options || {};\n  const merger = options.merger || _merger;\n  for (let i = 0; i < ilen; ++i) {\n    source = sources[i];\n    if (!isObject(source)) {\n      continue;\n    }\n    const keys = Object.keys(source);\n    for (let k = 0, klen = keys.length; k < klen; ++k) {\n      merger(keys[k], target, source, options);\n    }\n  }\n  return target;\n}\nfunction mergeIf(target, source) {\n  return merge(target, source, {merger: _mergerIf});\n}\nfunction _mergerIf(key, target, source) {\n  if (!isValidKey(key)) {\n    return;\n  }\n  const tval = target[key];\n  const sval = source[key];\n  if (isObject(tval) && isObject(sval)) {\n    mergeIf(tval, sval);\n  } else if (!Object.prototype.hasOwnProperty.call(target, key)) {\n    target[key] = clone(sval);\n  }\n}\nfunction _deprecated(scope, value, previous, current) {\n  if (value !== undefined) {\n    console.warn(scope + ': \"' + previous +\n\t\t\t'\" is deprecated. Please use \"' + current + '\" instead');\n  }\n}\nconst emptyString = '';\nconst dot = '.';\nfunction indexOfDotOrLength(key, start) {\n  const idx = key.indexOf(dot, start);\n  return idx === -1 ? key.length : idx;\n}\nfunction resolveObjectKey(obj, key) {\n  if (key === emptyString) {\n    return obj;\n  }\n  let pos = 0;\n  let idx = indexOfDotOrLength(key, pos);\n  while (obj && idx > pos) {\n    obj = obj[key.substr(pos, idx - pos)];\n    pos = idx + 1;\n    idx = indexOfDotOrLength(key, pos);\n  }\n  return obj;\n}\nfunction _capitalize(str) {\n  return str.charAt(0).toUpperCase() + str.slice(1);\n}\nconst defined = (value) => typeof value !== 'undefined';\nconst isFunction = (value) => typeof value === 'function';\nconst setsEqual = (a, b) => {\n  if (a.size !== b.size) {\n    return false;\n  }\n  for (const item of a) {\n    if (!b.has(item)) {\n      return false;\n    }\n  }\n  return true;\n};\n\nconst overrides = Object.create(null);\nconst descriptors = Object.create(null);\nfunction getScope$1(node, key) {\n  if (!key) {\n    return node;\n  }\n  const keys = key.split('.');\n  for (let i = 0, n = keys.length; i < n; ++i) {\n    const k = keys[i];\n    node = node[k] || (node[k] = Object.create(null));\n  }\n  return node;\n}\nfunction set(root, scope, values) {\n  if (typeof scope === 'string') {\n    return merge(getScope$1(root, scope), values);\n  }\n  return merge(getScope$1(root, ''), scope);\n}\nclass Defaults {\n  constructor(_descriptors) {\n    this.animation = undefined;\n    this.backgroundColor = 'rgba(0,0,0,0.1)';\n    this.borderColor = 'rgba(0,0,0,0.1)';\n    this.color = '#666';\n    this.datasets = {};\n    this.devicePixelRatio = (context) => context.chart.platform.getDevicePixelRatio();\n    this.elements = {};\n    this.events = [\n      'mousemove',\n      'mouseout',\n      'click',\n      'touchstart',\n      'touchmove'\n    ];\n    this.font = {\n      family: \"'Helvetica Neue', 'Helvetica', 'Arial', sans-serif\",\n      size: 12,\n      style: 'normal',\n      lineHeight: 1.2,\n      weight: null\n    };\n    this.hover = {};\n    this.hoverBackgroundColor = (ctx, options) => getHoverColor(options.backgroundColor);\n    this.hoverBorderColor = (ctx, options) => getHoverColor(options.borderColor);\n    this.hoverColor = (ctx, options) => getHoverColor(options.color);\n    this.indexAxis = 'x';\n    this.interaction = {\n      mode: 'nearest',\n      intersect: true\n    };\n    this.maintainAspectRatio = true;\n    this.onHover = null;\n    this.onClick = null;\n    this.parsing = true;\n    this.plugins = {};\n    this.responsive = true;\n    this.scale = undefined;\n    this.scales = {};\n    this.showLine = true;\n    this.describe(_descriptors);\n  }\n  set(scope, values) {\n    return set(this, scope, values);\n  }\n  get(scope) {\n    return getScope$1(this, scope);\n  }\n  describe(scope, values) {\n    return set(descriptors, scope, values);\n  }\n  override(scope, values) {\n    return set(overrides, scope, values);\n  }\n  route(scope, name, targetScope, targetName) {\n    const scopeObject = getScope$1(this, scope);\n    const targetScopeObject = getScope$1(this, targetScope);\n    const privateName = '_' + name;\n    Object.defineProperties(scopeObject, {\n      [privateName]: {\n        value: scopeObject[name],\n        writable: true\n      },\n      [name]: {\n        enumerable: true,\n        get() {\n          const local = this[privateName];\n          const target = targetScopeObject[targetName];\n          if (isObject(local)) {\n            return Object.assign({}, target, local);\n          }\n          return valueOrDefault(local, target);\n        },\n        set(value) {\n          this[privateName] = value;\n        }\n      }\n    });\n  }\n}\nvar defaults = new Defaults({\n  _scriptable: (name) => !name.startsWith('on'),\n  _indexable: (name) => name !== 'events',\n  hover: {\n    _fallback: 'interaction'\n  },\n  interaction: {\n    _scriptable: false,\n    _indexable: false,\n  }\n});\n\nconst PI = Math.PI;\nconst TAU = 2 * PI;\nconst PITAU = TAU + PI;\nconst INFINITY = Number.POSITIVE_INFINITY;\nconst RAD_PER_DEG = PI / 180;\nconst HALF_PI = PI / 2;\nconst QUARTER_PI = PI / 4;\nconst TWO_THIRDS_PI = PI * 2 / 3;\nconst log10 = Math.log10;\nconst sign = Math.sign;\nfunction niceNum(range) {\n  const niceRange = Math.pow(10, Math.floor(log10(range)));\n  const fraction = range / niceRange;\n  const niceFraction = fraction <= 1 ? 1 : fraction <= 2 ? 2 : fraction <= 5 ? 5 : 10;\n  return niceFraction * niceRange;\n}\nfunction _factorize(value) {\n  const result = [];\n  const sqrt = Math.sqrt(value);\n  let i;\n  for (i = 1; i < sqrt; i++) {\n    if (value % i === 0) {\n      result.push(i);\n      result.push(value / i);\n    }\n  }\n  if (sqrt === (sqrt | 0)) {\n    result.push(sqrt);\n  }\n  result.sort((a, b) => a - b).pop();\n  return result;\n}\nfunction isNumber(n) {\n  return !isNaN(parseFloat(n)) && isFinite(n);\n}\nfunction almostEquals(x, y, epsilon) {\n  return Math.abs(x - y) < epsilon;\n}\nfunction almostWhole(x, epsilon) {\n  const rounded = Math.round(x);\n  return ((rounded - epsilon) <= x) && ((rounded + epsilon) >= x);\n}\nfunction _setMinAndMaxByKey(array, target, property) {\n  let i, ilen, value;\n  for (i = 0, ilen = array.length; i < ilen; i++) {\n    value = array[i][property];\n    if (!isNaN(value)) {\n      target.min = Math.min(target.min, value);\n      target.max = Math.max(target.max, value);\n    }\n  }\n}\nfunction toRadians(degrees) {\n  return degrees * (PI / 180);\n}\nfunction toDegrees(radians) {\n  return radians * (180 / PI);\n}\nfunction _decimalPlaces(x) {\n  if (!isNumberFinite(x)) {\n    return;\n  }\n  let e = 1;\n  let p = 0;\n  while (Math.round(x * e) / e !== x) {\n    e *= 10;\n    p++;\n  }\n  return p;\n}\nfunction getAngleFromPoint(centrePoint, anglePoint) {\n  const distanceFromXCenter = anglePoint.x - centrePoint.x;\n  const distanceFromYCenter = anglePoint.y - centrePoint.y;\n  const radialDistanceFromCenter = Math.sqrt(distanceFromXCenter * distanceFromXCenter + distanceFromYCenter * distanceFromYCenter);\n  let angle = Math.atan2(distanceFromYCenter, distanceFromXCenter);\n  if (angle < (-0.5 * PI)) {\n    angle += TAU;\n  }\n  return {\n    angle,\n    distance: radialDistanceFromCenter\n  };\n}\nfunction distanceBetweenPoints(pt1, pt2) {\n  return Math.sqrt(Math.pow(pt2.x - pt1.x, 2) + Math.pow(pt2.y - pt1.y, 2));\n}\nfunction _angleDiff(a, b) {\n  return (a - b + PITAU) % TAU - PI;\n}\nfunction _normalizeAngle(a) {\n  return (a % TAU + TAU) % TAU;\n}\nfunction _angleBetween(angle, start, end, sameAngleIsFullCircle) {\n  const a = _normalizeAngle(angle);\n  const s = _normalizeAngle(start);\n  const e = _normalizeAngle(end);\n  const angleToStart = _normalizeAngle(s - a);\n  const angleToEnd = _normalizeAngle(e - a);\n  const startToAngle = _normalizeAngle(a - s);\n  const endToAngle = _normalizeAngle(a - e);\n  return a === s || a === e || (sameAngleIsFullCircle && s === e)\n    || (angleToStart > angleToEnd && startToAngle < endToAngle);\n}\nfunction _limitValue(value, min, max) {\n  return Math.max(min, Math.min(max, value));\n}\nfunction _int16Range(value) {\n  return _limitValue(value, -32768, 32767);\n}\n\nfunction toFontString(font) {\n  if (!font || isNullOrUndef(font.size) || isNullOrUndef(font.family)) {\n    return null;\n  }\n  return (font.style ? font.style + ' ' : '')\n\t\t+ (font.weight ? font.weight + ' ' : '')\n\t\t+ font.size + 'px '\n\t\t+ font.family;\n}\nfunction _measureText(ctx, data, gc, longest, string) {\n  let textWidth = data[string];\n  if (!textWidth) {\n    textWidth = data[string] = ctx.measureText(string).width;\n    gc.push(string);\n  }\n  if (textWidth > longest) {\n    longest = textWidth;\n  }\n  return longest;\n}\nfunction _longestText(ctx, font, arrayOfThings, cache) {\n  cache = cache || {};\n  let data = cache.data = cache.data || {};\n  let gc = cache.garbageCollect = cache.garbageCollect || [];\n  if (cache.font !== font) {\n    data = cache.data = {};\n    gc = cache.garbageCollect = [];\n    cache.font = font;\n  }\n  ctx.save();\n  ctx.font = font;\n  let longest = 0;\n  const ilen = arrayOfThings.length;\n  let i, j, jlen, thing, nestedThing;\n  for (i = 0; i < ilen; i++) {\n    thing = arrayOfThings[i];\n    if (thing !== undefined && thing !== null && isArray(thing) !== true) {\n      longest = _measureText(ctx, data, gc, longest, thing);\n    } else if (isArray(thing)) {\n      for (j = 0, jlen = thing.length; j < jlen; j++) {\n        nestedThing = thing[j];\n        if (nestedThing !== undefined && nestedThing !== null && !isArray(nestedThing)) {\n          longest = _measureText(ctx, data, gc, longest, nestedThing);\n        }\n      }\n    }\n  }\n  ctx.restore();\n  const gcLen = gc.length / 2;\n  if (gcLen > arrayOfThings.length) {\n    for (i = 0; i < gcLen; i++) {\n      delete data[gc[i]];\n    }\n    gc.splice(0, gcLen);\n  }\n  return longest;\n}\nfunction _alignPixel(chart, pixel, width) {\n  const devicePixelRatio = chart.currentDevicePixelRatio;\n  const halfWidth = width !== 0 ? Math.max(width / 2, 0.5) : 0;\n  return Math.round((pixel - halfWidth) * devicePixelRatio) / devicePixelRatio + halfWidth;\n}\nfunction clearCanvas(canvas, ctx) {\n  ctx = ctx || canvas.getContext('2d');\n  ctx.save();\n  ctx.resetTransform();\n  ctx.clearRect(0, 0, canvas.width, canvas.height);\n  ctx.restore();\n}\nfunction drawPoint(ctx, options, x, y) {\n  let type, xOffset, yOffset, size, cornerRadius;\n  const style = options.pointStyle;\n  const rotation = options.rotation;\n  const radius = options.radius;\n  let rad = (rotation || 0) * RAD_PER_DEG;\n  if (style && typeof style === 'object') {\n    type = style.toString();\n    if (type === '[object HTMLImageElement]' || type === '[object HTMLCanvasElement]') {\n      ctx.save();\n      ctx.translate(x, y);\n      ctx.rotate(rad);\n      ctx.drawImage(style, -style.width / 2, -style.height / 2, style.width, style.height);\n      ctx.restore();\n      return;\n    }\n  }\n  if (isNaN(radius) || radius <= 0) {\n    return;\n  }\n  ctx.beginPath();\n  switch (style) {\n  default:\n    ctx.arc(x, y, radius, 0, TAU);\n    ctx.closePath();\n    break;\n  case 'triangle':\n    ctx.moveTo(x + Math.sin(rad) * radius, y - Math.cos(rad) * radius);\n    rad += TWO_THIRDS_PI;\n    ctx.lineTo(x + Math.sin(rad) * radius, y - Math.cos(rad) * radius);\n    rad += TWO_THIRDS_PI;\n    ctx.lineTo(x + Math.sin(rad) * radius, y - Math.cos(rad) * radius);\n    ctx.closePath();\n    break;\n  case 'rectRounded':\n    cornerRadius = radius * 0.516;\n    size = radius - cornerRadius;\n    xOffset = Math.cos(rad + QUARTER_PI) * size;\n    yOffset = Math.sin(rad + QUARTER_PI) * size;\n    ctx.arc(x - xOffset, y - yOffset, cornerRadius, rad - PI, rad - HALF_PI);\n    ctx.arc(x + yOffset, y - xOffset, cornerRadius, rad - HALF_PI, rad);\n    ctx.arc(x + xOffset, y + yOffset, cornerRadius, rad, rad + HALF_PI);\n    ctx.arc(x - yOffset, y + xOffset, cornerRadius, rad + HALF_PI, rad + PI);\n    ctx.closePath();\n    break;\n  case 'rect':\n    if (!rotation) {\n      size = Math.SQRT1_2 * radius;\n      ctx.rect(x - size, y - size, 2 * size, 2 * size);\n      break;\n    }\n    rad += QUARTER_PI;\n  case 'rectRot':\n    xOffset = Math.cos(rad) * radius;\n    yOffset = Math.sin(rad) * radius;\n    ctx.moveTo(x - xOffset, y - yOffset);\n    ctx.lineTo(x + yOffset, y - xOffset);\n    ctx.lineTo(x + xOffset, y + yOffset);\n    ctx.lineTo(x - yOffset, y + xOffset);\n    ctx.closePath();\n    break;\n  case 'crossRot':\n    rad += QUARTER_PI;\n  case 'cross':\n    xOffset = Math.cos(rad) * radius;\n    yOffset = Math.sin(rad) * radius;\n    ctx.moveTo(x - xOffset, y - yOffset);\n    ctx.lineTo(x + xOffset, y + yOffset);\n    ctx.moveTo(x + yOffset, y - xOffset);\n    ctx.lineTo(x - yOffset, y + xOffset);\n    break;\n  case 'star':\n    xOffset = Math.cos(rad) * radius;\n    yOffset = Math.sin(rad) * radius;\n    ctx.moveTo(x - xOffset, y - yOffset);\n    ctx.lineTo(x + xOffset, y + yOffset);\n    ctx.moveTo(x + yOffset, y - xOffset);\n    ctx.lineTo(x - yOffset, y + xOffset);\n    rad += QUARTER_PI;\n    xOffset = Math.cos(rad) * radius;\n    yOffset = Math.sin(rad) * radius;\n    ctx.moveTo(x - xOffset, y - yOffset);\n    ctx.lineTo(x + xOffset, y + yOffset);\n    ctx.moveTo(x + yOffset, y - xOffset);\n    ctx.lineTo(x - yOffset, y + xOffset);\n    break;\n  case 'line':\n    xOffset = Math.cos(rad) * radius;\n    yOffset = Math.sin(rad) * radius;\n    ctx.moveTo(x - xOffset, y - yOffset);\n    ctx.lineTo(x + xOffset, y + yOffset);\n    break;\n  case 'dash':\n    ctx.moveTo(x, y);\n    ctx.lineTo(x + Math.cos(rad) * radius, y + Math.sin(rad) * radius);\n    break;\n  }\n  ctx.fill();\n  if (options.borderWidth > 0) {\n    ctx.stroke();\n  }\n}\nfunction _isPointInArea(point, area, margin) {\n  margin = margin || 0.5;\n  return point && point.x > area.left - margin && point.x < area.right + margin &&\n\t\tpoint.y > area.top - margin && point.y < area.bottom + margin;\n}\nfunction clipArea(ctx, area) {\n  ctx.save();\n  ctx.beginPath();\n  ctx.rect(area.left, area.top, area.right - area.left, area.bottom - area.top);\n  ctx.clip();\n}\nfunction unclipArea(ctx) {\n  ctx.restore();\n}\nfunction _steppedLineTo(ctx, previous, target, flip, mode) {\n  if (!previous) {\n    return ctx.lineTo(target.x, target.y);\n  }\n  if (mode === 'middle') {\n    const midpoint = (previous.x + target.x) / 2.0;\n    ctx.lineTo(midpoint, previous.y);\n    ctx.lineTo(midpoint, target.y);\n  } else if (mode === 'after' !== !!flip) {\n    ctx.lineTo(previous.x, target.y);\n  } else {\n    ctx.lineTo(target.x, previous.y);\n  }\n  ctx.lineTo(target.x, target.y);\n}\nfunction _bezierCurveTo(ctx, previous, target, flip) {\n  if (!previous) {\n    return ctx.lineTo(target.x, target.y);\n  }\n  ctx.bezierCurveTo(\n    flip ? previous.cp1x : previous.cp2x,\n    flip ? previous.cp1y : previous.cp2y,\n    flip ? target.cp2x : target.cp1x,\n    flip ? target.cp2y : target.cp1y,\n    target.x,\n    target.y);\n}\nfunction renderText(ctx, text, x, y, font, opts = {}) {\n  const lines = isArray(text) ? text : [text];\n  const stroke = opts.strokeWidth > 0 && opts.strokeColor !== '';\n  let i, line;\n  ctx.save();\n  if (opts.translation) {\n    ctx.translate(opts.translation[0], opts.translation[1]);\n  }\n  if (!isNullOrUndef(opts.rotation)) {\n    ctx.rotate(opts.rotation);\n  }\n  ctx.font = font.string;\n  if (opts.color) {\n    ctx.fillStyle = opts.color;\n  }\n  if (opts.textAlign) {\n    ctx.textAlign = opts.textAlign;\n  }\n  if (opts.textBaseline) {\n    ctx.textBaseline = opts.textBaseline;\n  }\n  for (i = 0; i < lines.length; ++i) {\n    line = lines[i];\n    if (stroke) {\n      if (opts.strokeColor) {\n        ctx.strokeStyle = opts.strokeColor;\n      }\n      if (!isNullOrUndef(opts.strokeWidth)) {\n        ctx.lineWidth = opts.strokeWidth;\n      }\n      ctx.strokeText(line, x, y, opts.maxWidth);\n    }\n    ctx.fillText(line, x, y, opts.maxWidth);\n    if (opts.strikethrough || opts.underline) {\n      const metrics = ctx.measureText(line);\n      const left = x - metrics.actualBoundingBoxLeft;\n      const right = x + metrics.actualBoundingBoxRight;\n      const top = y - metrics.actualBoundingBoxAscent;\n      const bottom = y + metrics.actualBoundingBoxDescent;\n      const yDecoration = opts.strikethrough ? (top + bottom) / 2 : bottom;\n      ctx.strokeStyle = ctx.fillStyle;\n      ctx.beginPath();\n      ctx.lineWidth = opts.decorationWidth || 2;\n      ctx.moveTo(left, yDecoration);\n      ctx.lineTo(right, yDecoration);\n      ctx.stroke();\n    }\n    y += font.lineHeight;\n  }\n  ctx.restore();\n}\nfunction addRoundedRectPath(ctx, rect) {\n  const {x, y, w, h, radius} = rect;\n  ctx.arc(x + radius.topLeft, y + radius.topLeft, radius.topLeft, -HALF_PI, PI, true);\n  ctx.lineTo(x, y + h - radius.bottomLeft);\n  ctx.arc(x + radius.bottomLeft, y + h - radius.bottomLeft, radius.bottomLeft, PI, HALF_PI, true);\n  ctx.lineTo(x + w - radius.bottomRight, y + h);\n  ctx.arc(x + w - radius.bottomRight, y + h - radius.bottomRight, radius.bottomRight, HALF_PI, 0, true);\n  ctx.lineTo(x + w, y + radius.topRight);\n  ctx.arc(x + w - radius.topRight, y + radius.topRight, radius.topRight, 0, -HALF_PI, true);\n  ctx.lineTo(x + radius.topLeft, y);\n}\n\nfunction _lookup(table, value, cmp) {\n  cmp = cmp || ((index) => table[index] < value);\n  let hi = table.length - 1;\n  let lo = 0;\n  let mid;\n  while (hi - lo > 1) {\n    mid = (lo + hi) >> 1;\n    if (cmp(mid)) {\n      lo = mid;\n    } else {\n      hi = mid;\n    }\n  }\n  return {lo, hi};\n}\nconst _lookupByKey = (table, key, value) =>\n  _lookup(table, value, index => table[index][key] < value);\nconst _rlookupByKey = (table, key, value) =>\n  _lookup(table, value, index => table[index][key] >= value);\nfunction _filterBetween(values, min, max) {\n  let start = 0;\n  let end = values.length;\n  while (start < end && values[start] < min) {\n    start++;\n  }\n  while (end > start && values[end - 1] > max) {\n    end--;\n  }\n  return start > 0 || end < values.length\n    ? values.slice(start, end)\n    : values;\n}\nconst arrayEvents = ['push', 'pop', 'shift', 'splice', 'unshift'];\nfunction listenArrayEvents(array, listener) {\n  if (array._chartjs) {\n    array._chartjs.listeners.push(listener);\n    return;\n  }\n  Object.defineProperty(array, '_chartjs', {\n    configurable: true,\n    enumerable: false,\n    value: {\n      listeners: [listener]\n    }\n  });\n  arrayEvents.forEach((key) => {\n    const method = '_onData' + _capitalize(key);\n    const base = array[key];\n    Object.defineProperty(array, key, {\n      configurable: true,\n      enumerable: false,\n      value(...args) {\n        const res = base.apply(this, args);\n        array._chartjs.listeners.forEach((object) => {\n          if (typeof object[method] === 'function') {\n            object[method](...args);\n          }\n        });\n        return res;\n      }\n    });\n  });\n}\nfunction unlistenArrayEvents(array, listener) {\n  const stub = array._chartjs;\n  if (!stub) {\n    return;\n  }\n  const listeners = stub.listeners;\n  const index = listeners.indexOf(listener);\n  if (index !== -1) {\n    listeners.splice(index, 1);\n  }\n  if (listeners.length > 0) {\n    return;\n  }\n  arrayEvents.forEach((key) => {\n    delete array[key];\n  });\n  delete array._chartjs;\n}\nfunction _arrayUnique(items) {\n  const set = new Set();\n  let i, ilen;\n  for (i = 0, ilen = items.length; i < ilen; ++i) {\n    set.add(items[i]);\n  }\n  if (set.size === ilen) {\n    return items;\n  }\n  const result = [];\n  set.forEach(item => {\n    result.push(item);\n  });\n  return result;\n}\n\nfunction _getParentNode(domNode) {\n  let parent = domNode.parentNode;\n  if (parent && parent.toString() === '[object ShadowRoot]') {\n    parent = parent.host;\n  }\n  return parent;\n}\nfunction parseMaxStyle(styleValue, node, parentProperty) {\n  let valueInPixels;\n  if (typeof styleValue === 'string') {\n    valueInPixels = parseInt(styleValue, 10);\n    if (styleValue.indexOf('%') !== -1) {\n      valueInPixels = valueInPixels / 100 * node.parentNode[parentProperty];\n    }\n  } else {\n    valueInPixels = styleValue;\n  }\n  return valueInPixels;\n}\nconst getComputedStyle = (element) => window.getComputedStyle(element, null);\nfunction getStyle(el, property) {\n  return getComputedStyle(el).getPropertyValue(property);\n}\nconst positions = ['top', 'right', 'bottom', 'left'];\nfunction getPositionedStyle(styles, style, suffix) {\n  const result = {};\n  suffix = suffix ? '-' + suffix : '';\n  for (let i = 0; i < 4; i++) {\n    const pos = positions[i];\n    result[pos] = parseFloat(styles[style + '-' + pos + suffix]) || 0;\n  }\n  result.width = result.left + result.right;\n  result.height = result.top + result.bottom;\n  return result;\n}\nconst useOffsetPos = (x, y, target) => (x > 0 || y > 0) && (!target || !target.shadowRoot);\nfunction getCanvasPosition(evt, canvas) {\n  const e = evt.native || evt;\n  const touches = e.touches;\n  const source = touches && touches.length ? touches[0] : e;\n  const {offsetX, offsetY} = source;\n  let box = false;\n  let x, y;\n  if (useOffsetPos(offsetX, offsetY, e.target)) {\n    x = offsetX;\n    y = offsetY;\n  } else {\n    const rect = canvas.getBoundingClientRect();\n    x = source.clientX - rect.left;\n    y = source.clientY - rect.top;\n    box = true;\n  }\n  return {x, y, box};\n}\nfunction getRelativePosition$1(evt, chart) {\n  const {canvas, currentDevicePixelRatio} = chart;\n  const style = getComputedStyle(canvas);\n  const borderBox = style.boxSizing === 'border-box';\n  const paddings = getPositionedStyle(style, 'padding');\n  const borders = getPositionedStyle(style, 'border', 'width');\n  const {x, y, box} = getCanvasPosition(evt, canvas);\n  const xOffset = paddings.left + (box && borders.left);\n  const yOffset = paddings.top + (box && borders.top);\n  let {width, height} = chart;\n  if (borderBox) {\n    width -= paddings.width + borders.width;\n    height -= paddings.height + borders.height;\n  }\n  return {\n    x: Math.round((x - xOffset) / width * canvas.width / currentDevicePixelRatio),\n    y: Math.round((y - yOffset) / height * canvas.height / currentDevicePixelRatio)\n  };\n}\nfunction getContainerSize(canvas, width, height) {\n  let maxWidth, maxHeight;\n  if (width === undefined || height === undefined) {\n    const container = _getParentNode(canvas);\n    if (!container) {\n      width = canvas.clientWidth;\n      height = canvas.clientHeight;\n    } else {\n      const rect = container.getBoundingClientRect();\n      const containerStyle = getComputedStyle(container);\n      const containerBorder = getPositionedStyle(containerStyle, 'border', 'width');\n      const containerPadding = getPositionedStyle(containerStyle, 'padding');\n      width = rect.width - containerPadding.width - containerBorder.width;\n      height = rect.height - containerPadding.height - containerBorder.height;\n      maxWidth = parseMaxStyle(containerStyle.maxWidth, container, 'clientWidth');\n      maxHeight = parseMaxStyle(containerStyle.maxHeight, container, 'clientHeight');\n    }\n  }\n  return {\n    width,\n    height,\n    maxWidth: maxWidth || INFINITY,\n    maxHeight: maxHeight || INFINITY\n  };\n}\nconst round1 = v => Math.round(v * 10) / 10;\nfunction getMaximumSize(canvas, bbWidth, bbHeight, aspectRatio) {\n  const style = getComputedStyle(canvas);\n  const margins = getPositionedStyle(style, 'margin');\n  const maxWidth = parseMaxStyle(style.maxWidth, canvas, 'clientWidth') || INFINITY;\n  const maxHeight = parseMaxStyle(style.maxHeight, canvas, 'clientHeight') || INFINITY;\n  const containerSize = getContainerSize(canvas, bbWidth, bbHeight);\n  let {width, height} = containerSize;\n  if (style.boxSizing === 'content-box') {\n    const borders = getPositionedStyle(style, 'border', 'width');\n    const paddings = getPositionedStyle(style, 'padding');\n    width -= paddings.width + borders.width;\n    height -= paddings.height + borders.height;\n  }\n  width = Math.max(0, width - margins.width);\n  height = Math.max(0, aspectRatio ? Math.floor(width / aspectRatio) : height - margins.height);\n  width = round1(Math.min(width, maxWidth, containerSize.maxWidth));\n  height = round1(Math.min(height, maxHeight, containerSize.maxHeight));\n  if (width && !height) {\n    height = round1(width / 2);\n  }\n  return {\n    width,\n    height\n  };\n}\nfunction retinaScale(chart, forceRatio, forceStyle) {\n  const pixelRatio = forceRatio || 1;\n  const deviceHeight = Math.floor(chart.height * pixelRatio);\n  const deviceWidth = Math.floor(chart.width * pixelRatio);\n  chart.height = deviceHeight / pixelRatio;\n  chart.width = deviceWidth / pixelRatio;\n  const canvas = chart.canvas;\n  if (canvas.style && (forceStyle || (!canvas.style.height && !canvas.style.width))) {\n    canvas.style.height = `${chart.height}px`;\n    canvas.style.width = `${chart.width}px`;\n  }\n  if (chart.currentDevicePixelRatio !== pixelRatio\n      || canvas.height !== deviceHeight\n      || canvas.width !== deviceWidth) {\n    chart.currentDevicePixelRatio = pixelRatio;\n    canvas.height = deviceHeight;\n    canvas.width = deviceWidth;\n    chart.ctx.setTransform(pixelRatio, 0, 0, pixelRatio, 0, 0);\n    return true;\n  }\n  return false;\n}\nconst supportsEventListenerOptions = (function() {\n  let passiveSupported = false;\n  try {\n    const options = {\n      get passive() {\n        passiveSupported = true;\n        return false;\n      }\n    };\n    window.addEventListener('test', null, options);\n    window.removeEventListener('test', null, options);\n  } catch (e) {\n  }\n  return passiveSupported;\n}());\nfunction readUsedSize(element, property) {\n  const value = getStyle(element, property);\n  const matches = value && value.match(/^(\\d+)(\\.\\d+)?px$/);\n  return matches ? +matches[1] : undefined;\n}\n\nfunction getRelativePosition(e, chart) {\n  if ('native' in e) {\n    return {\n      x: e.x,\n      y: e.y\n    };\n  }\n  return getRelativePosition$1(e, chart);\n}\nfunction evaluateAllVisibleItems(chart, handler) {\n  const metasets = chart.getSortedVisibleDatasetMetas();\n  let index, data, element;\n  for (let i = 0, ilen = metasets.length; i < ilen; ++i) {\n    ({index, data} = metasets[i]);\n    for (let j = 0, jlen = data.length; j < jlen; ++j) {\n      element = data[j];\n      if (!element.skip) {\n        handler(element, index, j);\n      }\n    }\n  }\n}\nfunction binarySearch(metaset, axis, value, intersect) {\n  const {controller, data, _sorted} = metaset;\n  const iScale = controller._cachedMeta.iScale;\n  if (iScale && axis === iScale.axis && _sorted && data.length) {\n    const lookupMethod = iScale._reversePixels ? _rlookupByKey : _lookupByKey;\n    if (!intersect) {\n      return lookupMethod(data, axis, value);\n    } else if (controller._sharedOptions) {\n      const el = data[0];\n      const range = typeof el.getRange === 'function' && el.getRange(axis);\n      if (range) {\n        const start = lookupMethod(data, axis, value - range);\n        const end = lookupMethod(data, axis, value + range);\n        return {lo: start.lo, hi: end.hi};\n      }\n    }\n  }\n  return {lo: 0, hi: data.length - 1};\n}\nfunction optimizedEvaluateItems(chart, axis, position, handler, intersect) {\n  const metasets = chart.getSortedVisibleDatasetMetas();\n  const value = position[axis];\n  for (let i = 0, ilen = metasets.length; i < ilen; ++i) {\n    const {index, data} = metasets[i];\n    const {lo, hi} = binarySearch(metasets[i], axis, value, intersect);\n    for (let j = lo; j <= hi; ++j) {\n      const element = data[j];\n      if (!element.skip) {\n        handler(element, index, j);\n      }\n    }\n  }\n}\nfunction getDistanceMetricForAxis(axis) {\n  const useX = axis.indexOf('x') !== -1;\n  const useY = axis.indexOf('y') !== -1;\n  return function(pt1, pt2) {\n    const deltaX = useX ? Math.abs(pt1.x - pt2.x) : 0;\n    const deltaY = useY ? Math.abs(pt1.y - pt2.y) : 0;\n    return Math.sqrt(Math.pow(deltaX, 2) + Math.pow(deltaY, 2));\n  };\n}\nfunction getIntersectItems(chart, position, axis, useFinalPosition) {\n  const items = [];\n  if (!_isPointInArea(position, chart.chartArea, chart._minPadding)) {\n    return items;\n  }\n  const evaluationFunc = function(element, datasetIndex, index) {\n    if (element.inRange(position.x, position.y, useFinalPosition)) {\n      items.push({element, datasetIndex, index});\n    }\n  };\n  optimizedEvaluateItems(chart, axis, position, evaluationFunc, true);\n  return items;\n}\nfunction getNearestItems(chart, position, axis, intersect, useFinalPosition) {\n  const distanceMetric = getDistanceMetricForAxis(axis);\n  let minDistance = Number.POSITIVE_INFINITY;\n  let items = [];\n  if (!_isPointInArea(position, chart.chartArea, chart._minPadding)) {\n    return items;\n  }\n  const evaluationFunc = function(element, datasetIndex, index) {\n    if (intersect && !element.inRange(position.x, position.y, useFinalPosition)) {\n      return;\n    }\n    const center = element.getCenterPoint(useFinalPosition);\n    if (!_isPointInArea(center, chart.chartArea, chart._minPadding)) {\n      return;\n    }\n    const distance = distanceMetric(position, center);\n    if (distance < minDistance) {\n      items = [{element, datasetIndex, index}];\n      minDistance = distance;\n    } else if (distance === minDistance) {\n      items.push({element, datasetIndex, index});\n    }\n  };\n  optimizedEvaluateItems(chart, axis, position, evaluationFunc);\n  return items;\n}\nfunction getAxisItems(chart, e, options, useFinalPosition) {\n  const position = getRelativePosition(e, chart);\n  const items = [];\n  const axis = options.axis;\n  const rangeMethod = axis === 'x' ? 'inXRange' : 'inYRange';\n  let intersectsItem = false;\n  evaluateAllVisibleItems(chart, (element, datasetIndex, index) => {\n    if (element[rangeMethod](position[axis], useFinalPosition)) {\n      items.push({element, datasetIndex, index});\n    }\n    if (element.inRange(position.x, position.y, useFinalPosition)) {\n      intersectsItem = true;\n    }\n  });\n  if (options.intersect && !intersectsItem) {\n    return [];\n  }\n  return items;\n}\nvar Interaction = {\n  modes: {\n    index(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'x';\n      const items = options.intersect\n        ? getIntersectItems(chart, position, axis, useFinalPosition)\n        : getNearestItems(chart, position, axis, false, useFinalPosition);\n      const elements = [];\n      if (!items.length) {\n        return [];\n      }\n      chart.getSortedVisibleDatasetMetas().forEach((meta) => {\n        const index = items[0].index;\n        const element = meta.data[index];\n        if (element && !element.skip) {\n          elements.push({element, datasetIndex: meta.index, index});\n        }\n      });\n      return elements;\n    },\n    dataset(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      let items = options.intersect\n        ? getIntersectItems(chart, position, axis, useFinalPosition) :\n        getNearestItems(chart, position, axis, false, useFinalPosition);\n      if (items.length > 0) {\n        const datasetIndex = items[0].datasetIndex;\n        const data = chart.getDatasetMeta(datasetIndex).data;\n        items = [];\n        for (let i = 0; i < data.length; ++i) {\n          items.push({element: data[i], datasetIndex, index: i});\n        }\n      }\n      return items;\n    },\n    point(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      return getIntersectItems(chart, position, axis, useFinalPosition);\n    },\n    nearest(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      return getNearestItems(chart, position, axis, options.intersect, useFinalPosition);\n    },\n    x(chart, e, options, useFinalPosition) {\n      options.axis = 'x';\n      return getAxisItems(chart, e, options, useFinalPosition);\n    },\n    y(chart, e, options, useFinalPosition) {\n      options.axis = 'y';\n      return getAxisItems(chart, e, options, useFinalPosition);\n    }\n  }\n};\n\nconst LINE_HEIGHT = new RegExp(/^(normal|(\\d+(?:\\.\\d+)?)(px|em|%)?)$/);\nconst FONT_STYLE = new RegExp(/^(normal|italic|initial|inherit|unset|(oblique( -?[0-9]?[0-9]deg)?))$/);\nfunction toLineHeight(value, size) {\n  const matches = ('' + value).match(LINE_HEIGHT);\n  if (!matches || matches[1] === 'normal') {\n    return size * 1.2;\n  }\n  value = +matches[2];\n  switch (matches[3]) {\n  case 'px':\n    return value;\n  case '%':\n    value /= 100;\n    break;\n  }\n  return size * value;\n}\nconst numberOrZero$1 = v => +v || 0;\nfunction _readValueToProps(value, props) {\n  const ret = {};\n  const objProps = isObject(props);\n  const keys = objProps ? Object.keys(props) : props;\n  const read = isObject(value)\n    ? objProps\n      ? prop => valueOrDefault(value[prop], value[props[prop]])\n      : prop => value[prop]\n    : () => value;\n  for (const prop of keys) {\n    ret[prop] = numberOrZero$1(read(prop));\n  }\n  return ret;\n}\nfunction toTRBL(value) {\n  return _readValueToProps(value, {top: 'y', right: 'x', bottom: 'y', left: 'x'});\n}\nfunction toTRBLCorners(value) {\n  return _readValueToProps(value, ['topLeft', 'topRight', 'bottomLeft', 'bottomRight']);\n}\nfunction toPadding(value) {\n  const obj = toTRBL(value);\n  obj.width = obj.left + obj.right;\n  obj.height = obj.top + obj.bottom;\n  return obj;\n}\nfunction toFont(options, fallback) {\n  options = options || {};\n  fallback = fallback || defaults.font;\n  let size = valueOrDefault(options.size, fallback.size);\n  if (typeof size === 'string') {\n    size = parseInt(size, 10);\n  }\n  let style = valueOrDefault(options.style, fallback.style);\n  if (style && !('' + style).match(FONT_STYLE)) {\n    console.warn('Invalid font style specified: \"' + style + '\"');\n    style = '';\n  }\n  const font = {\n    family: valueOrDefault(options.family, fallback.family),\n    lineHeight: toLineHeight(valueOrDefault(options.lineHeight, fallback.lineHeight), size),\n    size,\n    style,\n    weight: valueOrDefault(options.weight, fallback.weight),\n    string: ''\n  };\n  font.string = toFontString(font);\n  return font;\n}\nfunction resolve(inputs, context, index, info) {\n  let cacheable = true;\n  let i, ilen, value;\n  for (i = 0, ilen = inputs.length; i < ilen; ++i) {\n    value = inputs[i];\n    if (value === undefined) {\n      continue;\n    }\n    if (context !== undefined && typeof value === 'function') {\n      value = value(context);\n      cacheable = false;\n    }\n    if (index !== undefined && isArray(value)) {\n      value = value[index % value.length];\n      cacheable = false;\n    }\n    if (value !== undefined) {\n      if (info && !cacheable) {\n        info.cacheable = false;\n      }\n      return value;\n    }\n  }\n}\nfunction _addGrace(minmax, grace) {\n  const {min, max} = minmax;\n  return {\n    min: min - Math.abs(toDimension(grace, min)),\n    max: max + toDimension(grace, max)\n  };\n}\n\nconst STATIC_POSITIONS = ['left', 'top', 'right', 'bottom'];\nfunction filterByPosition(array, position) {\n  return array.filter(v => v.pos === position);\n}\nfunction filterDynamicPositionByAxis(array, axis) {\n  return array.filter(v => STATIC_POSITIONS.indexOf(v.pos) === -1 && v.box.axis === axis);\n}\nfunction sortByWeight(array, reverse) {\n  return array.sort((a, b) => {\n    const v0 = reverse ? b : a;\n    const v1 = reverse ? a : b;\n    return v0.weight === v1.weight ?\n      v0.index - v1.index :\n      v0.weight - v1.weight;\n  });\n}\nfunction wrapBoxes(boxes) {\n  const layoutBoxes = [];\n  let i, ilen, box;\n  for (i = 0, ilen = (boxes || []).length; i < ilen; ++i) {\n    box = boxes[i];\n    layoutBoxes.push({\n      index: i,\n      box,\n      pos: box.position,\n      horizontal: box.isHorizontal(),\n      weight: box.weight\n    });\n  }\n  return layoutBoxes;\n}\nfunction setLayoutDims(layouts, params) {\n  let i, ilen, layout;\n  for (i = 0, ilen = layouts.length; i < ilen; ++i) {\n    layout = layouts[i];\n    if (layout.horizontal) {\n      layout.width = layout.box.fullSize && params.availableWidth;\n      layout.height = params.hBoxMaxHeight;\n    } else {\n      layout.width = params.vBoxMaxWidth;\n      layout.height = layout.box.fullSize && params.availableHeight;\n    }\n  }\n}\nfunction buildLayoutBoxes(boxes) {\n  const layoutBoxes = wrapBoxes(boxes);\n  const fullSize = sortByWeight(layoutBoxes.filter(wrap => wrap.box.fullSize), true);\n  const left = sortByWeight(filterByPosition(layoutBoxes, 'left'), true);\n  const right = sortByWeight(filterByPosition(layoutBoxes, 'right'));\n  const top = sortByWeight(filterByPosition(layoutBoxes, 'top'), true);\n  const bottom = sortByWeight(filterByPosition(layoutBoxes, 'bottom'));\n  const centerHorizontal = filterDynamicPositionByAxis(layoutBoxes, 'x');\n  const centerVertical = filterDynamicPositionByAxis(layoutBoxes, 'y');\n  return {\n    fullSize,\n    leftAndTop: left.concat(top),\n    rightAndBottom: right.concat(centerVertical).concat(bottom).concat(centerHorizontal),\n    chartArea: filterByPosition(layoutBoxes, 'chartArea'),\n    vertical: left.concat(right).concat(centerVertical),\n    horizontal: top.concat(bottom).concat(centerHorizontal)\n  };\n}\nfunction getCombinedMax(maxPadding, chartArea, a, b) {\n  return Math.max(maxPadding[a], chartArea[a]) + Math.max(maxPadding[b], chartArea[b]);\n}\nfunction updateMaxPadding(maxPadding, boxPadding) {\n  maxPadding.top = Math.max(maxPadding.top, boxPadding.top);\n  maxPadding.left = Math.max(maxPadding.left, boxPadding.left);\n  maxPadding.bottom = Math.max(maxPadding.bottom, boxPadding.bottom);\n  maxPadding.right = Math.max(maxPadding.right, boxPadding.right);\n}\nfunction updateDims(chartArea, params, layout) {\n  const box = layout.box;\n  const maxPadding = chartArea.maxPadding;\n  if (!isObject(layout.pos)) {\n    if (layout.size) {\n      chartArea[layout.pos] -= layout.size;\n    }\n    layout.size = layout.horizontal ? box.height : box.width;\n    chartArea[layout.pos] += layout.size;\n  }\n  if (box.getPadding) {\n    updateMaxPadding(maxPadding, box.getPadding());\n  }\n  const newWidth = Math.max(0, params.outerWidth - getCombinedMax(maxPadding, chartArea, 'left', 'right'));\n  const newHeight = Math.max(0, params.outerHeight - getCombinedMax(maxPadding, chartArea, 'top', 'bottom'));\n  const widthChanged = newWidth !== chartArea.w;\n  const heightChanged = newHeight !== chartArea.h;\n  chartArea.w = newWidth;\n  chartArea.h = newHeight;\n  return layout.horizontal\n    ? {same: widthChanged, other: heightChanged}\n    : {same: heightChanged, other: widthChanged};\n}\nfunction handleMaxPadding(chartArea) {\n  const maxPadding = chartArea.maxPadding;\n  function updatePos(pos) {\n    const change = Math.max(maxPadding[pos] - chartArea[pos], 0);\n    chartArea[pos] += change;\n    return change;\n  }\n  chartArea.y += updatePos('top');\n  chartArea.x += updatePos('left');\n  updatePos('right');\n  updatePos('bottom');\n}\nfunction getMargins(horizontal, chartArea) {\n  const maxPadding = chartArea.maxPadding;\n  function marginForPositions(positions) {\n    const margin = {left: 0, top: 0, right: 0, bottom: 0};\n    positions.forEach((pos) => {\n      margin[pos] = Math.max(chartArea[pos], maxPadding[pos]);\n    });\n    return margin;\n  }\n  return horizontal\n    ? marginForPositions(['left', 'right'])\n    : marginForPositions(['top', 'bottom']);\n}\nfunction fitBoxes(boxes, chartArea, params) {\n  const refitBoxes = [];\n  let i, ilen, layout, box, refit, changed;\n  for (i = 0, ilen = boxes.length, refit = 0; i < ilen; ++i) {\n    layout = boxes[i];\n    box = layout.box;\n    box.update(\n      layout.width || chartArea.w,\n      layout.height || chartArea.h,\n      getMargins(layout.horizontal, chartArea)\n    );\n    const {same, other} = updateDims(chartArea, params, layout);\n    refit |= same && refitBoxes.length;\n    changed = changed || other;\n    if (!box.fullSize) {\n      refitBoxes.push(layout);\n    }\n  }\n  return refit && fitBoxes(refitBoxes, chartArea, params) || changed;\n}\nfunction placeBoxes(boxes, chartArea, params) {\n  const userPadding = params.padding;\n  let x = chartArea.x;\n  let y = chartArea.y;\n  let i, ilen, layout, box;\n  for (i = 0, ilen = boxes.length; i < ilen; ++i) {\n    layout = boxes[i];\n    box = layout.box;\n    if (layout.horizontal) {\n      box.left = box.fullSize ? userPadding.left : chartArea.left;\n      box.right = box.fullSize ? params.outerWidth - userPadding.right : chartArea.left + chartArea.w;\n      box.top = y;\n      box.bottom = y + box.height;\n      box.width = box.right - box.left;\n      y = box.bottom;\n    } else {\n      box.left = x;\n      box.right = x + box.width;\n      box.top = box.fullSize ? userPadding.top : chartArea.top;\n      box.bottom = box.fullSize ? params.outerHeight - userPadding.right : chartArea.top + chartArea.h;\n      box.height = box.bottom - box.top;\n      x = box.right;\n    }\n  }\n  chartArea.x = x;\n  chartArea.y = y;\n}\ndefaults.set('layout', {\n  padding: {\n    top: 0,\n    right: 0,\n    bottom: 0,\n    left: 0\n  }\n});\nvar layouts = {\n  addBox(chart, item) {\n    if (!chart.boxes) {\n      chart.boxes = [];\n    }\n    item.fullSize = item.fullSize || false;\n    item.position = item.position || 'top';\n    item.weight = item.weight || 0;\n    item._layers = item._layers || function() {\n      return [{\n        z: 0,\n        draw(chartArea) {\n          item.draw(chartArea);\n        }\n      }];\n    };\n    chart.boxes.push(item);\n  },\n  removeBox(chart, layoutItem) {\n    const index = chart.boxes ? chart.boxes.indexOf(layoutItem) : -1;\n    if (index !== -1) {\n      chart.boxes.splice(index, 1);\n    }\n  },\n  configure(chart, item, options) {\n    item.fullSize = options.fullSize;\n    item.position = options.position;\n    item.weight = options.weight;\n  },\n  update(chart, width, height, minPadding) {\n    if (!chart) {\n      return;\n    }\n    const padding = toPadding(chart.options.layout.padding);\n    const availableWidth = Math.max(width - padding.width, 0);\n    const availableHeight = Math.max(height - padding.height, 0);\n    const boxes = buildLayoutBoxes(chart.boxes);\n    const verticalBoxes = boxes.vertical;\n    const horizontalBoxes = boxes.horizontal;\n    each(chart.boxes, box => {\n      if (typeof box.beforeLayout === 'function') {\n        box.beforeLayout();\n      }\n    });\n    const visibleVerticalBoxCount = verticalBoxes.reduce((total, wrap) =>\n      wrap.box.options && wrap.box.options.display === false ? total : total + 1, 0) || 1;\n    const params = Object.freeze({\n      outerWidth: width,\n      outerHeight: height,\n      padding,\n      availableWidth,\n      availableHeight,\n      vBoxMaxWidth: availableWidth / 2 / visibleVerticalBoxCount,\n      hBoxMaxHeight: availableHeight / 2\n    });\n    const maxPadding = Object.assign({}, padding);\n    updateMaxPadding(maxPadding, toPadding(minPadding));\n    const chartArea = Object.assign({\n      maxPadding,\n      w: availableWidth,\n      h: availableHeight,\n      x: padding.left,\n      y: padding.top\n    }, padding);\n    setLayoutDims(verticalBoxes.concat(horizontalBoxes), params);\n    fitBoxes(boxes.fullSize, chartArea, params);\n    fitBoxes(verticalBoxes, chartArea, params);\n    if (fitBoxes(horizontalBoxes, chartArea, params)) {\n      fitBoxes(verticalBoxes, chartArea, params);\n    }\n    handleMaxPadding(chartArea);\n    placeBoxes(boxes.leftAndTop, chartArea, params);\n    chartArea.x += chartArea.w;\n    chartArea.y += chartArea.h;\n    placeBoxes(boxes.rightAndBottom, chartArea, params);\n    chart.chartArea = {\n      left: chartArea.left,\n      top: chartArea.top,\n      right: chartArea.left + chartArea.w,\n      bottom: chartArea.top + chartArea.h,\n      height: chartArea.h,\n      width: chartArea.w,\n    };\n    each(boxes.chartArea, (layout) => {\n      const box = layout.box;\n      Object.assign(box, chart.chartArea);\n      box.update(chartArea.w, chartArea.h);\n    });\n  }\n};\n\nclass BasePlatform {\n  acquireContext(canvas, aspectRatio) {}\n  releaseContext(context) {\n    return false;\n  }\n  addEventListener(chart, type, listener) {}\n  removeEventListener(chart, type, listener) {}\n  getDevicePixelRatio() {\n    return 1;\n  }\n  getMaximumSize(element, width, height, aspectRatio) {\n    width = Math.max(0, width || element.width);\n    height = height || element.height;\n    return {\n      width,\n      height: Math.max(0, aspectRatio ? Math.floor(width / aspectRatio) : height)\n    };\n  }\n  isAttached(canvas) {\n    return true;\n  }\n}\n\nclass BasicPlatform extends BasePlatform {\n  acquireContext(item) {\n    return item && item.getContext && item.getContext('2d') || null;\n  }\n}\n\nconst EXPANDO_KEY = '$chartjs';\nconst EVENT_TYPES = {\n  touchstart: 'mousedown',\n  touchmove: 'mousemove',\n  touchend: 'mouseup',\n  pointerenter: 'mouseenter',\n  pointerdown: 'mousedown',\n  pointermove: 'mousemove',\n  pointerup: 'mouseup',\n  pointerleave: 'mouseout',\n  pointerout: 'mouseout'\n};\nconst isNullOrEmpty = value => value === null || value === '';\nfunction initCanvas(canvas, aspectRatio) {\n  const style = canvas.style;\n  const renderHeight = canvas.getAttribute('height');\n  const renderWidth = canvas.getAttribute('width');\n  canvas[EXPANDO_KEY] = {\n    initial: {\n      height: renderHeight,\n      width: renderWidth,\n      style: {\n        display: style.display,\n        height: style.height,\n        width: style.width\n      }\n    }\n  };\n  style.display = style.display || 'block';\n  style.boxSizing = style.boxSizing || 'border-box';\n  if (isNullOrEmpty(renderWidth)) {\n    const displayWidth = readUsedSize(canvas, 'width');\n    if (displayWidth !== undefined) {\n      canvas.width = displayWidth;\n    }\n  }\n  if (isNullOrEmpty(renderHeight)) {\n    if (canvas.style.height === '') {\n      canvas.height = canvas.width / (aspectRatio || 2);\n    } else {\n      const displayHeight = readUsedSize(canvas, 'height');\n      if (displayHeight !== undefined) {\n        canvas.height = displayHeight;\n      }\n    }\n  }\n  return canvas;\n}\nconst eventListenerOptions = supportsEventListenerOptions ? {passive: true} : false;\nfunction addListener(node, type, listener) {\n  node.addEventListener(type, listener, eventListenerOptions);\n}\nfunction removeListener(chart, type, listener) {\n  chart.canvas.removeEventListener(type, listener, eventListenerOptions);\n}\nfunction fromNativeEvent(event, chart) {\n  const type = EVENT_TYPES[event.type] || event.type;\n  const {x, y} = getRelativePosition$1(event, chart);\n  return {\n    type,\n    chart,\n    native: event,\n    x: x !== undefined ? x : null,\n    y: y !== undefined ? y : null,\n  };\n}\nfunction createAttachObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const container = canvas && _getParentNode(canvas);\n  const element = container || canvas;\n  const observer = new MutationObserver(entries => {\n    const parent = _getParentNode(element);\n    entries.forEach(entry => {\n      for (let i = 0; i < entry.addedNodes.length; i++) {\n        const added = entry.addedNodes[i];\n        if (added === element || added === parent) {\n          listener(entry.target);\n        }\n      }\n    });\n  });\n  observer.observe(document, {childList: true, subtree: true});\n  return observer;\n}\nfunction createDetachObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const container = canvas && _getParentNode(canvas);\n  if (!container) {\n    return;\n  }\n  const observer = new MutationObserver(entries => {\n    entries.forEach(entry => {\n      for (let i = 0; i < entry.removedNodes.length; i++) {\n        if (entry.removedNodes[i] === canvas) {\n          listener();\n          break;\n        }\n      }\n    });\n  });\n  observer.observe(container, {childList: true});\n  return observer;\n}\nconst drpListeningCharts = new Map();\nlet oldDevicePixelRatio = 0;\nfunction onWindowResize() {\n  const dpr = window.devicePixelRatio;\n  if (dpr === oldDevicePixelRatio) {\n    return;\n  }\n  oldDevicePixelRatio = dpr;\n  drpListeningCharts.forEach((resize, chart) => {\n    if (chart.currentDevicePixelRatio !== dpr) {\n      resize();\n    }\n  });\n}\nfunction listenDevicePixelRatioChanges(chart, resize) {\n  if (!drpListeningCharts.size) {\n    window.addEventListener('resize', onWindowResize);\n  }\n  drpListeningCharts.set(chart, resize);\n}\nfunction unlistenDevicePixelRatioChanges(chart) {\n  drpListeningCharts.delete(chart);\n  if (!drpListeningCharts.size) {\n    window.removeEventListener('resize', onWindowResize);\n  }\n}\nfunction createResizeObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const container = canvas && _getParentNode(canvas);\n  if (!container) {\n    return;\n  }\n  const resize = throttled((width, height) => {\n    const w = container.clientWidth;\n    listener(width, height);\n    if (w < container.clientWidth) {\n      listener();\n    }\n  }, window);\n  const observer = new ResizeObserver(entries => {\n    const entry = entries[0];\n    const width = entry.contentRect.width;\n    const height = entry.contentRect.height;\n    if (width === 0 && height === 0) {\n      return;\n    }\n    resize(width, height);\n  });\n  observer.observe(container);\n  listenDevicePixelRatioChanges(chart, resize);\n  return observer;\n}\nfunction releaseObserver(chart, type, observer) {\n  if (observer) {\n    observer.disconnect();\n  }\n  if (type === 'resize') {\n    unlistenDevicePixelRatioChanges(chart);\n  }\n}\nfunction createProxyAndListen(chart, type, listener) {\n  const canvas = chart.canvas;\n  const proxy = throttled((event) => {\n    if (chart.ctx !== null) {\n      listener(fromNativeEvent(event, chart));\n    }\n  }, chart, (args) => {\n    const event = args[0];\n    return [event, event.offsetX, event.offsetY];\n  });\n  addListener(canvas, type, proxy);\n  return proxy;\n}\nclass DomPlatform extends BasePlatform {\n  acquireContext(canvas, aspectRatio) {\n    const context = canvas && canvas.getContext && canvas.getContext('2d');\n    if (context && context.canvas === canvas) {\n      initCanvas(canvas, aspectRatio);\n      return context;\n    }\n    return null;\n  }\n  releaseContext(context) {\n    const canvas = context.canvas;\n    if (!canvas[EXPANDO_KEY]) {\n      return false;\n    }\n    const initial = canvas[EXPANDO_KEY].initial;\n    ['height', 'width'].forEach((prop) => {\n      const value = initial[prop];\n      if (isNullOrUndef(value)) {\n        canvas.removeAttribute(prop);\n      } else {\n        canvas.setAttribute(prop, value);\n      }\n    });\n    const style = initial.style || {};\n    Object.keys(style).forEach((key) => {\n      canvas.style[key] = style[key];\n    });\n    canvas.width = canvas.width;\n    delete canvas[EXPANDO_KEY];\n    return true;\n  }\n  addEventListener(chart, type, listener) {\n    this.removeEventListener(chart, type);\n    const proxies = chart.$proxies || (chart.$proxies = {});\n    const handlers = {\n      attach: createAttachObserver,\n      detach: createDetachObserver,\n      resize: createResizeObserver\n    };\n    const handler = handlers[type] || createProxyAndListen;\n    proxies[type] = handler(chart, type, listener);\n  }\n  removeEventListener(chart, type) {\n    const proxies = chart.$proxies || (chart.$proxies = {});\n    const proxy = proxies[type];\n    if (!proxy) {\n      return;\n    }\n    const handlers = {\n      attach: releaseObserver,\n      detach: releaseObserver,\n      resize: releaseObserver\n    };\n    const handler = handlers[type] || removeListener;\n    handler(chart, type, proxy);\n    proxies[type] = undefined;\n  }\n  getDevicePixelRatio() {\n    return window.devicePixelRatio;\n  }\n  getMaximumSize(canvas, width, height, aspectRatio) {\n    return getMaximumSize(canvas, width, height, aspectRatio);\n  }\n  isAttached(canvas) {\n    const container = _getParentNode(canvas);\n    return !!(container && _getParentNode(container));\n  }\n}\n\nvar platforms = /*#__PURE__*/Object.freeze({\n__proto__: null,\nBasePlatform: BasePlatform,\nBasicPlatform: BasicPlatform,\nDomPlatform: DomPlatform\n});\n\nconst atEdge = (t) => t === 0 || t === 1;\nconst elasticIn = (t, s, p) => -(Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * TAU / p));\nconst elasticOut = (t, s, p) => Math.pow(2, -10 * t) * Math.sin((t - s) * TAU / p) + 1;\nconst effects = {\n  linear: t => t,\n  easeInQuad: t => t * t,\n  easeOutQuad: t => -t * (t - 2),\n  easeInOutQuad: t => ((t /= 0.5) < 1)\n    ? 0.5 * t * t\n    : -0.5 * ((--t) * (t - 2) - 1),\n  easeInCubic: t => t * t * t,\n  easeOutCubic: t => (t -= 1) * t * t + 1,\n  easeInOutCubic: t => ((t /= 0.5) < 1)\n    ? 0.5 * t * t * t\n    : 0.5 * ((t -= 2) * t * t + 2),\n  easeInQuart: t => t * t * t * t,\n  easeOutQuart: t => -((t -= 1) * t * t * t - 1),\n  easeInOutQuart: t => ((t /= 0.5) < 1)\n    ? 0.5 * t * t * t * t\n    : -0.5 * ((t -= 2) * t * t * t - 2),\n  easeInQuint: t => t * t * t * t * t,\n  easeOutQuint: t => (t -= 1) * t * t * t * t + 1,\n  easeInOutQuint: t => ((t /= 0.5) < 1)\n    ? 0.5 * t * t * t * t * t\n    : 0.5 * ((t -= 2) * t * t * t * t + 2),\n  easeInSine: t => -Math.cos(t * HALF_PI) + 1,\n  easeOutSine: t => Math.sin(t * HALF_PI),\n  easeInOutSine: t => -0.5 * (Math.cos(PI * t) - 1),\n  easeInExpo: t => (t === 0) ? 0 : Math.pow(2, 10 * (t - 1)),\n  easeOutExpo: t => (t === 1) ? 1 : -Math.pow(2, -10 * t) + 1,\n  easeInOutExpo: t => atEdge(t) ? t : t < 0.5\n    ? 0.5 * Math.pow(2, 10 * (t * 2 - 1))\n    : 0.5 * (-Math.pow(2, -10 * (t * 2 - 1)) + 2),\n  easeInCirc: t => (t >= 1) ? t : -(Math.sqrt(1 - t * t) - 1),\n  easeOutCirc: t => Math.sqrt(1 - (t -= 1) * t),\n  easeInOutCirc: t => ((t /= 0.5) < 1)\n    ? -0.5 * (Math.sqrt(1 - t * t) - 1)\n    : 0.5 * (Math.sqrt(1 - (t -= 2) * t) + 1),\n  easeInElastic: t => atEdge(t) ? t : elasticIn(t, 0.075, 0.3),\n  easeOutElastic: t => atEdge(t) ? t : elasticOut(t, 0.075, 0.3),\n  easeInOutElastic(t) {\n    const s = 0.1125;\n    const p = 0.45;\n    return atEdge(t) ? t :\n      t < 0.5\n        ? 0.5 * elasticIn(t * 2, s, p)\n        : 0.5 + 0.5 * elasticOut(t * 2 - 1, s, p);\n  },\n  easeInBack(t) {\n    const s = 1.70158;\n    return t * t * ((s + 1) * t - s);\n  },\n  easeOutBack(t) {\n    const s = 1.70158;\n    return (t -= 1) * t * ((s + 1) * t + s) + 1;\n  },\n  easeInOutBack(t) {\n    let s = 1.70158;\n    if ((t /= 0.5) < 1) {\n      return 0.5 * (t * t * (((s *= (1.525)) + 1) * t - s));\n    }\n    return 0.5 * ((t -= 2) * t * (((s *= (1.525)) + 1) * t + s) + 2);\n  },\n  easeInBounce: t => 1 - effects.easeOutBounce(1 - t),\n  easeOutBounce(t) {\n    const m = 7.5625;\n    const d = 2.75;\n    if (t < (1 / d)) {\n      return m * t * t;\n    }\n    if (t < (2 / d)) {\n      return m * (t -= (1.5 / d)) * t + 0.75;\n    }\n    if (t < (2.5 / d)) {\n      return m * (t -= (2.25 / d)) * t + 0.9375;\n    }\n    return m * (t -= (2.625 / d)) * t + 0.984375;\n  },\n  easeInOutBounce: t => (t < 0.5)\n    ? effects.easeInBounce(t * 2) * 0.5\n    : effects.easeOutBounce(t * 2 - 1) * 0.5 + 0.5,\n};\n\nconst transparent = 'transparent';\nconst interpolators = {\n  boolean(from, to, factor) {\n    return factor > 0.5 ? to : from;\n  },\n  color(from, to, factor) {\n    const c0 = color(from || transparent);\n    const c1 = c0.valid && color(to || transparent);\n    return c1 && c1.valid\n      ? c1.mix(c0, factor).hexString()\n      : to;\n  },\n  number(from, to, factor) {\n    return from + (to - from) * factor;\n  }\n};\nclass Animation {\n  constructor(cfg, target, prop, to) {\n    const currentValue = target[prop];\n    to = resolve([cfg.to, to, currentValue, cfg.from]);\n    const from = resolve([cfg.from, currentValue, to]);\n    this._active = true;\n    this._fn = cfg.fn || interpolators[cfg.type || typeof from];\n    this._easing = effects[cfg.easing] || effects.linear;\n    this._start = Math.floor(Date.now() + (cfg.delay || 0));\n    this._duration = this._total = Math.floor(cfg.duration);\n    this._loop = !!cfg.loop;\n    this._target = target;\n    this._prop = prop;\n    this._from = from;\n    this._to = to;\n    this._promises = undefined;\n  }\n  active() {\n    return this._active;\n  }\n  update(cfg, to, date) {\n    const me = this;\n    if (me._active) {\n      me._notify(false);\n      const currentValue = me._target[me._prop];\n      const elapsed = date - me._start;\n      const remain = me._duration - elapsed;\n      me._start = date;\n      me._duration = Math.floor(Math.max(remain, cfg.duration));\n      me._total += elapsed;\n      me._loop = !!cfg.loop;\n      me._to = resolve([cfg.to, to, currentValue, cfg.from]);\n      me._from = resolve([cfg.from, currentValue, to]);\n    }\n  }\n  cancel() {\n    const me = this;\n    if (me._active) {\n      me.tick(Date.now());\n      me._active = false;\n      me._notify(false);\n    }\n  }\n  tick(date) {\n    const me = this;\n    const elapsed = date - me._start;\n    const duration = me._duration;\n    const prop = me._prop;\n    const from = me._from;\n    const loop = me._loop;\n    const to = me._to;\n    let factor;\n    me._active = from !== to && (loop || (elapsed < duration));\n    if (!me._active) {\n      me._target[prop] = to;\n      me._notify(true);\n      return;\n    }\n    if (elapsed < 0) {\n      me._target[prop] = from;\n      return;\n    }\n    factor = (elapsed / duration) % 2;\n    factor = loop && factor > 1 ? 2 - factor : factor;\n    factor = me._easing(Math.min(1, Math.max(0, factor)));\n    me._target[prop] = me._fn(from, to, factor);\n  }\n  wait() {\n    const promises = this._promises || (this._promises = []);\n    return new Promise((res, rej) => {\n      promises.push({res, rej});\n    });\n  }\n  _notify(resolved) {\n    const method = resolved ? 'res' : 'rej';\n    const promises = this._promises || [];\n    for (let i = 0; i < promises.length; i++) {\n      promises[i][method]();\n    }\n  }\n}\n\nconst numbers = ['x', 'y', 'borderWidth', 'radius', 'tension'];\nconst colors = ['color', 'borderColor', 'backgroundColor'];\ndefaults.set('animation', {\n  delay: undefined,\n  duration: 1000,\n  easing: 'easeOutQuart',\n  fn: undefined,\n  from: undefined,\n  loop: undefined,\n  to: undefined,\n  type: undefined,\n});\nconst animationOptions = Object.keys(defaults.animation);\ndefaults.describe('animation', {\n  _fallback: false,\n  _indexable: false,\n  _scriptable: (name) => name !== 'onProgress' && name !== 'onComplete' && name !== 'fn',\n});\ndefaults.set('animations', {\n  colors: {\n    type: 'color',\n    properties: colors\n  },\n  numbers: {\n    type: 'number',\n    properties: numbers\n  },\n});\ndefaults.describe('animations', {\n  _fallback: 'animation',\n});\ndefaults.set('transitions', {\n  active: {\n    animation: {\n      duration: 400\n    }\n  },\n  resize: {\n    animation: {\n      duration: 0\n    }\n  },\n  show: {\n    animations: {\n      colors: {\n        from: 'transparent'\n      },\n      visible: {\n        type: 'boolean',\n        duration: 0\n      },\n    }\n  },\n  hide: {\n    animations: {\n      colors: {\n        to: 'transparent'\n      },\n      visible: {\n        type: 'boolean',\n        easing: 'linear',\n        fn: v => v | 0\n      },\n    }\n  }\n});\nclass Animations {\n  constructor(chart, config) {\n    this._chart = chart;\n    this._properties = new Map();\n    this.configure(config);\n  }\n  configure(config) {\n    if (!isObject(config)) {\n      return;\n    }\n    const animatedProps = this._properties;\n    Object.getOwnPropertyNames(config).forEach(key => {\n      const cfg = config[key];\n      if (!isObject(cfg)) {\n        return;\n      }\n      const resolved = {};\n      for (const option of animationOptions) {\n        resolved[option] = cfg[option];\n      }\n      (isArray(cfg.properties) && cfg.properties || [key]).forEach((prop) => {\n        if (prop === key || !animatedProps.has(prop)) {\n          animatedProps.set(prop, resolved);\n        }\n      });\n    });\n  }\n  _animateOptions(target, values) {\n    const newOptions = values.options;\n    const options = resolveTargetOptions(target, newOptions);\n    if (!options) {\n      return [];\n    }\n    const animations = this._createAnimations(options, newOptions);\n    if (newOptions.$shared) {\n      awaitAll(target.options.$animations, newOptions).then(() => {\n        target.options = newOptions;\n      }, () => {\n      });\n    }\n    return animations;\n  }\n  _createAnimations(target, values) {\n    const animatedProps = this._properties;\n    const animations = [];\n    const running = target.$animations || (target.$animations = {});\n    const props = Object.keys(values);\n    const date = Date.now();\n    let i;\n    for (i = props.length - 1; i >= 0; --i) {\n      const prop = props[i];\n      if (prop.charAt(0) === '$') {\n        continue;\n      }\n      if (prop === 'options') {\n        animations.push(...this._animateOptions(target, values));\n        continue;\n      }\n      const value = values[prop];\n      let animation = running[prop];\n      const cfg = animatedProps.get(prop);\n      if (animation) {\n        if (cfg && animation.active()) {\n          animation.update(cfg, value, date);\n          continue;\n        } else {\n          animation.cancel();\n        }\n      }\n      if (!cfg || !cfg.duration) {\n        target[prop] = value;\n        continue;\n      }\n      running[prop] = animation = new Animation(cfg, target, prop, value);\n      animations.push(animation);\n    }\n    return animations;\n  }\n  update(target, values) {\n    if (this._properties.size === 0) {\n      Object.assign(target, values);\n      return;\n    }\n    const animations = this._createAnimations(target, values);\n    if (animations.length) {\n      animator.add(this._chart, animations);\n      return true;\n    }\n  }\n}\nfunction awaitAll(animations, properties) {\n  const running = [];\n  const keys = Object.keys(properties);\n  for (let i = 0; i < keys.length; i++) {\n    const anim = animations[keys[i]];\n    if (anim && anim.active()) {\n      running.push(anim.wait());\n    }\n  }\n  return Promise.all(running);\n}\nfunction resolveTargetOptions(target, newOptions) {\n  if (!newOptions) {\n    return;\n  }\n  let options = target.options;\n  if (!options) {\n    target.options = newOptions;\n    return;\n  }\n  if (options.$shared) {\n    target.options = options = Object.assign({}, options, {$shared: false, $animations: {}});\n  }\n  return options;\n}\n\nfunction scaleClip(scale, allowedOverflow) {\n  const opts = scale && scale.options || {};\n  const reverse = opts.reverse;\n  const min = opts.min === undefined ? allowedOverflow : 0;\n  const max = opts.max === undefined ? allowedOverflow : 0;\n  return {\n    start: reverse ? max : min,\n    end: reverse ? min : max\n  };\n}\nfunction defaultClip(xScale, yScale, allowedOverflow) {\n  if (allowedOverflow === false) {\n    return false;\n  }\n  const x = scaleClip(xScale, allowedOverflow);\n  const y = scaleClip(yScale, allowedOverflow);\n  return {\n    top: y.end,\n    right: x.end,\n    bottom: y.start,\n    left: x.start\n  };\n}\nfunction toClip(value) {\n  let t, r, b, l;\n  if (isObject(value)) {\n    t = value.top;\n    r = value.right;\n    b = value.bottom;\n    l = value.left;\n  } else {\n    t = r = b = l = value;\n  }\n  return {\n    top: t,\n    right: r,\n    bottom: b,\n    left: l\n  };\n}\nfunction getSortedDatasetIndices(chart, filterVisible) {\n  const keys = [];\n  const metasets = chart._getSortedDatasetMetas(filterVisible);\n  let i, ilen;\n  for (i = 0, ilen = metasets.length; i < ilen; ++i) {\n    keys.push(metasets[i].index);\n  }\n  return keys;\n}\nfunction applyStack(stack, value, dsIndex, options) {\n  const keys = stack.keys;\n  const singleMode = options.mode === 'single';\n  let i, ilen, datasetIndex, otherValue;\n  if (value === null) {\n    return;\n  }\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\n    datasetIndex = +keys[i];\n    if (datasetIndex === dsIndex) {\n      if (options.all) {\n        continue;\n      }\n      break;\n    }\n    otherValue = stack.values[datasetIndex];\n    if (isNumberFinite(otherValue) && (singleMode || (value === 0 || sign(value) === sign(otherValue)))) {\n      value += otherValue;\n    }\n  }\n  return value;\n}\nfunction convertObjectDataToArray(data) {\n  const keys = Object.keys(data);\n  const adata = new Array(keys.length);\n  let i, ilen, key;\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\n    key = keys[i];\n    adata[i] = {\n      x: key,\n      y: data[key]\n    };\n  }\n  return adata;\n}\nfunction isStacked(scale, meta) {\n  const stacked = scale && scale.options.stacked;\n  return stacked || (stacked === undefined && meta.stack !== undefined);\n}\nfunction getStackKey(indexScale, valueScale, meta) {\n  return `${indexScale.id}.${valueScale.id}.${meta.stack || meta.type}`;\n}\nfunction getUserBounds(scale) {\n  const {min, max, minDefined, maxDefined} = scale.getUserBounds();\n  return {\n    min: minDefined ? min : Number.NEGATIVE_INFINITY,\n    max: maxDefined ? max : Number.POSITIVE_INFINITY\n  };\n}\nfunction getOrCreateStack(stacks, stackKey, indexValue) {\n  const subStack = stacks[stackKey] || (stacks[stackKey] = {});\n  return subStack[indexValue] || (subStack[indexValue] = {});\n}\nfunction getLastIndexInStack(stack, vScale, positive) {\n  for (const meta of vScale.getMatchingVisibleMetas('bar').reverse()) {\n    const value = stack[meta.index];\n    if ((positive && value > 0) || (!positive && value < 0)) {\n      return meta.index;\n    }\n  }\n  return null;\n}\nfunction updateStacks(controller, parsed) {\n  const {chart, _cachedMeta: meta} = controller;\n  const stacks = chart._stacks || (chart._stacks = {});\n  const {iScale, vScale, index: datasetIndex} = meta;\n  const iAxis = iScale.axis;\n  const vAxis = vScale.axis;\n  const key = getStackKey(iScale, vScale, meta);\n  const ilen = parsed.length;\n  let stack;\n  for (let i = 0; i < ilen; ++i) {\n    const item = parsed[i];\n    const {[iAxis]: index, [vAxis]: value} = item;\n    const itemStacks = item._stacks || (item._stacks = {});\n    stack = itemStacks[vAxis] = getOrCreateStack(stacks, key, index);\n    stack[datasetIndex] = value;\n    stack._top = getLastIndexInStack(stack, vScale, true);\n    stack._bottom = getLastIndexInStack(stack, vScale, false);\n  }\n}\nfunction getFirstScaleId(chart, axis) {\n  const scales = chart.scales;\n  return Object.keys(scales).filter(key => scales[key].axis === axis).shift();\n}\nfunction createDatasetContext(parent, index) {\n  return Object.assign(Object.create(parent),\n    {\n      active: false,\n      dataset: undefined,\n      datasetIndex: index,\n      index,\n      mode: 'default',\n      type: 'dataset'\n    }\n  );\n}\nfunction createDataContext(parent, index, element) {\n  return Object.assign(Object.create(parent), {\n    active: false,\n    dataIndex: index,\n    parsed: undefined,\n    raw: undefined,\n    element,\n    index,\n    mode: 'default',\n    type: 'data'\n  });\n}\nfunction clearStacks(meta, items) {\n  const axis = meta.vScale && meta.vScale.axis;\n  if (!axis) {\n    return;\n  }\n  items = items || meta._parsed;\n  for (const parsed of items) {\n    const stacks = parsed._stacks;\n    if (!stacks || stacks[axis] === undefined || stacks[axis][meta.index] === undefined) {\n      return;\n    }\n    delete stacks[axis][meta.index];\n  }\n}\nconst isDirectUpdateMode = (mode) => mode === 'reset' || mode === 'none';\nconst cloneIfNotShared = (cached, shared) => shared ? cached : Object.assign({}, cached);\nclass DatasetController {\n  constructor(chart, datasetIndex) {\n    this.chart = chart;\n    this._ctx = chart.ctx;\n    this.index = datasetIndex;\n    this._cachedDataOpts = {};\n    this._cachedMeta = this.getMeta();\n    this._type = this._cachedMeta.type;\n    this.options = undefined;\n    this._parsing = false;\n    this._data = undefined;\n    this._objectData = undefined;\n    this._sharedOptions = undefined;\n    this._drawStart = undefined;\n    this._drawCount = undefined;\n    this.enableOptionSharing = false;\n    this.$context = undefined;\n    this._syncList = [];\n    this.initialize();\n  }\n  initialize() {\n    const me = this;\n    const meta = me._cachedMeta;\n    me.configure();\n    me.linkScales();\n    meta._stacked = isStacked(meta.vScale, meta);\n    me.addElements();\n  }\n  updateIndex(datasetIndex) {\n    if (this.index !== datasetIndex) {\n      clearStacks(this._cachedMeta);\n    }\n    this.index = datasetIndex;\n  }\n  linkScales() {\n    const me = this;\n    const chart = me.chart;\n    const meta = me._cachedMeta;\n    const dataset = me.getDataset();\n    const chooseId = (axis, x, y, r) => axis === 'x' ? x : axis === 'r' ? r : y;\n    const xid = meta.xAxisID = valueOrDefault(dataset.xAxisID, getFirstScaleId(chart, 'x'));\n    const yid = meta.yAxisID = valueOrDefault(dataset.yAxisID, getFirstScaleId(chart, 'y'));\n    const rid = meta.rAxisID = valueOrDefault(dataset.rAxisID, getFirstScaleId(chart, 'r'));\n    const indexAxis = meta.indexAxis;\n    const iid = meta.iAxisID = chooseId(indexAxis, xid, yid, rid);\n    const vid = meta.vAxisID = chooseId(indexAxis, yid, xid, rid);\n    meta.xScale = me.getScaleForId(xid);\n    meta.yScale = me.getScaleForId(yid);\n    meta.rScale = me.getScaleForId(rid);\n    meta.iScale = me.getScaleForId(iid);\n    meta.vScale = me.getScaleForId(vid);\n  }\n  getDataset() {\n    return this.chart.data.datasets[this.index];\n  }\n  getMeta() {\n    return this.chart.getDatasetMeta(this.index);\n  }\n  getScaleForId(scaleID) {\n    return this.chart.scales[scaleID];\n  }\n  _getOtherScale(scale) {\n    const meta = this._cachedMeta;\n    return scale === meta.iScale\n      ? meta.vScale\n      : meta.iScale;\n  }\n  reset() {\n    this._update('reset');\n  }\n  _destroy() {\n    const meta = this._cachedMeta;\n    if (this._data) {\n      unlistenArrayEvents(this._data, this);\n    }\n    if (meta._stacked) {\n      clearStacks(meta);\n    }\n  }\n  _dataCheck() {\n    const me = this;\n    const dataset = me.getDataset();\n    const data = dataset.data || (dataset.data = []);\n    const _data = me._data;\n    if (isObject(data)) {\n      me._data = convertObjectDataToArray(data);\n    } else if (_data !== data) {\n      if (_data) {\n        unlistenArrayEvents(_data, me);\n        const meta = me._cachedMeta;\n        clearStacks(meta);\n        meta._parsed = [];\n      }\n      if (data && Object.isExtensible(data)) {\n        listenArrayEvents(data, me);\n      }\n      me._syncList = [];\n      me._data = data;\n    }\n  }\n  addElements() {\n    const me = this;\n    const meta = me._cachedMeta;\n    me._dataCheck();\n    if (me.datasetElementType) {\n      meta.dataset = new me.datasetElementType();\n    }\n  }\n  buildOrUpdateElements(resetNewElements) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const dataset = me.getDataset();\n    let stackChanged = false;\n    me._dataCheck();\n    const oldStacked = meta._stacked;\n    meta._stacked = isStacked(meta.vScale, meta);\n    if (meta.stack !== dataset.stack) {\n      stackChanged = true;\n      clearStacks(meta);\n      meta.stack = dataset.stack;\n    }\n    me._resyncElements(resetNewElements);\n    if (stackChanged || oldStacked !== meta._stacked) {\n      updateStacks(me, meta._parsed);\n    }\n  }\n  configure() {\n    const me = this;\n    const config = me.chart.config;\n    const scopeKeys = config.datasetScopeKeys(me._type);\n    const scopes = config.getOptionScopes(me.getDataset(), scopeKeys, true);\n    me.options = config.createResolver(scopes, me.getContext());\n    me._parsing = me.options.parsing;\n  }\n  parse(start, count) {\n    const me = this;\n    const {_cachedMeta: meta, _data: data} = me;\n    const {iScale, _stacked} = meta;\n    const iAxis = iScale.axis;\n    let sorted = start === 0 && count === data.length ? true : meta._sorted;\n    let prev = start > 0 && meta._parsed[start - 1];\n    let i, cur, parsed;\n    if (me._parsing === false) {\n      meta._parsed = data;\n      meta._sorted = true;\n      parsed = data;\n    } else {\n      if (isArray(data[start])) {\n        parsed = me.parseArrayData(meta, data, start, count);\n      } else if (isObject(data[start])) {\n        parsed = me.parseObjectData(meta, data, start, count);\n      } else {\n        parsed = me.parsePrimitiveData(meta, data, start, count);\n      }\n      const isNotInOrderComparedToPrev = () => cur[iAxis] === null || (prev && cur[iAxis] < prev[iAxis]);\n      for (i = 0; i < count; ++i) {\n        meta._parsed[i + start] = cur = parsed[i];\n        if (sorted) {\n          if (isNotInOrderComparedToPrev()) {\n            sorted = false;\n          }\n          prev = cur;\n        }\n      }\n      meta._sorted = sorted;\n    }\n    if (_stacked) {\n      updateStacks(me, parsed);\n    }\n  }\n  parsePrimitiveData(meta, data, start, count) {\n    const {iScale, vScale} = meta;\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const labels = iScale.getLabels();\n    const singleScale = iScale === vScale;\n    const parsed = new Array(count);\n    let i, ilen, index;\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      parsed[i] = {\n        [iAxis]: singleScale || iScale.parse(labels[index], index),\n        [vAxis]: vScale.parse(data[index], index)\n      };\n    }\n    return parsed;\n  }\n  parseArrayData(meta, data, start, count) {\n    const {xScale, yScale} = meta;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      item = data[index];\n      parsed[i] = {\n        x: xScale.parse(item[0], index),\n        y: yScale.parse(item[1], index)\n      };\n    }\n    return parsed;\n  }\n  parseObjectData(meta, data, start, count) {\n    const {xScale, yScale} = meta;\n    const {xAxisKey = 'x', yAxisKey = 'y'} = this._parsing;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      item = data[index];\n      parsed[i] = {\n        x: xScale.parse(resolveObjectKey(item, xAxisKey), index),\n        y: yScale.parse(resolveObjectKey(item, yAxisKey), index)\n      };\n    }\n    return parsed;\n  }\n  getParsed(index) {\n    return this._cachedMeta._parsed[index];\n  }\n  getDataElement(index) {\n    return this._cachedMeta.data[index];\n  }\n  applyStack(scale, parsed, mode) {\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const value = parsed[scale.axis];\n    const stack = {\n      keys: getSortedDatasetIndices(chart, true),\n      values: parsed._stacks[scale.axis]\n    };\n    return applyStack(stack, value, meta.index, {mode});\n  }\n  updateRangeFromParsed(range, scale, parsed, stack) {\n    const parsedValue = parsed[scale.axis];\n    let value = parsedValue === null ? NaN : parsedValue;\n    const values = stack && parsed._stacks[scale.axis];\n    if (stack && values) {\n      stack.values = values;\n      range.min = Math.min(range.min, value);\n      range.max = Math.max(range.max, value);\n      value = applyStack(stack, parsedValue, this._cachedMeta.index, {all: true});\n    }\n    range.min = Math.min(range.min, value);\n    range.max = Math.max(range.max, value);\n  }\n  getMinMax(scale, canStack) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const _parsed = meta._parsed;\n    const sorted = meta._sorted && scale === meta.iScale;\n    const ilen = _parsed.length;\n    const otherScale = me._getOtherScale(scale);\n    const stack = canStack && meta._stacked && {keys: getSortedDatasetIndices(me.chart, true), values: null};\n    const range = {min: Number.POSITIVE_INFINITY, max: Number.NEGATIVE_INFINITY};\n    const {min: otherMin, max: otherMax} = getUserBounds(otherScale);\n    let i, value, parsed, otherValue;\n    function _skip() {\n      parsed = _parsed[i];\n      value = parsed[scale.axis];\n      otherValue = parsed[otherScale.axis];\n      return !isNumberFinite(value) || otherMin > otherValue || otherMax < otherValue;\n    }\n    for (i = 0; i < ilen; ++i) {\n      if (_skip()) {\n        continue;\n      }\n      me.updateRangeFromParsed(range, scale, parsed, stack);\n      if (sorted) {\n        break;\n      }\n    }\n    if (sorted) {\n      for (i = ilen - 1; i >= 0; --i) {\n        if (_skip()) {\n          continue;\n        }\n        me.updateRangeFromParsed(range, scale, parsed, stack);\n        break;\n      }\n    }\n    return range;\n  }\n  getAllParsedValues(scale) {\n    const parsed = this._cachedMeta._parsed;\n    const values = [];\n    let i, ilen, value;\n    for (i = 0, ilen = parsed.length; i < ilen; ++i) {\n      value = parsed[i][scale.axis];\n      if (isNumberFinite(value)) {\n        values.push(value);\n      }\n    }\n    return values;\n  }\n  getMaxOverflow() {\n    return false;\n  }\n  getLabelAndValue(index) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const iScale = meta.iScale;\n    const vScale = meta.vScale;\n    const parsed = me.getParsed(index);\n    return {\n      label: iScale ? '' + iScale.getLabelForValue(parsed[iScale.axis]) : '',\n      value: vScale ? '' + vScale.getLabelForValue(parsed[vScale.axis]) : ''\n    };\n  }\n  _update(mode) {\n    const me = this;\n    const meta = me._cachedMeta;\n    me.configure();\n    me._cachedDataOpts = {};\n    me.update(mode || 'default');\n    meta._clip = toClip(valueOrDefault(me.options.clip, defaultClip(meta.xScale, meta.yScale, me.getMaxOverflow())));\n  }\n  update(mode) {}\n  draw() {\n    const me = this;\n    const ctx = me._ctx;\n    const chart = me.chart;\n    const meta = me._cachedMeta;\n    const elements = meta.data || [];\n    const area = chart.chartArea;\n    const active = [];\n    const start = me._drawStart || 0;\n    const count = me._drawCount || (elements.length - start);\n    let i;\n    if (meta.dataset) {\n      meta.dataset.draw(ctx, area, start, count);\n    }\n    for (i = start; i < start + count; ++i) {\n      const element = elements[i];\n      if (element.active) {\n        active.push(element);\n      } else {\n        element.draw(ctx, area);\n      }\n    }\n    for (i = 0; i < active.length; ++i) {\n      active[i].draw(ctx, area);\n    }\n  }\n  getStyle(index, active) {\n    const mode = active ? 'active' : 'default';\n    return index === undefined && this._cachedMeta.dataset\n      ? this.resolveDatasetElementOptions(mode)\n      : this.resolveDataElementOptions(index || 0, mode);\n  }\n  getContext(index, active, mode) {\n    const me = this;\n    const dataset = me.getDataset();\n    let context;\n    if (index >= 0 && index < me._cachedMeta.data.length) {\n      const element = me._cachedMeta.data[index];\n      context = element.$context ||\n        (element.$context = createDataContext(me.getContext(), index, element));\n      context.parsed = me.getParsed(index);\n      context.raw = dataset.data[index];\n      context.index = context.dataIndex = index;\n    } else {\n      context = me.$context ||\n        (me.$context = createDatasetContext(me.chart.getContext(), me.index));\n      context.dataset = dataset;\n      context.index = context.datasetIndex = me.index;\n    }\n    context.active = !!active;\n    context.mode = mode;\n    return context;\n  }\n  resolveDatasetElementOptions(mode) {\n    return this._resolveElementOptions(this.datasetElementType.id, mode);\n  }\n  resolveDataElementOptions(index, mode) {\n    return this._resolveElementOptions(this.dataElementType.id, mode, index);\n  }\n  _resolveElementOptions(elementType, mode = 'default', index) {\n    const me = this;\n    const active = mode === 'active';\n    const cache = me._cachedDataOpts;\n    const cacheKey = elementType + '-' + mode;\n    const cached = cache[cacheKey];\n    const sharing = me.enableOptionSharing && defined(index);\n    if (cached) {\n      return cloneIfNotShared(cached, sharing);\n    }\n    const config = me.chart.config;\n    const scopeKeys = config.datasetElementScopeKeys(me._type, elementType);\n    const prefixes = active ? [`${elementType}Hover`, 'hover', elementType, ''] : [elementType, ''];\n    const scopes = config.getOptionScopes(me.getDataset(), scopeKeys);\n    const names = Object.keys(defaults.elements[elementType]);\n    const context = () => me.getContext(index, active);\n    const values = config.resolveNamedOptions(scopes, names, context, prefixes);\n    if (values.$shared) {\n      values.$shared = sharing;\n      cache[cacheKey] = Object.freeze(cloneIfNotShared(values, sharing));\n    }\n    return values;\n  }\n  _resolveAnimations(index, transition, active) {\n    const me = this;\n    const chart = me.chart;\n    const cache = me._cachedDataOpts;\n    const cacheKey = `animation-${transition}`;\n    const cached = cache[cacheKey];\n    if (cached) {\n      return cached;\n    }\n    let options;\n    if (chart.options.animation !== false) {\n      const config = me.chart.config;\n      const scopeKeys = config.datasetAnimationScopeKeys(me._type, transition);\n      const scopes = config.getOptionScopes(me.getDataset(), scopeKeys);\n      options = config.createResolver(scopes, me.getContext(index, active, transition));\n    }\n    const animations = new Animations(chart, options && options.animations);\n    if (options && options._cacheable) {\n      cache[cacheKey] = Object.freeze(animations);\n    }\n    return animations;\n  }\n  getSharedOptions(options) {\n    if (!options.$shared) {\n      return;\n    }\n    return this._sharedOptions || (this._sharedOptions = Object.assign({}, options));\n  }\n  includeOptions(mode, sharedOptions) {\n    return !sharedOptions || isDirectUpdateMode(mode) || this.chart._animationsDisabled;\n  }\n  updateElement(element, index, properties, mode) {\n    if (isDirectUpdateMode(mode)) {\n      Object.assign(element, properties);\n    } else {\n      this._resolveAnimations(index, mode).update(element, properties);\n    }\n  }\n  updateSharedOptions(sharedOptions, mode, newOptions) {\n    if (sharedOptions && !isDirectUpdateMode(mode)) {\n      this._resolveAnimations(undefined, mode).update(sharedOptions, newOptions);\n    }\n  }\n  _setStyle(element, index, mode, active) {\n    element.active = active;\n    const options = this.getStyle(index, active);\n    this._resolveAnimations(index, mode, active).update(element, {\n      options: (!active && this.getSharedOptions(options)) || options\n    });\n  }\n  removeHoverStyle(element, datasetIndex, index) {\n    this._setStyle(element, index, 'active', false);\n  }\n  setHoverStyle(element, datasetIndex, index) {\n    this._setStyle(element, index, 'active', true);\n  }\n  _removeDatasetHoverStyle() {\n    const element = this._cachedMeta.dataset;\n    if (element) {\n      this._setStyle(element, undefined, 'active', false);\n    }\n  }\n  _setDatasetHoverStyle() {\n    const element = this._cachedMeta.dataset;\n    if (element) {\n      this._setStyle(element, undefined, 'active', true);\n    }\n  }\n  _resyncElements(resetNewElements) {\n    const me = this;\n    const data = me._data;\n    const elements = me._cachedMeta.data;\n    for (const [method, arg1, arg2] of me._syncList) {\n      me[method](arg1, arg2);\n    }\n    me._syncList = [];\n    const numMeta = elements.length;\n    const numData = data.length;\n    const count = Math.min(numData, numMeta);\n    if (count) {\n      me.parse(0, count);\n    }\n    if (numData > numMeta) {\n      me._insertElements(numMeta, numData - numMeta, resetNewElements);\n    } else if (numData < numMeta) {\n      me._removeElements(numData, numMeta - numData);\n    }\n  }\n  _insertElements(start, count, resetNewElements = true) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const data = meta.data;\n    const end = start + count;\n    let i;\n    const move = (arr) => {\n      arr.length += count;\n      for (i = arr.length - 1; i >= end; i--) {\n        arr[i] = arr[i - count];\n      }\n    };\n    move(data);\n    for (i = start; i < end; ++i) {\n      data[i] = new me.dataElementType();\n    }\n    if (me._parsing) {\n      move(meta._parsed);\n    }\n    me.parse(start, count);\n    if (resetNewElements) {\n      me.updateElements(data, start, count, 'reset');\n    }\n  }\n  updateElements(element, start, count, mode) {}\n  _removeElements(start, count) {\n    const me = this;\n    const meta = me._cachedMeta;\n    if (me._parsing) {\n      const removed = meta._parsed.splice(start, count);\n      if (meta._stacked) {\n        clearStacks(meta, removed);\n      }\n    }\n    meta.data.splice(start, count);\n  }\n  _onDataPush() {\n    const count = arguments.length;\n    this._syncList.push(['_insertElements', this.getDataset().data.length - count, count]);\n  }\n  _onDataPop() {\n    this._syncList.push(['_removeElements', this._cachedMeta.data.length - 1, 1]);\n  }\n  _onDataShift() {\n    this._syncList.push(['_removeElements', 0, 1]);\n  }\n  _onDataSplice(start, count) {\n    this._syncList.push(['_removeElements', start, count]);\n    this._syncList.push(['_insertElements', start, arguments.length - 2]);\n  }\n  _onDataUnshift() {\n    this._syncList.push(['_insertElements', 0, arguments.length]);\n  }\n}\nDatasetController.defaults = {};\nDatasetController.prototype.datasetElementType = null;\nDatasetController.prototype.dataElementType = null;\n\nclass Element {\n  constructor() {\n    this.x = undefined;\n    this.y = undefined;\n    this.active = false;\n    this.options = undefined;\n    this.$animations = undefined;\n  }\n  tooltipPosition(useFinalPosition) {\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return {x, y};\n  }\n  hasValue() {\n    return isNumber(this.x) && isNumber(this.y);\n  }\n  getProps(props, final) {\n    const me = this;\n    const anims = this.$animations;\n    if (!final || !anims) {\n      return me;\n    }\n    const ret = {};\n    props.forEach(prop => {\n      ret[prop] = anims[prop] && anims[prop].active() ? anims[prop]._to : me[prop];\n    });\n    return ret;\n  }\n}\nElement.defaults = {};\nElement.defaultRoutes = undefined;\n\nconst intlCache = new Map();\nfunction getNumberFormat(locale, options) {\n  options = options || {};\n  const cacheKey = locale + JSON.stringify(options);\n  let formatter = intlCache.get(cacheKey);\n  if (!formatter) {\n    formatter = new Intl.NumberFormat(locale, options);\n    intlCache.set(cacheKey, formatter);\n  }\n  return formatter;\n}\nfunction formatNumber(num, locale, options) {\n  return getNumberFormat(locale, options).format(num);\n}\n\nconst formatters = {\n  values(value) {\n    return isArray(value) ? value : '' + value;\n  },\n  numeric(tickValue, index, ticks) {\n    if (tickValue === 0) {\n      return '0';\n    }\n    const locale = this.chart.options.locale;\n    let notation;\n    let delta = tickValue;\n    if (ticks.length > 1) {\n      const maxTick = Math.max(Math.abs(ticks[0].value), Math.abs(ticks[ticks.length - 1].value));\n      if (maxTick < 1e-4 || maxTick > 1e+15) {\n        notation = 'scientific';\n      }\n      delta = calculateDelta(tickValue, ticks);\n    }\n    const logDelta = log10(Math.abs(delta));\n    const numDecimal = Math.max(Math.min(-1 * Math.floor(logDelta), 20), 0);\n    const options = {notation, minimumFractionDigits: numDecimal, maximumFractionDigits: numDecimal};\n    Object.assign(options, this.options.ticks.format);\n    return formatNumber(tickValue, locale, options);\n  },\n  logarithmic(tickValue, index, ticks) {\n    if (tickValue === 0) {\n      return '0';\n    }\n    const remain = tickValue / (Math.pow(10, Math.floor(log10(tickValue))));\n    if (remain === 1 || remain === 2 || remain === 5) {\n      return formatters.numeric.call(this, tickValue, index, ticks);\n    }\n    return '';\n  }\n};\nfunction calculateDelta(tickValue, ticks) {\n  let delta = ticks.length > 3 ? ticks[2].value - ticks[1].value : ticks[1].value - ticks[0].value;\n  if (Math.abs(delta) >= 1 && tickValue !== Math.floor(tickValue)) {\n    delta = tickValue - Math.floor(tickValue);\n  }\n  return delta;\n}\nvar Ticks = {formatters};\n\ndefaults.set('scale', {\n  display: true,\n  offset: false,\n  reverse: false,\n  beginAtZero: false,\n  bounds: 'ticks',\n  grace: 0,\n  grid: {\n    display: true,\n    lineWidth: 1,\n    drawBorder: true,\n    drawOnChartArea: true,\n    drawTicks: true,\n    tickLength: 8,\n    tickWidth: (_ctx, options) => options.lineWidth,\n    tickColor: (_ctx, options) => options.color,\n    offset: false,\n    borderDash: [],\n    borderDashOffset: 0.0,\n    borderWidth: 1\n  },\n  title: {\n    display: false,\n    text: '',\n    padding: {\n      top: 4,\n      bottom: 4\n    }\n  },\n  ticks: {\n    minRotation: 0,\n    maxRotation: 50,\n    mirror: false,\n    textStrokeWidth: 0,\n    textStrokeColor: '',\n    padding: 3,\n    display: true,\n    autoSkip: true,\n    autoSkipPadding: 3,\n    labelOffset: 0,\n    callback: Ticks.formatters.values,\n    minor: {},\n    major: {},\n    align: 'center',\n    crossAlign: 'near',\n    showLabelBackdrop: false,\n    backdropColor: 'rgba(255, 255, 255, 0.75)',\n    backdropPadding: 2,\n  }\n});\ndefaults.route('scale.ticks', 'color', '', 'color');\ndefaults.route('scale.grid', 'color', '', 'borderColor');\ndefaults.route('scale.grid', 'borderColor', '', 'borderColor');\ndefaults.route('scale.title', 'color', '', 'color');\ndefaults.describe('scale', {\n  _fallback: false,\n  _scriptable: (name) => !name.startsWith('before') && !name.startsWith('after') && name !== 'callback' && name !== 'parser',\n  _indexable: (name) => name !== 'borderDash' && name !== 'tickBorderDash',\n});\ndefaults.describe('scales', {\n  _fallback: 'scale',\n});\n\nfunction autoSkip(scale, ticks) {\n  const tickOpts = scale.options.ticks;\n  const ticksLimit = tickOpts.maxTicksLimit || determineMaxTicks(scale);\n  const majorIndices = tickOpts.major.enabled ? getMajorIndices(ticks) : [];\n  const numMajorIndices = majorIndices.length;\n  const first = majorIndices[0];\n  const last = majorIndices[numMajorIndices - 1];\n  const newTicks = [];\n  if (numMajorIndices > ticksLimit) {\n    skipMajors(ticks, newTicks, majorIndices, numMajorIndices / ticksLimit);\n    return newTicks;\n  }\n  const spacing = calculateSpacing(majorIndices, ticks, ticksLimit);\n  if (numMajorIndices > 0) {\n    let i, ilen;\n    const avgMajorSpacing = numMajorIndices > 1 ? Math.round((last - first) / (numMajorIndices - 1)) : null;\n    skip(ticks, newTicks, spacing, isNullOrUndef(avgMajorSpacing) ? 0 : first - avgMajorSpacing, first);\n    for (i = 0, ilen = numMajorIndices - 1; i < ilen; i++) {\n      skip(ticks, newTicks, spacing, majorIndices[i], majorIndices[i + 1]);\n    }\n    skip(ticks, newTicks, spacing, last, isNullOrUndef(avgMajorSpacing) ? ticks.length : last + avgMajorSpacing);\n    return newTicks;\n  }\n  skip(ticks, newTicks, spacing);\n  return newTicks;\n}\nfunction determineMaxTicks(scale) {\n  const offset = scale.options.offset;\n  const tickLength = scale._tickSize();\n  const maxScale = scale._length / tickLength + (offset ? 0 : 1);\n  const maxChart = scale._maxLength / tickLength;\n  return Math.floor(Math.min(maxScale, maxChart));\n}\nfunction calculateSpacing(majorIndices, ticks, ticksLimit) {\n  const evenMajorSpacing = getEvenSpacing(majorIndices);\n  const spacing = ticks.length / ticksLimit;\n  if (!evenMajorSpacing) {\n    return Math.max(spacing, 1);\n  }\n  const factors = _factorize(evenMajorSpacing);\n  for (let i = 0, ilen = factors.length - 1; i < ilen; i++) {\n    const factor = factors[i];\n    if (factor > spacing) {\n      return factor;\n    }\n  }\n  return Math.max(spacing, 1);\n}\nfunction getMajorIndices(ticks) {\n  const result = [];\n  let i, ilen;\n  for (i = 0, ilen = ticks.length; i < ilen; i++) {\n    if (ticks[i].major) {\n      result.push(i);\n    }\n  }\n  return result;\n}\nfunction skipMajors(ticks, newTicks, majorIndices, spacing) {\n  let count = 0;\n  let next = majorIndices[0];\n  let i;\n  spacing = Math.ceil(spacing);\n  for (i = 0; i < ticks.length; i++) {\n    if (i === next) {\n      newTicks.push(ticks[i]);\n      count++;\n      next = majorIndices[count * spacing];\n    }\n  }\n}\nfunction skip(ticks, newTicks, spacing, majorStart, majorEnd) {\n  const start = valueOrDefault(majorStart, 0);\n  const end = Math.min(valueOrDefault(majorEnd, ticks.length), ticks.length);\n  let count = 0;\n  let length, i, next;\n  spacing = Math.ceil(spacing);\n  if (majorEnd) {\n    length = majorEnd - majorStart;\n    spacing = length / Math.floor(length / spacing);\n  }\n  next = start;\n  while (next < 0) {\n    count++;\n    next = Math.round(start + count * spacing);\n  }\n  for (i = Math.max(start, 0); i < end; i++) {\n    if (i === next) {\n      newTicks.push(ticks[i]);\n      count++;\n      next = Math.round(start + count * spacing);\n    }\n  }\n}\nfunction getEvenSpacing(arr) {\n  const len = arr.length;\n  let i, diff;\n  if (len < 2) {\n    return false;\n  }\n  for (diff = arr[0], i = 1; i < len; ++i) {\n    if (arr[i] - arr[i - 1] !== diff) {\n      return false;\n    }\n  }\n  return diff;\n}\n\nconst reverseAlign = (align) => align === 'left' ? 'right' : align === 'right' ? 'left' : align;\nconst offsetFromEdge = (scale, edge, offset) => edge === 'top' || edge === 'left' ? scale[edge] + offset : scale[edge] - offset;\nfunction sample(arr, numItems) {\n  const result = [];\n  const increment = arr.length / numItems;\n  const len = arr.length;\n  let i = 0;\n  for (; i < len; i += increment) {\n    result.push(arr[Math.floor(i)]);\n  }\n  return result;\n}\nfunction getPixelForGridLine(scale, index, offsetGridLines) {\n  const length = scale.ticks.length;\n  const validIndex = Math.min(index, length - 1);\n  const start = scale._startPixel;\n  const end = scale._endPixel;\n  const epsilon = 1e-6;\n  let lineValue = scale.getPixelForTick(validIndex);\n  let offset;\n  if (offsetGridLines) {\n    if (length === 1) {\n      offset = Math.max(lineValue - start, end - lineValue);\n    } else if (index === 0) {\n      offset = (scale.getPixelForTick(1) - lineValue) / 2;\n    } else {\n      offset = (lineValue - scale.getPixelForTick(validIndex - 1)) / 2;\n    }\n    lineValue += validIndex < index ? offset : -offset;\n    if (lineValue < start - epsilon || lineValue > end + epsilon) {\n      return;\n    }\n  }\n  return lineValue;\n}\nfunction garbageCollect(caches, length) {\n  each(caches, (cache) => {\n    const gc = cache.gc;\n    const gcLen = gc.length / 2;\n    let i;\n    if (gcLen > length) {\n      for (i = 0; i < gcLen; ++i) {\n        delete cache.data[gc[i]];\n      }\n      gc.splice(0, gcLen);\n    }\n  });\n}\nfunction getTickMarkLength(options) {\n  return options.drawTicks ? options.tickLength : 0;\n}\nfunction getTitleHeight(options, fallback) {\n  if (!options.display) {\n    return 0;\n  }\n  const font = toFont(options.font, fallback);\n  const padding = toPadding(options.padding);\n  const lines = isArray(options.text) ? options.text.length : 1;\n  return (lines * font.lineHeight) + padding.height;\n}\nfunction createScaleContext(parent, scale) {\n  return Object.assign(Object.create(parent), {\n    scale,\n    type: 'scale'\n  });\n}\nfunction createTickContext(parent, index, tick) {\n  return Object.assign(Object.create(parent), {\n    tick,\n    index,\n    type: 'tick'\n  });\n}\nfunction titleAlign(align, position, reverse) {\n  let ret = _toLeftRightCenter(align);\n  if ((reverse && position !== 'right') || (!reverse && position === 'right')) {\n    ret = reverseAlign(ret);\n  }\n  return ret;\n}\nfunction titleArgs(scale, offset, position, align) {\n  const {top, left, bottom, right} = scale;\n  let rotation = 0;\n  let maxWidth, titleX, titleY;\n  if (scale.isHorizontal()) {\n    titleX = _alignStartEnd(align, left, right);\n    titleY = offsetFromEdge(scale, position, offset);\n    maxWidth = right - left;\n  } else {\n    titleX = offsetFromEdge(scale, position, offset);\n    titleY = _alignStartEnd(align, bottom, top);\n    rotation = position === 'left' ? -HALF_PI : HALF_PI;\n  }\n  return {titleX, titleY, maxWidth, rotation};\n}\nclass Scale extends Element {\n  constructor(cfg) {\n    super();\n    this.id = cfg.id;\n    this.type = cfg.type;\n    this.options = undefined;\n    this.ctx = cfg.ctx;\n    this.chart = cfg.chart;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    this._margins = {\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0\n    };\n    this.maxWidth = undefined;\n    this.maxHeight = undefined;\n    this.paddingTop = undefined;\n    this.paddingBottom = undefined;\n    this.paddingLeft = undefined;\n    this.paddingRight = undefined;\n    this.axis = undefined;\n    this.labelRotation = undefined;\n    this.min = undefined;\n    this.max = undefined;\n    this._range = undefined;\n    this.ticks = [];\n    this._gridLineItems = null;\n    this._labelItems = null;\n    this._labelSizes = null;\n    this._length = 0;\n    this._maxLength = 0;\n    this._longestTextCache = {};\n    this._startPixel = undefined;\n    this._endPixel = undefined;\n    this._reversePixels = false;\n    this._userMax = undefined;\n    this._userMin = undefined;\n    this._suggestedMax = undefined;\n    this._suggestedMin = undefined;\n    this._ticksLength = 0;\n    this._borderValue = 0;\n    this._cache = {};\n    this._dataLimitsCached = false;\n    this.$context = undefined;\n  }\n  init(options) {\n    const me = this;\n    me.options = options.setContext(me.getContext());\n    me.axis = options.axis;\n    me._userMin = me.parse(options.min);\n    me._userMax = me.parse(options.max);\n    me._suggestedMin = me.parse(options.suggestedMin);\n    me._suggestedMax = me.parse(options.suggestedMax);\n  }\n  parse(raw, index) {\n    return raw;\n  }\n  getUserBounds() {\n    let {_userMin, _userMax, _suggestedMin, _suggestedMax} = this;\n    _userMin = finiteOrDefault(_userMin, Number.POSITIVE_INFINITY);\n    _userMax = finiteOrDefault(_userMax, Number.NEGATIVE_INFINITY);\n    _suggestedMin = finiteOrDefault(_suggestedMin, Number.POSITIVE_INFINITY);\n    _suggestedMax = finiteOrDefault(_suggestedMax, Number.NEGATIVE_INFINITY);\n    return {\n      min: finiteOrDefault(_userMin, _suggestedMin),\n      max: finiteOrDefault(_userMax, _suggestedMax),\n      minDefined: isNumberFinite(_userMin),\n      maxDefined: isNumberFinite(_userMax)\n    };\n  }\n  getMinMax(canStack) {\n    const me = this;\n    let {min, max, minDefined, maxDefined} = me.getUserBounds();\n    let range;\n    if (minDefined && maxDefined) {\n      return {min, max};\n    }\n    const metas = me.getMatchingVisibleMetas();\n    for (let i = 0, ilen = metas.length; i < ilen; ++i) {\n      range = metas[i].controller.getMinMax(me, canStack);\n      if (!minDefined) {\n        min = Math.min(min, range.min);\n      }\n      if (!maxDefined) {\n        max = Math.max(max, range.max);\n      }\n    }\n    return {\n      min: finiteOrDefault(min, finiteOrDefault(max, min)),\n      max: finiteOrDefault(max, finiteOrDefault(min, max))\n    };\n  }\n  getPadding() {\n    const me = this;\n    return {\n      left: me.paddingLeft || 0,\n      top: me.paddingTop || 0,\n      right: me.paddingRight || 0,\n      bottom: me.paddingBottom || 0\n    };\n  }\n  getTicks() {\n    return this.ticks;\n  }\n  getLabels() {\n    const data = this.chart.data;\n    return this.options.labels || (this.isHorizontal() ? data.xLabels : data.yLabels) || data.labels || [];\n  }\n  beforeLayout() {\n    this._cache = {};\n    this._dataLimitsCached = false;\n  }\n  beforeUpdate() {\n    callback(this.options.beforeUpdate, [this]);\n  }\n  update(maxWidth, maxHeight, margins) {\n    const me = this;\n    const tickOpts = me.options.ticks;\n    const sampleSize = tickOpts.sampleSize;\n    me.beforeUpdate();\n    me.maxWidth = maxWidth;\n    me.maxHeight = maxHeight;\n    me._margins = margins = Object.assign({\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0\n    }, margins);\n    me.ticks = null;\n    me._labelSizes = null;\n    me._gridLineItems = null;\n    me._labelItems = null;\n    me.beforeSetDimensions();\n    me.setDimensions();\n    me.afterSetDimensions();\n    me._maxLength = me.isHorizontal()\n      ? me.width + margins.left + margins.right\n      : me.height + margins.top + margins.bottom;\n    if (!me._dataLimitsCached) {\n      me.beforeDataLimits();\n      me.determineDataLimits();\n      me.afterDataLimits();\n      me._range = _addGrace(me, me.options.grace);\n      me._dataLimitsCached = true;\n    }\n    me.beforeBuildTicks();\n    me.ticks = me.buildTicks() || [];\n    me.afterBuildTicks();\n    const samplingEnabled = sampleSize < me.ticks.length;\n    me._convertTicksToLabels(samplingEnabled ? sample(me.ticks, sampleSize) : me.ticks);\n    me.configure();\n    me.beforeCalculateLabelRotation();\n    me.calculateLabelRotation();\n    me.afterCalculateLabelRotation();\n    if (tickOpts.display && (tickOpts.autoSkip || tickOpts.source === 'auto')) {\n      me.ticks = autoSkip(me, me.ticks);\n      me._labelSizes = null;\n    }\n    if (samplingEnabled) {\n      me._convertTicksToLabels(me.ticks);\n    }\n    me.beforeFit();\n    me.fit();\n    me.afterFit();\n    me.afterUpdate();\n  }\n  configure() {\n    const me = this;\n    let reversePixels = me.options.reverse;\n    let startPixel, endPixel;\n    if (me.isHorizontal()) {\n      startPixel = me.left;\n      endPixel = me.right;\n    } else {\n      startPixel = me.top;\n      endPixel = me.bottom;\n      reversePixels = !reversePixels;\n    }\n    me._startPixel = startPixel;\n    me._endPixel = endPixel;\n    me._reversePixels = reversePixels;\n    me._length = endPixel - startPixel;\n    me._alignToPixels = me.options.alignToPixels;\n  }\n  afterUpdate() {\n    callback(this.options.afterUpdate, [this]);\n  }\n  beforeSetDimensions() {\n    callback(this.options.beforeSetDimensions, [this]);\n  }\n  setDimensions() {\n    const me = this;\n    if (me.isHorizontal()) {\n      me.width = me.maxWidth;\n      me.left = 0;\n      me.right = me.width;\n    } else {\n      me.height = me.maxHeight;\n      me.top = 0;\n      me.bottom = me.height;\n    }\n    me.paddingLeft = 0;\n    me.paddingTop = 0;\n    me.paddingRight = 0;\n    me.paddingBottom = 0;\n  }\n  afterSetDimensions() {\n    callback(this.options.afterSetDimensions, [this]);\n  }\n  _callHooks(name) {\n    const me = this;\n    me.chart.notifyPlugins(name, me.getContext());\n    callback(me.options[name], [me]);\n  }\n  beforeDataLimits() {\n    this._callHooks('beforeDataLimits');\n  }\n  determineDataLimits() {}\n  afterDataLimits() {\n    this._callHooks('afterDataLimits');\n  }\n  beforeBuildTicks() {\n    this._callHooks('beforeBuildTicks');\n  }\n  buildTicks() {\n    return [];\n  }\n  afterBuildTicks() {\n    this._callHooks('afterBuildTicks');\n  }\n  beforeTickToLabelConversion() {\n    callback(this.options.beforeTickToLabelConversion, [this]);\n  }\n  generateTickLabels(ticks) {\n    const me = this;\n    const tickOpts = me.options.ticks;\n    let i, ilen, tick;\n    for (i = 0, ilen = ticks.length; i < ilen; i++) {\n      tick = ticks[i];\n      tick.label = callback(tickOpts.callback, [tick.value, i, ticks], me);\n    }\n    for (i = 0; i < ilen; i++) {\n      if (isNullOrUndef(ticks[i].label)) {\n        ticks.splice(i, 1);\n        ilen--;\n        i--;\n      }\n    }\n  }\n  afterTickToLabelConversion() {\n    callback(this.options.afterTickToLabelConversion, [this]);\n  }\n  beforeCalculateLabelRotation() {\n    callback(this.options.beforeCalculateLabelRotation, [this]);\n  }\n  calculateLabelRotation() {\n    const me = this;\n    const options = me.options;\n    const tickOpts = options.ticks;\n    const numTicks = me.ticks.length;\n    const minRotation = tickOpts.minRotation || 0;\n    const maxRotation = tickOpts.maxRotation;\n    let labelRotation = minRotation;\n    let tickWidth, maxHeight, maxLabelDiagonal;\n    if (!me._isVisible() || !tickOpts.display || minRotation >= maxRotation || numTicks <= 1 || !me.isHorizontal()) {\n      me.labelRotation = minRotation;\n      return;\n    }\n    const labelSizes = me._getLabelSizes();\n    const maxLabelWidth = labelSizes.widest.width;\n    const maxLabelHeight = labelSizes.highest.height;\n    const maxWidth = _limitValue(me.chart.width - maxLabelWidth, 0, me.maxWidth);\n    tickWidth = options.offset ? me.maxWidth / numTicks : maxWidth / (numTicks - 1);\n    if (maxLabelWidth + 6 > tickWidth) {\n      tickWidth = maxWidth / (numTicks - (options.offset ? 0.5 : 1));\n      maxHeight = me.maxHeight - getTickMarkLength(options.grid)\n\t\t\t\t- tickOpts.padding - getTitleHeight(options.title, me.chart.options.font);\n      maxLabelDiagonal = Math.sqrt(maxLabelWidth * maxLabelWidth + maxLabelHeight * maxLabelHeight);\n      labelRotation = toDegrees(Math.min(\n        Math.asin(Math.min((labelSizes.highest.height + 6) / tickWidth, 1)),\n        Math.asin(Math.min(maxHeight / maxLabelDiagonal, 1)) - Math.asin(maxLabelHeight / maxLabelDiagonal)\n      ));\n      labelRotation = Math.max(minRotation, Math.min(maxRotation, labelRotation));\n    }\n    me.labelRotation = labelRotation;\n  }\n  afterCalculateLabelRotation() {\n    callback(this.options.afterCalculateLabelRotation, [this]);\n  }\n  beforeFit() {\n    callback(this.options.beforeFit, [this]);\n  }\n  fit() {\n    const me = this;\n    const minSize = {\n      width: 0,\n      height: 0\n    };\n    const {chart, options: {ticks: tickOpts, title: titleOpts, grid: gridOpts}} = me;\n    const display = me._isVisible();\n    const isHorizontal = me.isHorizontal();\n    if (display) {\n      const titleHeight = getTitleHeight(titleOpts, chart.options.font);\n      if (isHorizontal) {\n        minSize.width = me.maxWidth;\n        minSize.height = getTickMarkLength(gridOpts) + titleHeight;\n      } else {\n        minSize.height = me.maxHeight;\n        minSize.width = getTickMarkLength(gridOpts) + titleHeight;\n      }\n      if (tickOpts.display && me.ticks.length) {\n        const {first, last, widest, highest} = me._getLabelSizes();\n        const tickPadding = tickOpts.padding * 2;\n        const angleRadians = toRadians(me.labelRotation);\n        const cos = Math.cos(angleRadians);\n        const sin = Math.sin(angleRadians);\n        if (isHorizontal) {\n          const labelHeight = tickOpts.mirror ? 0 : sin * widest.width + cos * highest.height;\n          minSize.height = Math.min(me.maxHeight, minSize.height + labelHeight + tickPadding);\n        } else {\n          const labelWidth = tickOpts.mirror ? 0 : cos * widest.width + sin * highest.height;\n          minSize.width = Math.min(me.maxWidth, minSize.width + labelWidth + tickPadding);\n        }\n        me._calculatePadding(first, last, sin, cos);\n      }\n    }\n    me._handleMargins();\n    if (isHorizontal) {\n      me.width = me._length = chart.width - me._margins.left - me._margins.right;\n      me.height = minSize.height;\n    } else {\n      me.width = minSize.width;\n      me.height = me._length = chart.height - me._margins.top - me._margins.bottom;\n    }\n  }\n  _calculatePadding(first, last, sin, cos) {\n    const me = this;\n    const {ticks: {align, padding}, position} = me.options;\n    const isRotated = me.labelRotation !== 0;\n    const labelsBelowTicks = position !== 'top' && me.axis === 'x';\n    if (me.isHorizontal()) {\n      const offsetLeft = me.getPixelForTick(0) - me.left;\n      const offsetRight = me.right - me.getPixelForTick(me.ticks.length - 1);\n      let paddingLeft = 0;\n      let paddingRight = 0;\n      if (isRotated) {\n        if (labelsBelowTicks) {\n          paddingLeft = cos * first.width;\n          paddingRight = sin * last.height;\n        } else {\n          paddingLeft = sin * first.height;\n          paddingRight = cos * last.width;\n        }\n      } else if (align === 'start') {\n        paddingRight = last.width;\n      } else if (align === 'end') {\n        paddingLeft = first.width;\n      } else {\n        paddingLeft = first.width / 2;\n        paddingRight = last.width / 2;\n      }\n      me.paddingLeft = Math.max((paddingLeft - offsetLeft + padding) * me.width / (me.width - offsetLeft), 0);\n      me.paddingRight = Math.max((paddingRight - offsetRight + padding) * me.width / (me.width - offsetRight), 0);\n    } else {\n      let paddingTop = last.height / 2;\n      let paddingBottom = first.height / 2;\n      if (align === 'start') {\n        paddingTop = 0;\n        paddingBottom = first.height;\n      } else if (align === 'end') {\n        paddingTop = last.height;\n        paddingBottom = 0;\n      }\n      me.paddingTop = paddingTop + padding;\n      me.paddingBottom = paddingBottom + padding;\n    }\n  }\n  _handleMargins() {\n    const me = this;\n    if (me._margins) {\n      me._margins.left = Math.max(me.paddingLeft, me._margins.left);\n      me._margins.top = Math.max(me.paddingTop, me._margins.top);\n      me._margins.right = Math.max(me.paddingRight, me._margins.right);\n      me._margins.bottom = Math.max(me.paddingBottom, me._margins.bottom);\n    }\n  }\n  afterFit() {\n    callback(this.options.afterFit, [this]);\n  }\n  isHorizontal() {\n    const {axis, position} = this.options;\n    return position === 'top' || position === 'bottom' || axis === 'x';\n  }\n  isFullSize() {\n    return this.options.fullSize;\n  }\n  _convertTicksToLabels(ticks) {\n    const me = this;\n    me.beforeTickToLabelConversion();\n    me.generateTickLabels(ticks);\n    me.afterTickToLabelConversion();\n  }\n  _getLabelSizes() {\n    const me = this;\n    let labelSizes = me._labelSizes;\n    if (!labelSizes) {\n      const sampleSize = me.options.ticks.sampleSize;\n      let ticks = me.ticks;\n      if (sampleSize < ticks.length) {\n        ticks = sample(ticks, sampleSize);\n      }\n      me._labelSizes = labelSizes = me._computeLabelSizes(ticks, ticks.length);\n    }\n    return labelSizes;\n  }\n  _computeLabelSizes(ticks, length) {\n    const {ctx, _longestTextCache: caches} = this;\n    const widths = [];\n    const heights = [];\n    let widestLabelSize = 0;\n    let highestLabelSize = 0;\n    let i, j, jlen, label, tickFont, fontString, cache, lineHeight, width, height, nestedLabel;\n    for (i = 0; i < length; ++i) {\n      label = ticks[i].label;\n      tickFont = this._resolveTickFontOptions(i);\n      ctx.font = fontString = tickFont.string;\n      cache = caches[fontString] = caches[fontString] || {data: {}, gc: []};\n      lineHeight = tickFont.lineHeight;\n      width = height = 0;\n      if (!isNullOrUndef(label) && !isArray(label)) {\n        width = _measureText(ctx, cache.data, cache.gc, width, label);\n        height = lineHeight;\n      } else if (isArray(label)) {\n        for (j = 0, jlen = label.length; j < jlen; ++j) {\n          nestedLabel = label[j];\n          if (!isNullOrUndef(nestedLabel) && !isArray(nestedLabel)) {\n            width = _measureText(ctx, cache.data, cache.gc, width, nestedLabel);\n            height += lineHeight;\n          }\n        }\n      }\n      widths.push(width);\n      heights.push(height);\n      widestLabelSize = Math.max(width, widestLabelSize);\n      highestLabelSize = Math.max(height, highestLabelSize);\n    }\n    garbageCollect(caches, length);\n    const widest = widths.indexOf(widestLabelSize);\n    const highest = heights.indexOf(highestLabelSize);\n    const valueAt = (idx) => ({width: widths[idx] || 0, height: heights[idx] || 0});\n    return {\n      first: valueAt(0),\n      last: valueAt(length - 1),\n      widest: valueAt(widest),\n      highest: valueAt(highest),\n      widths,\n      heights,\n    };\n  }\n  getLabelForValue(value) {\n    return value;\n  }\n  getPixelForValue(value, index) {\n    return NaN;\n  }\n  getValueForPixel(pixel) {}\n  getPixelForTick(index) {\n    const ticks = this.ticks;\n    if (index < 0 || index > ticks.length - 1) {\n      return null;\n    }\n    return this.getPixelForValue(ticks[index].value);\n  }\n  getPixelForDecimal(decimal) {\n    const me = this;\n    if (me._reversePixels) {\n      decimal = 1 - decimal;\n    }\n    const pixel = me._startPixel + decimal * me._length;\n    return _int16Range(me._alignToPixels ? _alignPixel(me.chart, pixel, 0) : pixel);\n  }\n  getDecimalForPixel(pixel) {\n    const decimal = (pixel - this._startPixel) / this._length;\n    return this._reversePixels ? 1 - decimal : decimal;\n  }\n  getBasePixel() {\n    return this.getPixelForValue(this.getBaseValue());\n  }\n  getBaseValue() {\n    const {min, max} = this;\n    return min < 0 && max < 0 ? max :\n      min > 0 && max > 0 ? min :\n      0;\n  }\n  getContext(index) {\n    const me = this;\n    const ticks = me.ticks || [];\n    if (index >= 0 && index < ticks.length) {\n      const tick = ticks[index];\n      return tick.$context ||\n\t\t\t\t(tick.$context = createTickContext(me.getContext(), index, tick));\n    }\n    return me.$context ||\n\t\t\t(me.$context = createScaleContext(me.chart.getContext(), me));\n  }\n  _tickSize() {\n    const me = this;\n    const optionTicks = me.options.ticks;\n    const rot = toRadians(me.labelRotation);\n    const cos = Math.abs(Math.cos(rot));\n    const sin = Math.abs(Math.sin(rot));\n    const labelSizes = me._getLabelSizes();\n    const padding = optionTicks.autoSkipPadding || 0;\n    const w = labelSizes ? labelSizes.widest.width + padding : 0;\n    const h = labelSizes ? labelSizes.highest.height + padding : 0;\n    return me.isHorizontal()\n      ? h * cos > w * sin ? w / cos : h / sin\n      : h * sin < w * cos ? h / cos : w / sin;\n  }\n  _isVisible() {\n    const display = this.options.display;\n    if (display !== 'auto') {\n      return !!display;\n    }\n    return this.getMatchingVisibleMetas().length > 0;\n  }\n  _computeGridLineItems(chartArea) {\n    const me = this;\n    const axis = me.axis;\n    const chart = me.chart;\n    const options = me.options;\n    const {grid, position} = options;\n    const offset = grid.offset;\n    const isHorizontal = me.isHorizontal();\n    const ticks = me.ticks;\n    const ticksLength = ticks.length + (offset ? 1 : 0);\n    const tl = getTickMarkLength(grid);\n    const items = [];\n    const borderOpts = grid.setContext(me.getContext());\n    const axisWidth = borderOpts.drawBorder ? borderOpts.borderWidth : 0;\n    const axisHalfWidth = axisWidth / 2;\n    const alignBorderValue = function(pixel) {\n      return _alignPixel(chart, pixel, axisWidth);\n    };\n    let borderValue, i, lineValue, alignedLineValue;\n    let tx1, ty1, tx2, ty2, x1, y1, x2, y2;\n    if (position === 'top') {\n      borderValue = alignBorderValue(me.bottom);\n      ty1 = me.bottom - tl;\n      ty2 = borderValue - axisHalfWidth;\n      y1 = alignBorderValue(chartArea.top) + axisHalfWidth;\n      y2 = chartArea.bottom;\n    } else if (position === 'bottom') {\n      borderValue = alignBorderValue(me.top);\n      y1 = chartArea.top;\n      y2 = alignBorderValue(chartArea.bottom) - axisHalfWidth;\n      ty1 = borderValue + axisHalfWidth;\n      ty2 = me.top + tl;\n    } else if (position === 'left') {\n      borderValue = alignBorderValue(me.right);\n      tx1 = me.right - tl;\n      tx2 = borderValue - axisHalfWidth;\n      x1 = alignBorderValue(chartArea.left) + axisHalfWidth;\n      x2 = chartArea.right;\n    } else if (position === 'right') {\n      borderValue = alignBorderValue(me.left);\n      x1 = chartArea.left;\n      x2 = alignBorderValue(chartArea.right) - axisHalfWidth;\n      tx1 = borderValue + axisHalfWidth;\n      tx2 = me.left + tl;\n    } else if (axis === 'x') {\n      if (position === 'center') {\n        borderValue = alignBorderValue((chartArea.top + chartArea.bottom) / 2 + 0.5);\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        borderValue = alignBorderValue(me.chart.scales[positionAxisID].getPixelForValue(value));\n      }\n      y1 = chartArea.top;\n      y2 = chartArea.bottom;\n      ty1 = borderValue + axisHalfWidth;\n      ty2 = ty1 + tl;\n    } else if (axis === 'y') {\n      if (position === 'center') {\n        borderValue = alignBorderValue((chartArea.left + chartArea.right) / 2);\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        borderValue = alignBorderValue(me.chart.scales[positionAxisID].getPixelForValue(value));\n      }\n      tx1 = borderValue - axisHalfWidth;\n      tx2 = tx1 - tl;\n      x1 = chartArea.left;\n      x2 = chartArea.right;\n    }\n    for (i = 0; i < ticksLength; ++i) {\n      const optsAtIndex = grid.setContext(me.getContext(i));\n      const lineWidth = optsAtIndex.lineWidth;\n      const lineColor = optsAtIndex.color;\n      const borderDash = grid.borderDash || [];\n      const borderDashOffset = optsAtIndex.borderDashOffset;\n      const tickWidth = optsAtIndex.tickWidth;\n      const tickColor = optsAtIndex.tickColor;\n      const tickBorderDash = optsAtIndex.tickBorderDash || [];\n      const tickBorderDashOffset = optsAtIndex.tickBorderDashOffset;\n      lineValue = getPixelForGridLine(me, i, offset);\n      if (lineValue === undefined) {\n        continue;\n      }\n      alignedLineValue = _alignPixel(chart, lineValue, lineWidth);\n      if (isHorizontal) {\n        tx1 = tx2 = x1 = x2 = alignedLineValue;\n      } else {\n        ty1 = ty2 = y1 = y2 = alignedLineValue;\n      }\n      items.push({\n        tx1,\n        ty1,\n        tx2,\n        ty2,\n        x1,\n        y1,\n        x2,\n        y2,\n        width: lineWidth,\n        color: lineColor,\n        borderDash,\n        borderDashOffset,\n        tickWidth,\n        tickColor,\n        tickBorderDash,\n        tickBorderDashOffset,\n      });\n    }\n    me._ticksLength = ticksLength;\n    me._borderValue = borderValue;\n    return items;\n  }\n  _computeLabelItems(chartArea) {\n    const me = this;\n    const axis = me.axis;\n    const options = me.options;\n    const {position, ticks: optionTicks} = options;\n    const isHorizontal = me.isHorizontal();\n    const ticks = me.ticks;\n    const {align, crossAlign, padding, mirror} = optionTicks;\n    const tl = getTickMarkLength(options.grid);\n    const tickAndPadding = tl + padding;\n    const hTickAndPadding = mirror ? -padding : tickAndPadding;\n    const rotation = -toRadians(me.labelRotation);\n    const items = [];\n    let i, ilen, tick, label, x, y, textAlign, pixel, font, lineHeight, lineCount, textOffset;\n    let textBaseline = 'middle';\n    if (position === 'top') {\n      y = me.bottom - hTickAndPadding;\n      textAlign = me._getXAxisLabelAlignment();\n    } else if (position === 'bottom') {\n      y = me.top + hTickAndPadding;\n      textAlign = me._getXAxisLabelAlignment();\n    } else if (position === 'left') {\n      const ret = me._getYAxisLabelAlignment(tl);\n      textAlign = ret.textAlign;\n      x = ret.x;\n    } else if (position === 'right') {\n      const ret = me._getYAxisLabelAlignment(tl);\n      textAlign = ret.textAlign;\n      x = ret.x;\n    } else if (axis === 'x') {\n      if (position === 'center') {\n        y = ((chartArea.top + chartArea.bottom) / 2) + tickAndPadding;\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        y = me.chart.scales[positionAxisID].getPixelForValue(value) + tickAndPadding;\n      }\n      textAlign = me._getXAxisLabelAlignment();\n    } else if (axis === 'y') {\n      if (position === 'center') {\n        x = ((chartArea.left + chartArea.right) / 2) - tickAndPadding;\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        x = me.chart.scales[positionAxisID].getPixelForValue(value);\n      }\n      textAlign = me._getYAxisLabelAlignment(tl).textAlign;\n    }\n    if (axis === 'y') {\n      if (align === 'start') {\n        textBaseline = 'top';\n      } else if (align === 'end') {\n        textBaseline = 'bottom';\n      }\n    }\n    const labelSizes = me._getLabelSizes();\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      tick = ticks[i];\n      label = tick.label;\n      const optsAtIndex = optionTicks.setContext(me.getContext(i));\n      pixel = me.getPixelForTick(i) + optionTicks.labelOffset;\n      font = me._resolveTickFontOptions(i);\n      lineHeight = font.lineHeight;\n      lineCount = isArray(label) ? label.length : 1;\n      const halfCount = lineCount / 2;\n      const color = optsAtIndex.color;\n      const strokeColor = optsAtIndex.textStrokeColor;\n      const strokeWidth = optsAtIndex.textStrokeWidth;\n      if (isHorizontal) {\n        x = pixel;\n        if (position === 'top') {\n          if (crossAlign === 'near' || rotation !== 0) {\n            textOffset = -lineCount * lineHeight + lineHeight / 2;\n          } else if (crossAlign === 'center') {\n            textOffset = -labelSizes.highest.height / 2 - halfCount * lineHeight + lineHeight;\n          } else {\n            textOffset = -labelSizes.highest.height + lineHeight / 2;\n          }\n        } else {\n          if (crossAlign === 'near' || rotation !== 0) {\n            textOffset = lineHeight / 2;\n          } else if (crossAlign === 'center') {\n            textOffset = labelSizes.highest.height / 2 - halfCount * lineHeight;\n          } else {\n            textOffset = labelSizes.highest.height - lineCount * lineHeight;\n          }\n        }\n        if (mirror) {\n          textOffset *= -1;\n        }\n      } else {\n        y = pixel;\n        textOffset = (1 - lineCount) * lineHeight / 2;\n      }\n      let backdrop;\n      if (optsAtIndex.showLabelBackdrop) {\n        const labelPadding = toPadding(optsAtIndex.backdropPadding);\n        const height = labelSizes.heights[i];\n        const width = labelSizes.widths[i];\n        let top = y + textOffset - labelPadding.top;\n        let left = x - labelPadding.left;\n        switch (textBaseline) {\n        case 'middle':\n          top -= height / 2;\n          break;\n        case 'bottom':\n          top -= height;\n          break;\n        }\n        switch (textAlign) {\n        case 'center':\n          left -= width / 2;\n          break;\n        case 'right':\n          left -= width;\n          break;\n        }\n        backdrop = {\n          left,\n          top,\n          width: width + labelPadding.width,\n          height: height + labelPadding.height,\n          color: optsAtIndex.backdropColor,\n        };\n      }\n      items.push({\n        rotation,\n        label,\n        font,\n        color,\n        strokeColor,\n        strokeWidth,\n        textOffset,\n        textAlign,\n        textBaseline,\n        translation: [x, y],\n        backdrop,\n      });\n    }\n    return items;\n  }\n  _getXAxisLabelAlignment() {\n    const me = this;\n    const {position, ticks} = me.options;\n    const rotation = -toRadians(me.labelRotation);\n    if (rotation) {\n      return position === 'top' ? 'left' : 'right';\n    }\n    let align = 'center';\n    if (ticks.align === 'start') {\n      align = 'left';\n    } else if (ticks.align === 'end') {\n      align = 'right';\n    }\n    return align;\n  }\n  _getYAxisLabelAlignment(tl) {\n    const me = this;\n    const {position, ticks: {crossAlign, mirror, padding}} = me.options;\n    const labelSizes = me._getLabelSizes();\n    const tickAndPadding = tl + padding;\n    const widest = labelSizes.widest.width;\n    let textAlign;\n    let x;\n    if (position === 'left') {\n      if (mirror) {\n        textAlign = 'left';\n        x = me.right + padding;\n      } else {\n        x = me.right - tickAndPadding;\n        if (crossAlign === 'near') {\n          textAlign = 'right';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x -= (widest / 2);\n        } else {\n          textAlign = 'left';\n          x = me.left;\n        }\n      }\n    } else if (position === 'right') {\n      if (mirror) {\n        textAlign = 'right';\n        x = me.left + padding;\n      } else {\n        x = me.left + tickAndPadding;\n        if (crossAlign === 'near') {\n          textAlign = 'left';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x += widest / 2;\n        } else {\n          textAlign = 'right';\n          x = me.right;\n        }\n      }\n    } else {\n      textAlign = 'right';\n    }\n    return {textAlign, x};\n  }\n  _computeLabelArea() {\n    const me = this;\n    if (me.options.ticks.mirror) {\n      return;\n    }\n    const chart = me.chart;\n    const position = me.options.position;\n    if (position === 'left' || position === 'right') {\n      return {top: 0, left: me.left, bottom: chart.height, right: me.right};\n    } if (position === 'top' || position === 'bottom') {\n      return {top: me.top, left: 0, bottom: me.bottom, right: chart.width};\n    }\n  }\n  drawBackground() {\n    const {ctx, options: {backgroundColor}, left, top, width, height} = this;\n    if (backgroundColor) {\n      ctx.save();\n      ctx.fillStyle = backgroundColor;\n      ctx.fillRect(left, top, width, height);\n      ctx.restore();\n    }\n  }\n  getLineWidthForValue(value) {\n    const me = this;\n    const grid = me.options.grid;\n    if (!me._isVisible() || !grid.display) {\n      return 0;\n    }\n    const ticks = me.ticks;\n    const index = ticks.findIndex(t => t.value === value);\n    if (index >= 0) {\n      const opts = grid.setContext(me.getContext(index));\n      return opts.lineWidth;\n    }\n    return 0;\n  }\n  drawGrid(chartArea) {\n    const me = this;\n    const grid = me.options.grid;\n    const ctx = me.ctx;\n    const items = me._gridLineItems || (me._gridLineItems = me._computeGridLineItems(chartArea));\n    let i, ilen;\n    const drawLine = (p1, p2, style) => {\n      if (!style.width || !style.color) {\n        return;\n      }\n      ctx.save();\n      ctx.lineWidth = style.width;\n      ctx.strokeStyle = style.color;\n      ctx.setLineDash(style.borderDash || []);\n      ctx.lineDashOffset = style.borderDashOffset;\n      ctx.beginPath();\n      ctx.moveTo(p1.x, p1.y);\n      ctx.lineTo(p2.x, p2.y);\n      ctx.stroke();\n      ctx.restore();\n    };\n    if (grid.display) {\n      for (i = 0, ilen = items.length; i < ilen; ++i) {\n        const item = items[i];\n        if (grid.drawOnChartArea) {\n          drawLine(\n            {x: item.x1, y: item.y1},\n            {x: item.x2, y: item.y2},\n            item\n          );\n        }\n        if (grid.drawTicks) {\n          drawLine(\n            {x: item.tx1, y: item.ty1},\n            {x: item.tx2, y: item.ty2},\n            {\n              color: item.tickColor,\n              width: item.tickWidth,\n              borderDash: item.tickBorderDash,\n              borderDashOffset: item.tickBorderDashOffset\n            }\n          );\n        }\n      }\n    }\n  }\n  drawBorder() {\n    const me = this;\n    const {chart, ctx, options: {grid}} = me;\n    const borderOpts = grid.setContext(me.getContext());\n    const axisWidth = grid.drawBorder ? borderOpts.borderWidth : 0;\n    if (!axisWidth) {\n      return;\n    }\n    const lastLineWidth = grid.setContext(me.getContext(0)).lineWidth;\n    const borderValue = me._borderValue;\n    let x1, x2, y1, y2;\n    if (me.isHorizontal()) {\n      x1 = _alignPixel(chart, me.left, axisWidth) - axisWidth / 2;\n      x2 = _alignPixel(chart, me.right, lastLineWidth) + lastLineWidth / 2;\n      y1 = y2 = borderValue;\n    } else {\n      y1 = _alignPixel(chart, me.top, axisWidth) - axisWidth / 2;\n      y2 = _alignPixel(chart, me.bottom, lastLineWidth) + lastLineWidth / 2;\n      x1 = x2 = borderValue;\n    }\n    ctx.save();\n    ctx.lineWidth = borderOpts.borderWidth;\n    ctx.strokeStyle = borderOpts.borderColor;\n    ctx.beginPath();\n    ctx.moveTo(x1, y1);\n    ctx.lineTo(x2, y2);\n    ctx.stroke();\n    ctx.restore();\n  }\n  drawLabels(chartArea) {\n    const me = this;\n    const optionTicks = me.options.ticks;\n    if (!optionTicks.display) {\n      return;\n    }\n    const ctx = me.ctx;\n    const area = me._computeLabelArea();\n    if (area) {\n      clipArea(ctx, area);\n    }\n    const items = me._labelItems || (me._labelItems = me._computeLabelItems(chartArea));\n    let i, ilen;\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      const item = items[i];\n      const tickFont = item.font;\n      const label = item.label;\n      if (item.backdrop) {\n        ctx.fillStyle = item.backdrop.color;\n        ctx.fillRect(item.backdrop.left, item.backdrop.top, item.backdrop.width, item.backdrop.height);\n      }\n      let y = item.textOffset;\n      renderText(ctx, label, 0, y, tickFont, item);\n    }\n    if (area) {\n      unclipArea(ctx);\n    }\n  }\n  drawTitle() {\n    const {ctx, options: {position, title, reverse}} = this;\n    if (!title.display) {\n      return;\n    }\n    const font = toFont(title.font);\n    const padding = toPadding(title.padding);\n    const align = title.align;\n    let offset = font.lineHeight / 2;\n    if (position === 'bottom') {\n      offset += padding.bottom;\n      if (isArray(title.text)) {\n        offset += font.lineHeight * (title.text.length - 1);\n      }\n    } else {\n      offset += padding.top;\n    }\n    const {titleX, titleY, maxWidth, rotation} = titleArgs(this, offset, position, align);\n    renderText(ctx, title.text, 0, 0, font, {\n      color: title.color,\n      maxWidth,\n      rotation,\n      textAlign: titleAlign(align, position, reverse),\n      textBaseline: 'middle',\n      translation: [titleX, titleY],\n    });\n  }\n  draw(chartArea) {\n    const me = this;\n    if (!me._isVisible()) {\n      return;\n    }\n    me.drawBackground();\n    me.drawGrid(chartArea);\n    me.drawBorder();\n    me.drawTitle();\n    me.drawLabels(chartArea);\n  }\n  _layers() {\n    const me = this;\n    const opts = me.options;\n    const tz = opts.ticks && opts.ticks.z || 0;\n    const gz = opts.grid && opts.grid.z || 0;\n    if (!me._isVisible() || me.draw !== Scale.prototype.draw) {\n      return [{\n        z: tz,\n        draw(chartArea) {\n          me.draw(chartArea);\n        }\n      }];\n    }\n    return [{\n      z: gz,\n      draw(chartArea) {\n        me.drawBackground();\n        me.drawGrid(chartArea);\n        me.drawTitle();\n      }\n    }, {\n      z: gz + 1,\n      draw() {\n        me.drawBorder();\n      }\n    }, {\n      z: tz,\n      draw(chartArea) {\n        me.drawLabels(chartArea);\n      }\n    }];\n  }\n  getMatchingVisibleMetas(type) {\n    const me = this;\n    const metas = me.chart.getSortedVisibleDatasetMetas();\n    const axisID = me.axis + 'AxisID';\n    const result = [];\n    let i, ilen;\n    for (i = 0, ilen = metas.length; i < ilen; ++i) {\n      const meta = metas[i];\n      if (meta[axisID] === me.id && (!type || meta.type === type)) {\n        result.push(meta);\n      }\n    }\n    return result;\n  }\n  _resolveTickFontOptions(index) {\n    const opts = this.options.ticks.setContext(this.getContext(index));\n    return toFont(opts.font);\n  }\n  _maxDigits() {\n    const me = this;\n    const fontSize = me._resolveTickFontOptions(0).lineHeight;\n    return (me.isHorizontal() ? me.width : me.height) / fontSize;\n  }\n}\n\nfunction _createResolver(scopes, prefixes = [''], rootScopes = scopes, fallback, getTarget = () => scopes[0]) {\n  if (!defined(fallback)) {\n    fallback = _resolve('_fallback', scopes);\n  }\n  const cache = {\n    [Symbol.toStringTag]: 'Object',\n    _cacheable: true,\n    _scopes: scopes,\n    _rootScopes: rootScopes,\n    _fallback: fallback,\n    _getTarget: getTarget,\n    override: (scope) => _createResolver([scope, ...scopes], prefixes, rootScopes, fallback),\n  };\n  return new Proxy(cache, {\n    deleteProperty(target, prop) {\n      delete target[prop];\n      delete target._keys;\n      delete scopes[0][prop];\n      return true;\n    },\n    get(target, prop) {\n      return _cached(target, prop,\n        () => _resolveWithPrefixes(prop, prefixes, scopes, target));\n    },\n    getOwnPropertyDescriptor(target, prop) {\n      return Reflect.getOwnPropertyDescriptor(target._scopes[0], prop);\n    },\n    getPrototypeOf() {\n      return Reflect.getPrototypeOf(scopes[0]);\n    },\n    has(target, prop) {\n      return getKeysFromAllScopes(target).includes(prop);\n    },\n    ownKeys(target) {\n      return getKeysFromAllScopes(target);\n    },\n    set(target, prop, value) {\n      const storage = target._storage || (target._storage = getTarget());\n      storage[prop] = value;\n      delete target[prop];\n      delete target._keys;\n      return true;\n    }\n  });\n}\nfunction _attachContext(proxy, context, subProxy, descriptorDefaults) {\n  const cache = {\n    _cacheable: false,\n    _proxy: proxy,\n    _context: context,\n    _subProxy: subProxy,\n    _stack: new Set(),\n    _descriptors: _descriptors(proxy, descriptorDefaults),\n    setContext: (ctx) => _attachContext(proxy, ctx, subProxy, descriptorDefaults),\n    override: (scope) => _attachContext(proxy.override(scope), context, subProxy, descriptorDefaults)\n  };\n  return new Proxy(cache, {\n    deleteProperty(target, prop) {\n      delete target[prop];\n      delete proxy[prop];\n      return true;\n    },\n    get(target, prop, receiver) {\n      return _cached(target, prop,\n        () => _resolveWithContext(target, prop, receiver));\n    },\n    getOwnPropertyDescriptor(target, prop) {\n      return target._descriptors.allKeys\n        ? Reflect.has(proxy, prop) ? {enumerable: true, configurable: true} : undefined\n        : Reflect.getOwnPropertyDescriptor(proxy, prop);\n    },\n    getPrototypeOf() {\n      return Reflect.getPrototypeOf(proxy);\n    },\n    has(target, prop) {\n      return Reflect.has(proxy, prop);\n    },\n    ownKeys() {\n      return Reflect.ownKeys(proxy);\n    },\n    set(target, prop, value) {\n      proxy[prop] = value;\n      delete target[prop];\n      return true;\n    }\n  });\n}\nfunction _descriptors(proxy, defaults = {scriptable: true, indexable: true}) {\n  const {_scriptable = defaults.scriptable, _indexable = defaults.indexable, _allKeys = defaults.allKeys} = proxy;\n  return {\n    allKeys: _allKeys,\n    scriptable: _scriptable,\n    indexable: _indexable,\n    isScriptable: isFunction(_scriptable) ? _scriptable : () => _scriptable,\n    isIndexable: isFunction(_indexable) ? _indexable : () => _indexable\n  };\n}\nconst readKey = (prefix, name) => prefix ? prefix + _capitalize(name) : name;\nconst needsSubResolver = (prop, value) => isObject(value) && prop !== 'adapters';\nfunction _cached(target, prop, resolve) {\n  let value = target[prop];\n  if (defined(value)) {\n    return value;\n  }\n  value = resolve();\n  if (defined(value)) {\n    target[prop] = value;\n  }\n  return value;\n}\nfunction _resolveWithContext(target, prop, receiver) {\n  const {_proxy, _context, _subProxy, _descriptors: descriptors} = target;\n  let value = _proxy[prop];\n  if (isFunction(value) && descriptors.isScriptable(prop)) {\n    value = _resolveScriptable(prop, value, target, receiver);\n  }\n  if (isArray(value) && value.length) {\n    value = _resolveArray(prop, value, target, descriptors.isIndexable);\n  }\n  if (needsSubResolver(prop, value)) {\n    value = _attachContext(value, _context, _subProxy && _subProxy[prop], descriptors);\n  }\n  return value;\n}\nfunction _resolveScriptable(prop, value, target, receiver) {\n  const {_proxy, _context, _subProxy, _stack} = target;\n  if (_stack.has(prop)) {\n    throw new Error('Recursion detected: ' + [..._stack].join('->') + '->' + prop);\n  }\n  _stack.add(prop);\n  value = value(_context, _subProxy || receiver);\n  _stack.delete(prop);\n  if (isObject(value)) {\n    value = createSubResolver(_proxy._scopes, _proxy, prop, value);\n  }\n  return value;\n}\nfunction _resolveArray(prop, value, target, isIndexable) {\n  const {_proxy, _context, _subProxy, _descriptors: descriptors} = target;\n  if (defined(_context.index) && isIndexable(prop)) {\n    value = value[_context.index % value.length];\n  } else if (isObject(value[0])) {\n    const arr = value;\n    const scopes = _proxy._scopes.filter(s => s !== arr);\n    value = [];\n    for (const item of arr) {\n      const resolver = createSubResolver(scopes, _proxy, prop, item);\n      value.push(_attachContext(resolver, _context, _subProxy && _subProxy[prop], descriptors));\n    }\n  }\n  return value;\n}\nfunction resolveFallback(fallback, prop, value) {\n  return isFunction(fallback) ? fallback(prop, value) : fallback;\n}\nconst getScope = (key, parent) => key === true ? parent\n  : typeof key === 'string' ? resolveObjectKey(parent, key) : undefined;\nfunction addScopes(set, parentScopes, key, parentFallback) {\n  for (const parent of parentScopes) {\n    const scope = getScope(key, parent);\n    if (scope) {\n      set.add(scope);\n      const fallback = resolveFallback(scope._fallback, key, scope);\n      if (defined(fallback) && fallback !== key && fallback !== parentFallback) {\n        return fallback;\n      }\n    } else if (scope === false && defined(parentFallback) && key !== parentFallback) {\n      return null;\n    }\n  }\n  return false;\n}\nfunction createSubResolver(parentScopes, resolver, prop, value) {\n  const rootScopes = resolver._rootScopes;\n  const fallback = resolveFallback(resolver._fallback, prop, value);\n  const allScopes = [...parentScopes, ...rootScopes];\n  const set = new Set();\n  set.add(value);\n  let key = addScopesFromKey(set, allScopes, prop, fallback || prop);\n  if (key === null) {\n    return false;\n  }\n  if (defined(fallback) && fallback !== prop) {\n    key = addScopesFromKey(set, allScopes, fallback, key);\n    if (key === null) {\n      return false;\n    }\n  }\n  return _createResolver([...set], [''], rootScopes, fallback,\n    () => subGetTarget(resolver, prop, value));\n}\nfunction addScopesFromKey(set, allScopes, key, fallback) {\n  while (key) {\n    key = addScopes(set, allScopes, key, fallback);\n  }\n  return key;\n}\nfunction subGetTarget(resolver, prop, value) {\n  const parent = resolver._getTarget();\n  if (!(prop in parent)) {\n    parent[prop] = {};\n  }\n  const target = parent[prop];\n  if (isArray(target) && isObject(value)) {\n    return value;\n  }\n  return target;\n}\nfunction _resolveWithPrefixes(prop, prefixes, scopes, proxy) {\n  let value;\n  for (const prefix of prefixes) {\n    value = _resolve(readKey(prefix, prop), scopes);\n    if (defined(value)) {\n      return needsSubResolver(prop, value)\n        ? createSubResolver(scopes, proxy, prop, value)\n        : value;\n    }\n  }\n}\nfunction _resolve(key, scopes) {\n  for (const scope of scopes) {\n    if (!scope) {\n      continue;\n    }\n    const value = scope[key];\n    if (defined(value)) {\n      return value;\n    }\n  }\n}\nfunction getKeysFromAllScopes(target) {\n  let keys = target._keys;\n  if (!keys) {\n    keys = target._keys = resolveKeysFromAllScopes(target._scopes);\n  }\n  return keys;\n}\nfunction resolveKeysFromAllScopes(scopes) {\n  const set = new Set();\n  for (const scope of scopes) {\n    for (const key of Object.keys(scope).filter(k => !k.startsWith('_'))) {\n      set.add(key);\n    }\n  }\n  return [...set];\n}\n\nconst EPSILON = Number.EPSILON || 1e-14;\nconst getPoint = (points, i) => i < points.length && !points[i].skip && points[i];\nconst getValueAxis = (indexAxis) => indexAxis === 'x' ? 'y' : 'x';\nfunction splineCurve(firstPoint, middlePoint, afterPoint, t) {\n  const previous = firstPoint.skip ? middlePoint : firstPoint;\n  const current = middlePoint;\n  const next = afterPoint.skip ? middlePoint : afterPoint;\n  const d01 = distanceBetweenPoints(current, previous);\n  const d12 = distanceBetweenPoints(next, current);\n  let s01 = d01 / (d01 + d12);\n  let s12 = d12 / (d01 + d12);\n  s01 = isNaN(s01) ? 0 : s01;\n  s12 = isNaN(s12) ? 0 : s12;\n  const fa = t * s01;\n  const fb = t * s12;\n  return {\n    previous: {\n      x: current.x - fa * (next.x - previous.x),\n      y: current.y - fa * (next.y - previous.y)\n    },\n    next: {\n      x: current.x + fb * (next.x - previous.x),\n      y: current.y + fb * (next.y - previous.y)\n    }\n  };\n}\nfunction monotoneAdjust(points, deltaK, mK) {\n  const pointsLen = points.length;\n  let alphaK, betaK, tauK, squaredMagnitude, pointCurrent;\n  let pointAfter = getPoint(points, 0);\n  for (let i = 0; i < pointsLen - 1; ++i) {\n    pointCurrent = pointAfter;\n    pointAfter = getPoint(points, i + 1);\n    if (!pointCurrent || !pointAfter) {\n      continue;\n    }\n    if (almostEquals(deltaK[i], 0, EPSILON)) {\n      mK[i] = mK[i + 1] = 0;\n      continue;\n    }\n    alphaK = mK[i] / deltaK[i];\n    betaK = mK[i + 1] / deltaK[i];\n    squaredMagnitude = Math.pow(alphaK, 2) + Math.pow(betaK, 2);\n    if (squaredMagnitude <= 9) {\n      continue;\n    }\n    tauK = 3 / Math.sqrt(squaredMagnitude);\n    mK[i] = alphaK * tauK * deltaK[i];\n    mK[i + 1] = betaK * tauK * deltaK[i];\n  }\n}\nfunction monotoneCompute(points, mK, indexAxis = 'x') {\n  const valueAxis = getValueAxis(indexAxis);\n  const pointsLen = points.length;\n  let delta, pointBefore, pointCurrent;\n  let pointAfter = getPoint(points, 0);\n  for (let i = 0; i < pointsLen; ++i) {\n    pointBefore = pointCurrent;\n    pointCurrent = pointAfter;\n    pointAfter = getPoint(points, i + 1);\n    if (!pointCurrent) {\n      continue;\n    }\n    const iPixel = pointCurrent[indexAxis];\n    const vPixel = pointCurrent[valueAxis];\n    if (pointBefore) {\n      delta = (iPixel - pointBefore[indexAxis]) / 3;\n      pointCurrent[`cp1${indexAxis}`] = iPixel - delta;\n      pointCurrent[`cp1${valueAxis}`] = vPixel - delta * mK[i];\n    }\n    if (pointAfter) {\n      delta = (pointAfter[indexAxis] - iPixel) / 3;\n      pointCurrent[`cp2${indexAxis}`] = iPixel + delta;\n      pointCurrent[`cp2${valueAxis}`] = vPixel + delta * mK[i];\n    }\n  }\n}\nfunction splineCurveMonotone(points, indexAxis = 'x') {\n  const valueAxis = getValueAxis(indexAxis);\n  const pointsLen = points.length;\n  const deltaK = Array(pointsLen).fill(0);\n  const mK = Array(pointsLen);\n  let i, pointBefore, pointCurrent;\n  let pointAfter = getPoint(points, 0);\n  for (i = 0; i < pointsLen; ++i) {\n    pointBefore = pointCurrent;\n    pointCurrent = pointAfter;\n    pointAfter = getPoint(points, i + 1);\n    if (!pointCurrent) {\n      continue;\n    }\n    if (pointAfter) {\n      const slopeDelta = pointAfter[indexAxis] - pointCurrent[indexAxis];\n      deltaK[i] = slopeDelta !== 0 ? (pointAfter[valueAxis] - pointCurrent[valueAxis]) / slopeDelta : 0;\n    }\n    mK[i] = !pointBefore ? deltaK[i]\n      : !pointAfter ? deltaK[i - 1]\n      : (sign(deltaK[i - 1]) !== sign(deltaK[i])) ? 0\n      : (deltaK[i - 1] + deltaK[i]) / 2;\n  }\n  monotoneAdjust(points, deltaK, mK);\n  monotoneCompute(points, mK, indexAxis);\n}\nfunction capControlPoint(pt, min, max) {\n  return Math.max(Math.min(pt, max), min);\n}\nfunction capBezierPoints(points, area) {\n  let i, ilen, point, inArea, inAreaPrev;\n  let inAreaNext = _isPointInArea(points[0], area);\n  for (i = 0, ilen = points.length; i < ilen; ++i) {\n    inAreaPrev = inArea;\n    inArea = inAreaNext;\n    inAreaNext = i < ilen - 1 && _isPointInArea(points[i + 1], area);\n    if (!inArea) {\n      continue;\n    }\n    point = points[i];\n    if (inAreaPrev) {\n      point.cp1x = capControlPoint(point.cp1x, area.left, area.right);\n      point.cp1y = capControlPoint(point.cp1y, area.top, area.bottom);\n    }\n    if (inAreaNext) {\n      point.cp2x = capControlPoint(point.cp2x, area.left, area.right);\n      point.cp2y = capControlPoint(point.cp2y, area.top, area.bottom);\n    }\n  }\n}\nfunction _updateBezierControlPoints(points, options, area, loop, indexAxis) {\n  let i, ilen, point, controlPoints;\n  if (options.spanGaps) {\n    points = points.filter((pt) => !pt.skip);\n  }\n  if (options.cubicInterpolationMode === 'monotone') {\n    splineCurveMonotone(points, indexAxis);\n  } else {\n    let prev = loop ? points[points.length - 1] : points[0];\n    for (i = 0, ilen = points.length; i < ilen; ++i) {\n      point = points[i];\n      controlPoints = splineCurve(\n        prev,\n        point,\n        points[Math.min(i + 1, ilen - (loop ? 0 : 1)) % ilen],\n        options.tension\n      );\n      point.cp1x = controlPoints.previous.x;\n      point.cp1y = controlPoints.previous.y;\n      point.cp2x = controlPoints.next.x;\n      point.cp2y = controlPoints.next.y;\n      prev = point;\n    }\n  }\n  if (options.capBezierPoints) {\n    capBezierPoints(points, area);\n  }\n}\n\nfunction _pointInLine(p1, p2, t, mode) {\n  return {\n    x: p1.x + t * (p2.x - p1.x),\n    y: p1.y + t * (p2.y - p1.y)\n  };\n}\nfunction _steppedInterpolation(p1, p2, t, mode) {\n  return {\n    x: p1.x + t * (p2.x - p1.x),\n    y: mode === 'middle' ? t < 0.5 ? p1.y : p2.y\n    : mode === 'after' ? t < 1 ? p1.y : p2.y\n    : t > 0 ? p2.y : p1.y\n  };\n}\nfunction _bezierInterpolation(p1, p2, t, mode) {\n  const cp1 = {x: p1.cp2x, y: p1.cp2y};\n  const cp2 = {x: p2.cp1x, y: p2.cp1y};\n  const a = _pointInLine(p1, cp1, t);\n  const b = _pointInLine(cp1, cp2, t);\n  const c = _pointInLine(cp2, p2, t);\n  const d = _pointInLine(a, b, t);\n  const e = _pointInLine(b, c, t);\n  return _pointInLine(d, e, t);\n}\n\nconst getRightToLeftAdapter = function(rectX, width) {\n  return {\n    x(x) {\n      return rectX + rectX + width - x;\n    },\n    setWidth(w) {\n      width = w;\n    },\n    textAlign(align) {\n      if (align === 'center') {\n        return align;\n      }\n      return align === 'right' ? 'left' : 'right';\n    },\n    xPlus(x, value) {\n      return x - value;\n    },\n    leftForLtr(x, itemWidth) {\n      return x - itemWidth;\n    },\n  };\n};\nconst getLeftToRightAdapter = function() {\n  return {\n    x(x) {\n      return x;\n    },\n    setWidth(w) {\n    },\n    textAlign(align) {\n      return align;\n    },\n    xPlus(x, value) {\n      return x + value;\n    },\n    leftForLtr(x, _itemWidth) {\n      return x;\n    },\n  };\n};\nfunction getRtlAdapter(rtl, rectX, width) {\n  return rtl ? getRightToLeftAdapter(rectX, width) : getLeftToRightAdapter();\n}\nfunction overrideTextDirection(ctx, direction) {\n  let style, original;\n  if (direction === 'ltr' || direction === 'rtl') {\n    style = ctx.canvas.style;\n    original = [\n      style.getPropertyValue('direction'),\n      style.getPropertyPriority('direction'),\n    ];\n    style.setProperty('direction', direction, 'important');\n    ctx.prevTextDirection = original;\n  }\n}\nfunction restoreTextDirection(ctx, original) {\n  if (original !== undefined) {\n    delete ctx.prevTextDirection;\n    ctx.canvas.style.setProperty('direction', original[0], original[1]);\n  }\n}\n\nfunction propertyFn(property) {\n  if (property === 'angle') {\n    return {\n      between: _angleBetween,\n      compare: _angleDiff,\n      normalize: _normalizeAngle,\n    };\n  }\n  return {\n    between: (n, s, e) => n >= Math.min(s, e) && n <= Math.max(e, s),\n    compare: (a, b) => a - b,\n    normalize: x => x\n  };\n}\nfunction normalizeSegment({start, end, count, loop, style}) {\n  return {\n    start: start % count,\n    end: end % count,\n    loop: loop && (end - start + 1) % count === 0,\n    style\n  };\n}\nfunction getSegment(segment, points, bounds) {\n  const {property, start: startBound, end: endBound} = bounds;\n  const {between, normalize} = propertyFn(property);\n  const count = points.length;\n  let {start, end, loop} = segment;\n  let i, ilen;\n  if (loop) {\n    start += count;\n    end += count;\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      if (!between(normalize(points[start % count][property]), startBound, endBound)) {\n        break;\n      }\n      start--;\n      end--;\n    }\n    start %= count;\n    end %= count;\n  }\n  if (end < start) {\n    end += count;\n  }\n  return {start, end, loop, style: segment.style};\n}\nfunction _boundSegment(segment, points, bounds) {\n  if (!bounds) {\n    return [segment];\n  }\n  const {property, start: startBound, end: endBound} = bounds;\n  const count = points.length;\n  const {compare, between, normalize} = propertyFn(property);\n  const {start, end, loop, style} = getSegment(segment, points, bounds);\n  const result = [];\n  let inside = false;\n  let subStart = null;\n  let value, point, prevValue;\n  const startIsBefore = () => between(startBound, prevValue, value) && compare(startBound, prevValue) !== 0;\n  const endIsBefore = () => compare(endBound, value) === 0 || between(endBound, prevValue, value);\n  const shouldStart = () => inside || startIsBefore();\n  const shouldStop = () => !inside || endIsBefore();\n  for (let i = start, prev = start; i <= end; ++i) {\n    point = points[i % count];\n    if (point.skip) {\n      continue;\n    }\n    value = normalize(point[property]);\n    if (value === prevValue) {\n      continue;\n    }\n    inside = between(value, startBound, endBound);\n    if (subStart === null && shouldStart()) {\n      subStart = compare(value, startBound) === 0 ? i : prev;\n    }\n    if (subStart !== null && shouldStop()) {\n      result.push(normalizeSegment({start: subStart, end: i, loop, count, style}));\n      subStart = null;\n    }\n    prev = i;\n    prevValue = value;\n  }\n  if (subStart !== null) {\n    result.push(normalizeSegment({start: subStart, end, loop, count, style}));\n  }\n  return result;\n}\nfunction _boundSegments(line, bounds) {\n  const result = [];\n  const segments = line.segments;\n  for (let i = 0; i < segments.length; i++) {\n    const sub = _boundSegment(segments[i], line.points, bounds);\n    if (sub.length) {\n      result.push(...sub);\n    }\n  }\n  return result;\n}\nfunction findStartAndEnd(points, count, loop, spanGaps) {\n  let start = 0;\n  let end = count - 1;\n  if (loop && !spanGaps) {\n    while (start < count && !points[start].skip) {\n      start++;\n    }\n  }\n  while (start < count && points[start].skip) {\n    start++;\n  }\n  start %= count;\n  if (loop) {\n    end += start;\n  }\n  while (end > start && points[end % count].skip) {\n    end--;\n  }\n  end %= count;\n  return {start, end};\n}\nfunction solidSegments(points, start, max, loop) {\n  const count = points.length;\n  const result = [];\n  let last = start;\n  let prev = points[start];\n  let end;\n  for (end = start + 1; end <= max; ++end) {\n    const cur = points[end % count];\n    if (cur.skip || cur.stop) {\n      if (!prev.skip) {\n        loop = false;\n        result.push({start: start % count, end: (end - 1) % count, loop});\n        start = last = cur.stop ? end : null;\n      }\n    } else {\n      last = end;\n      if (prev.skip) {\n        start = end;\n      }\n    }\n    prev = cur;\n  }\n  if (last !== null) {\n    result.push({start: start % count, end: last % count, loop});\n  }\n  return result;\n}\nfunction _computeSegments(line, segmentOptions) {\n  const points = line.points;\n  const spanGaps = line.options.spanGaps;\n  const count = points.length;\n  if (!count) {\n    return [];\n  }\n  const loop = !!line._loop;\n  const {start, end} = findStartAndEnd(points, count, loop, spanGaps);\n  if (spanGaps === true) {\n    return splitByStyles([{start, end, loop}], points, segmentOptions);\n  }\n  const max = end < start ? end + count : end;\n  const completeLoop = !!line._fullLoop && start === 0 && end === count - 1;\n  return splitByStyles(solidSegments(points, start, max, completeLoop), points, segmentOptions);\n}\nfunction splitByStyles(segments, points, segmentOptions) {\n  if (!segmentOptions || !segmentOptions.setContext || !points) {\n    return segments;\n  }\n  return doSplitByStyles(segments, points, segmentOptions);\n}\nfunction doSplitByStyles(segments, points, segmentOptions) {\n  const count = points.length;\n  const result = [];\n  let start = segments[0].start;\n  let i = start;\n  for (const segment of segments) {\n    let prevStyle, style;\n    let prev = points[start % count];\n    for (i = start + 1; i <= segment.end; i++) {\n      const pt = points[i % count];\n      style = readStyle(segmentOptions.setContext({type: 'segment', p0: prev, p1: pt}));\n      if (styleChanged(style, prevStyle)) {\n        result.push({start: start, end: i - 1, loop: segment.loop, style: prevStyle});\n        prevStyle = style;\n        start = i - 1;\n      }\n      prev = pt;\n      prevStyle = style;\n    }\n    if (start < i - 1) {\n      result.push({start, end: i - 1, loop: segment.loop, style});\n      start = i - 1;\n    }\n  }\n  return result;\n}\nfunction readStyle(options) {\n  return {\n    backgroundColor: options.backgroundColor,\n    borderCapStyle: options.borderCapStyle,\n    borderDash: options.borderDash,\n    borderDashOffset: options.borderDashOffset,\n    borderJoinStyle: options.borderJoinStyle,\n    borderWidth: options.borderWidth,\n    borderColor: options.borderColor\n  };\n}\nfunction styleChanged(style, prevStyle) {\n  return prevStyle && JSON.stringify(style) !== JSON.stringify(prevStyle);\n}\n\nvar helpers = /*#__PURE__*/Object.freeze({\n__proto__: null,\neasingEffects: effects,\ncolor: color,\ngetHoverColor: getHoverColor,\nnoop: noop,\nuid: uid,\nisNullOrUndef: isNullOrUndef,\nisArray: isArray,\nisObject: isObject,\nisFinite: isNumberFinite,\nfiniteOrDefault: finiteOrDefault,\nvalueOrDefault: valueOrDefault,\ntoPercentage: toPercentage,\ntoDimension: toDimension,\ncallback: callback,\neach: each,\n_elementsEqual: _elementsEqual,\nclone: clone,\n_merger: _merger,\nmerge: merge,\nmergeIf: mergeIf,\n_mergerIf: _mergerIf,\n_deprecated: _deprecated,\nresolveObjectKey: resolveObjectKey,\n_capitalize: _capitalize,\ndefined: defined,\nisFunction: isFunction,\nsetsEqual: setsEqual,\ntoFontString: toFontString,\n_measureText: _measureText,\n_longestText: _longestText,\n_alignPixel: _alignPixel,\nclearCanvas: clearCanvas,\ndrawPoint: drawPoint,\n_isPointInArea: _isPointInArea,\nclipArea: clipArea,\nunclipArea: unclipArea,\n_steppedLineTo: _steppedLineTo,\n_bezierCurveTo: _bezierCurveTo,\nrenderText: renderText,\naddRoundedRectPath: addRoundedRectPath,\n_lookup: _lookup,\n_lookupByKey: _lookupByKey,\n_rlookupByKey: _rlookupByKey,\n_filterBetween: _filterBetween,\nlistenArrayEvents: listenArrayEvents,\nunlistenArrayEvents: unlistenArrayEvents,\n_arrayUnique: _arrayUnique,\n_createResolver: _createResolver,\n_attachContext: _attachContext,\n_descriptors: _descriptors,\nsplineCurve: splineCurve,\nsplineCurveMonotone: splineCurveMonotone,\n_updateBezierControlPoints: _updateBezierControlPoints,\n_getParentNode: _getParentNode,\ngetStyle: getStyle,\ngetRelativePosition: getRelativePosition$1,\ngetMaximumSize: getMaximumSize,\nretinaScale: retinaScale,\nsupportsEventListenerOptions: supportsEventListenerOptions,\nreadUsedSize: readUsedSize,\nfontString: fontString,\nrequestAnimFrame: requestAnimFrame,\nthrottled: throttled,\ndebounce: debounce,\n_toLeftRightCenter: _toLeftRightCenter,\n_alignStartEnd: _alignStartEnd,\n_textX: _textX,\n_pointInLine: _pointInLine,\n_steppedInterpolation: _steppedInterpolation,\n_bezierInterpolation: _bezierInterpolation,\nformatNumber: formatNumber,\ntoLineHeight: toLineHeight,\n_readValueToProps: _readValueToProps,\ntoTRBL: toTRBL,\ntoTRBLCorners: toTRBLCorners,\ntoPadding: toPadding,\ntoFont: toFont,\nresolve: resolve,\n_addGrace: _addGrace,\nPI: PI,\nTAU: TAU,\nPITAU: PITAU,\nINFINITY: INFINITY,\nRAD_PER_DEG: RAD_PER_DEG,\nHALF_PI: HALF_PI,\nQUARTER_PI: QUARTER_PI,\nTWO_THIRDS_PI: TWO_THIRDS_PI,\nlog10: log10,\nsign: sign,\nniceNum: niceNum,\n_factorize: _factorize,\nisNumber: isNumber,\nalmostEquals: almostEquals,\nalmostWhole: almostWhole,\n_setMinAndMaxByKey: _setMinAndMaxByKey,\ntoRadians: toRadians,\ntoDegrees: toDegrees,\n_decimalPlaces: _decimalPlaces,\ngetAngleFromPoint: getAngleFromPoint,\ndistanceBetweenPoints: distanceBetweenPoints,\n_angleDiff: _angleDiff,\n_normalizeAngle: _normalizeAngle,\n_angleBetween: _angleBetween,\n_limitValue: _limitValue,\n_int16Range: _int16Range,\ngetRtlAdapter: getRtlAdapter,\noverrideTextDirection: overrideTextDirection,\nrestoreTextDirection: restoreTextDirection,\n_boundSegment: _boundSegment,\n_boundSegments: _boundSegments,\n_computeSegments: _computeSegments\n});\n\nclass TypedRegistry {\n  constructor(type, scope, override) {\n    this.type = type;\n    this.scope = scope;\n    this.override = override;\n    this.items = Object.create(null);\n  }\n  isForType(type) {\n    return Object.prototype.isPrototypeOf.call(this.type.prototype, type.prototype);\n  }\n  register(item) {\n    const me = this;\n    const proto = Object.getPrototypeOf(item);\n    let parentScope;\n    if (isIChartComponent(proto)) {\n      parentScope = me.register(proto);\n    }\n    const items = me.items;\n    const id = item.id;\n    const scope = me.scope + '.' + id;\n    if (!id) {\n      throw new Error('class does not have id: ' + item);\n    }\n    if (id in items) {\n      return scope;\n    }\n    items[id] = item;\n    registerDefaults(item, scope, parentScope);\n    if (me.override) {\n      defaults.override(item.id, item.overrides);\n    }\n    return scope;\n  }\n  get(id) {\n    return this.items[id];\n  }\n  unregister(item) {\n    const items = this.items;\n    const id = item.id;\n    const scope = this.scope;\n    if (id in items) {\n      delete items[id];\n    }\n    if (scope && id in defaults[scope]) {\n      delete defaults[scope][id];\n      if (this.override) {\n        delete overrides[id];\n      }\n    }\n  }\n}\nfunction registerDefaults(item, scope, parentScope) {\n  const itemDefaults = merge(Object.create(null), [\n    parentScope ? defaults.get(parentScope) : {},\n    defaults.get(scope),\n    item.defaults\n  ]);\n  defaults.set(scope, itemDefaults);\n  if (item.defaultRoutes) {\n    routeDefaults(scope, item.defaultRoutes);\n  }\n  if (item.descriptors) {\n    defaults.describe(scope, item.descriptors);\n  }\n}\nfunction routeDefaults(scope, routes) {\n  Object.keys(routes).forEach(property => {\n    const propertyParts = property.split('.');\n    const sourceName = propertyParts.pop();\n    const sourceScope = [scope].concat(propertyParts).join('.');\n    const parts = routes[property].split('.');\n    const targetName = parts.pop();\n    const targetScope = parts.join('.');\n    defaults.route(sourceScope, sourceName, targetScope, targetName);\n  });\n}\nfunction isIChartComponent(proto) {\n  return 'id' in proto && 'defaults' in proto;\n}\n\nclass Registry {\n  constructor() {\n    this.controllers = new TypedRegistry(DatasetController, 'datasets', true);\n    this.elements = new TypedRegistry(Element, 'elements');\n    this.plugins = new TypedRegistry(Object, 'plugins');\n    this.scales = new TypedRegistry(Scale, 'scales');\n    this._typedRegistries = [this.controllers, this.scales, this.elements];\n  }\n  add(...args) {\n    this._each('register', args);\n  }\n  remove(...args) {\n    this._each('unregister', args);\n  }\n  addControllers(...args) {\n    this._each('register', args, this.controllers);\n  }\n  addElements(...args) {\n    this._each('register', args, this.elements);\n  }\n  addPlugins(...args) {\n    this._each('register', args, this.plugins);\n  }\n  addScales(...args) {\n    this._each('register', args, this.scales);\n  }\n  getController(id) {\n    return this._get(id, this.controllers, 'controller');\n  }\n  getElement(id) {\n    return this._get(id, this.elements, 'element');\n  }\n  getPlugin(id) {\n    return this._get(id, this.plugins, 'plugin');\n  }\n  getScale(id) {\n    return this._get(id, this.scales, 'scale');\n  }\n  removeControllers(...args) {\n    this._each('unregister', args, this.controllers);\n  }\n  removeElements(...args) {\n    this._each('unregister', args, this.elements);\n  }\n  removePlugins(...args) {\n    this._each('unregister', args, this.plugins);\n  }\n  removeScales(...args) {\n    this._each('unregister', args, this.scales);\n  }\n  _each(method, args, typedRegistry) {\n    const me = this;\n    [...args].forEach(arg => {\n      const reg = typedRegistry || me._getRegistryForType(arg);\n      if (typedRegistry || reg.isForType(arg) || (reg === me.plugins && arg.id)) {\n        me._exec(method, reg, arg);\n      } else {\n        each(arg, item => {\n          const itemReg = typedRegistry || me._getRegistryForType(item);\n          me._exec(method, itemReg, item);\n        });\n      }\n    });\n  }\n  _exec(method, registry, component) {\n    const camelMethod = _capitalize(method);\n    callback(component['before' + camelMethod], [], component);\n    registry[method](component);\n    callback(component['after' + camelMethod], [], component);\n  }\n  _getRegistryForType(type) {\n    for (let i = 0; i < this._typedRegistries.length; i++) {\n      const reg = this._typedRegistries[i];\n      if (reg.isForType(type)) {\n        return reg;\n      }\n    }\n    return this.plugins;\n  }\n  _get(id, typedRegistry, type) {\n    const item = typedRegistry.get(id);\n    if (item === undefined) {\n      throw new Error('\"' + id + '\" is not a registered ' + type + '.');\n    }\n    return item;\n  }\n}\nvar registry = new Registry();\n\nclass PluginService {\n  constructor() {\n    this._init = [];\n  }\n  notify(chart, hook, args, filter) {\n    const me = this;\n    if (hook === 'beforeInit') {\n      me._init = me._createDescriptors(chart, true);\n      me._notify(me._init, chart, 'install');\n    }\n    const descriptors = filter ? me._descriptors(chart).filter(filter) : me._descriptors(chart);\n    const result = me._notify(descriptors, chart, hook, args);\n    if (hook === 'destroy') {\n      me._notify(descriptors, chart, 'stop');\n      me._notify(me._init, chart, 'uninstall');\n    }\n    return result;\n  }\n  _notify(descriptors, chart, hook, args) {\n    args = args || {};\n    for (const descriptor of descriptors) {\n      const plugin = descriptor.plugin;\n      const method = plugin[hook];\n      const params = [chart, args, descriptor.options];\n      if (callback(method, params, plugin) === false && args.cancelable) {\n        return false;\n      }\n    }\n    return true;\n  }\n  invalidate() {\n    if (!isNullOrUndef(this._cache)) {\n      this._oldCache = this._cache;\n      this._cache = undefined;\n    }\n  }\n  _descriptors(chart) {\n    if (this._cache) {\n      return this._cache;\n    }\n    const descriptors = this._cache = this._createDescriptors(chart);\n    this._notifyStateChanges(chart);\n    return descriptors;\n  }\n  _createDescriptors(chart, all) {\n    const config = chart && chart.config;\n    const options = valueOrDefault(config.options && config.options.plugins, {});\n    const plugins = allPlugins(config);\n    return options === false && !all ? [] : createDescriptors(chart, plugins, options, all);\n  }\n  _notifyStateChanges(chart) {\n    const previousDescriptors = this._oldCache || [];\n    const descriptors = this._cache;\n    const diff = (a, b) => a.filter(x => !b.some(y => x.plugin.id === y.plugin.id));\n    this._notify(diff(previousDescriptors, descriptors), chart, 'stop');\n    this._notify(diff(descriptors, previousDescriptors), chart, 'start');\n  }\n}\nfunction allPlugins(config) {\n  const plugins = [];\n  const keys = Object.keys(registry.plugins.items);\n  for (let i = 0; i < keys.length; i++) {\n    plugins.push(registry.getPlugin(keys[i]));\n  }\n  const local = config.plugins || [];\n  for (let i = 0; i < local.length; i++) {\n    const plugin = local[i];\n    if (plugins.indexOf(plugin) === -1) {\n      plugins.push(plugin);\n    }\n  }\n  return plugins;\n}\nfunction getOpts(options, all) {\n  if (!all && options === false) {\n    return null;\n  }\n  if (options === true) {\n    return {};\n  }\n  return options;\n}\nfunction createDescriptors(chart, plugins, options, all) {\n  const result = [];\n  const context = chart.getContext();\n  for (let i = 0; i < plugins.length; i++) {\n    const plugin = plugins[i];\n    const id = plugin.id;\n    const opts = getOpts(options[id], all);\n    if (opts === null) {\n      continue;\n    }\n    result.push({\n      plugin,\n      options: pluginOpts(chart.config, plugin, opts, context)\n    });\n  }\n  return result;\n}\nfunction pluginOpts(config, plugin, opts, context) {\n  const keys = config.pluginScopeKeys(plugin);\n  const scopes = config.getOptionScopes(opts, keys);\n  return config.createResolver(scopes, context, [''], {scriptable: false, indexable: false, allKeys: true});\n}\n\nfunction getIndexAxis(type, options) {\n  const datasetDefaults = defaults.datasets[type] || {};\n  const datasetOptions = (options.datasets || {})[type] || {};\n  return datasetOptions.indexAxis || options.indexAxis || datasetDefaults.indexAxis || 'x';\n}\nfunction getAxisFromDefaultScaleID(id, indexAxis) {\n  let axis = id;\n  if (id === '_index_') {\n    axis = indexAxis;\n  } else if (id === '_value_') {\n    axis = indexAxis === 'x' ? 'y' : 'x';\n  }\n  return axis;\n}\nfunction getDefaultScaleIDFromAxis(axis, indexAxis) {\n  return axis === indexAxis ? '_index_' : '_value_';\n}\nfunction axisFromPosition(position) {\n  if (position === 'top' || position === 'bottom') {\n    return 'x';\n  }\n  if (position === 'left' || position === 'right') {\n    return 'y';\n  }\n}\nfunction determineAxis(id, scaleOptions) {\n  if (id === 'x' || id === 'y') {\n    return id;\n  }\n  return scaleOptions.axis || axisFromPosition(scaleOptions.position) || id.charAt(0).toLowerCase();\n}\nfunction mergeScaleConfig(config, options) {\n  const chartDefaults = overrides[config.type] || {scales: {}};\n  const configScales = options.scales || {};\n  const chartIndexAxis = getIndexAxis(config.type, options);\n  const firstIDs = Object.create(null);\n  const scales = Object.create(null);\n  Object.keys(configScales).forEach(id => {\n    const scaleConf = configScales[id];\n    const axis = determineAxis(id, scaleConf);\n    const defaultId = getDefaultScaleIDFromAxis(axis, chartIndexAxis);\n    const defaultScaleOptions = chartDefaults.scales || {};\n    firstIDs[axis] = firstIDs[axis] || id;\n    scales[id] = mergeIf(Object.create(null), [{axis}, scaleConf, defaultScaleOptions[axis], defaultScaleOptions[defaultId]]);\n  });\n  config.data.datasets.forEach(dataset => {\n    const type = dataset.type || config.type;\n    const indexAxis = dataset.indexAxis || getIndexAxis(type, options);\n    const datasetDefaults = overrides[type] || {};\n    const defaultScaleOptions = datasetDefaults.scales || {};\n    Object.keys(defaultScaleOptions).forEach(defaultID => {\n      const axis = getAxisFromDefaultScaleID(defaultID, indexAxis);\n      const id = dataset[axis + 'AxisID'] || firstIDs[axis] || axis;\n      scales[id] = scales[id] || Object.create(null);\n      mergeIf(scales[id], [{axis}, configScales[id], defaultScaleOptions[defaultID]]);\n    });\n  });\n  Object.keys(scales).forEach(key => {\n    const scale = scales[key];\n    mergeIf(scale, [defaults.scales[scale.type], defaults.scale]);\n  });\n  return scales;\n}\nfunction initOptions(config) {\n  const options = config.options || (config.options = {});\n  options.plugins = valueOrDefault(options.plugins, {});\n  options.scales = mergeScaleConfig(config, options);\n}\nfunction initData(data) {\n  data = data || {};\n  data.datasets = data.datasets || [];\n  data.labels = data.labels || [];\n  return data;\n}\nfunction initConfig(config) {\n  config = config || {};\n  config.data = initData(config.data);\n  initOptions(config);\n  return config;\n}\nconst keyCache = new Map();\nconst keysCached = new Set();\nfunction cachedKeys(cacheKey, generate) {\n  let keys = keyCache.get(cacheKey);\n  if (!keys) {\n    keys = generate();\n    keyCache.set(cacheKey, keys);\n    keysCached.add(keys);\n  }\n  return keys;\n}\nconst addIfFound = (set, obj, key) => {\n  const opts = resolveObjectKey(obj, key);\n  if (opts !== undefined) {\n    set.add(opts);\n  }\n};\nclass Config {\n  constructor(config) {\n    this._config = initConfig(config);\n    this._scopeCache = new Map();\n    this._resolverCache = new Map();\n  }\n  get type() {\n    return this._config.type;\n  }\n  set type(type) {\n    this._config.type = type;\n  }\n  get data() {\n    return this._config.data;\n  }\n  set data(data) {\n    this._config.data = initData(data);\n  }\n  get options() {\n    return this._config.options;\n  }\n  set options(options) {\n    this._config.options = options;\n  }\n  get plugins() {\n    return this._config.plugins;\n  }\n  update() {\n    const config = this._config;\n    this.clearCache();\n    initOptions(config);\n  }\n  clearCache() {\n    this._scopeCache.clear();\n    this._resolverCache.clear();\n  }\n  datasetScopeKeys(datasetType) {\n    return cachedKeys(datasetType,\n      () => [[\n        `datasets.${datasetType}`,\n        ''\n      ]]);\n  }\n  datasetAnimationScopeKeys(datasetType, transition) {\n    return cachedKeys(`${datasetType}.transition.${transition}`,\n      () => [\n        [\n          `datasets.${datasetType}.transitions.${transition}`,\n          `transitions.${transition}`,\n        ],\n        [\n          `datasets.${datasetType}`,\n          ''\n        ]\n      ]);\n  }\n  datasetElementScopeKeys(datasetType, elementType) {\n    return cachedKeys(`${datasetType}-${elementType}`,\n      () => [[\n        `datasets.${datasetType}.elements.${elementType}`,\n        `datasets.${datasetType}`,\n        `elements.${elementType}`,\n        ''\n      ]]);\n  }\n  pluginScopeKeys(plugin) {\n    const id = plugin.id;\n    const type = this.type;\n    return cachedKeys(`${type}-plugin-${id}`,\n      () => [[\n        `plugins.${id}`,\n        ...plugin.additionalOptionScopes || [],\n      ]]);\n  }\n  _cachedScopes(mainScope, resetCache) {\n    const _scopeCache = this._scopeCache;\n    let cache = _scopeCache.get(mainScope);\n    if (!cache || resetCache) {\n      cache = new Map();\n      _scopeCache.set(mainScope, cache);\n    }\n    return cache;\n  }\n  getOptionScopes(mainScope, keyLists, resetCache) {\n    const {options, type} = this;\n    const cache = this._cachedScopes(mainScope, resetCache);\n    const cached = cache.get(keyLists);\n    if (cached) {\n      return cached;\n    }\n    const scopes = new Set();\n    keyLists.forEach(keys => {\n      if (mainScope) {\n        scopes.add(mainScope);\n        keys.forEach(key => addIfFound(scopes, mainScope, key));\n      }\n      keys.forEach(key => addIfFound(scopes, options, key));\n      keys.forEach(key => addIfFound(scopes, overrides[type] || {}, key));\n      keys.forEach(key => addIfFound(scopes, defaults, key));\n      keys.forEach(key => addIfFound(scopes, descriptors, key));\n    });\n    const array = [...scopes];\n    if (keysCached.has(keyLists)) {\n      cache.set(keyLists, array);\n    }\n    return array;\n  }\n  chartOptionScopes() {\n    const {options, type} = this;\n    return [\n      options,\n      overrides[type] || {},\n      defaults.datasets[type] || {},\n      {type},\n      defaults,\n      descriptors\n    ];\n  }\n  resolveNamedOptions(scopes, names, context, prefixes = ['']) {\n    const result = {$shared: true};\n    const {resolver, subPrefixes} = getResolver(this._resolverCache, scopes, prefixes);\n    let options = resolver;\n    if (needContext(resolver, names)) {\n      result.$shared = false;\n      context = isFunction(context) ? context() : context;\n      const subResolver = this.createResolver(scopes, context, subPrefixes);\n      options = _attachContext(resolver, context, subResolver);\n    }\n    for (const prop of names) {\n      result[prop] = options[prop];\n    }\n    return result;\n  }\n  createResolver(scopes, context, prefixes = [''], descriptorDefaults) {\n    const {resolver} = getResolver(this._resolverCache, scopes, prefixes);\n    return isObject(context)\n      ? _attachContext(resolver, context, undefined, descriptorDefaults)\n      : resolver;\n  }\n}\nfunction getResolver(resolverCache, scopes, prefixes) {\n  let cache = resolverCache.get(scopes);\n  if (!cache) {\n    cache = new Map();\n    resolverCache.set(scopes, cache);\n  }\n  const cacheKey = prefixes.join();\n  let cached = cache.get(cacheKey);\n  if (!cached) {\n    const resolver = _createResolver(scopes, prefixes);\n    cached = {\n      resolver,\n      subPrefixes: prefixes.filter(p => !p.toLowerCase().includes('hover'))\n    };\n    cache.set(cacheKey, cached);\n  }\n  return cached;\n}\nfunction needContext(proxy, names) {\n  const {isScriptable, isIndexable} = _descriptors(proxy);\n  for (const prop of names) {\n    if ((isScriptable(prop) && isFunction(proxy[prop]))\n      || (isIndexable(prop) && isArray(proxy[prop]))) {\n      return true;\n    }\n  }\n  return false;\n}\n\nvar version = \"3.3.2\";\n\nconst KNOWN_POSITIONS = ['top', 'bottom', 'left', 'right', 'chartArea'];\nfunction positionIsHorizontal(position, axis) {\n  return position === 'top' || position === 'bottom' || (KNOWN_POSITIONS.indexOf(position) === -1 && axis === 'x');\n}\nfunction compare2Level(l1, l2) {\n  return function(a, b) {\n    return a[l1] === b[l1]\n      ? a[l2] - b[l2]\n      : a[l1] - b[l1];\n  };\n}\nfunction onAnimationsComplete(context) {\n  const chart = context.chart;\n  const animationOptions = chart.options.animation;\n  chart.notifyPlugins('afterRender');\n  callback(animationOptions && animationOptions.onComplete, [context], chart);\n}\nfunction onAnimationProgress(context) {\n  const chart = context.chart;\n  const animationOptions = chart.options.animation;\n  callback(animationOptions && animationOptions.onProgress, [context], chart);\n}\nfunction isDomSupported() {\n  return typeof window !== 'undefined' && typeof document !== 'undefined';\n}\nfunction getCanvas(item) {\n  if (isDomSupported() && typeof item === 'string') {\n    item = document.getElementById(item);\n  } else if (item && item.length) {\n    item = item[0];\n  }\n  if (item && item.canvas) {\n    item = item.canvas;\n  }\n  return item;\n}\nconst instances = {};\nconst getChart = (key) => {\n  const canvas = getCanvas(key);\n  return Object.values(instances).filter((c) => c.canvas === canvas).pop();\n};\nclass Chart {\n  constructor(item, config) {\n    const me = this;\n    this.config = config = new Config(config);\n    const initialCanvas = getCanvas(item);\n    const existingChart = getChart(initialCanvas);\n    if (existingChart) {\n      throw new Error(\n        'Canvas is already in use. Chart with ID \\'' + existingChart.id + '\\'' +\n\t\t\t\t' must be destroyed before the canvas can be reused.'\n      );\n    }\n    const options = config.createResolver(config.chartOptionScopes(), me.getContext());\n    this.platform = me._initializePlatform(initialCanvas, config);\n    const context = me.platform.acquireContext(initialCanvas, options.aspectRatio);\n    const canvas = context && context.canvas;\n    const height = canvas && canvas.height;\n    const width = canvas && canvas.width;\n    this.id = uid();\n    this.ctx = context;\n    this.canvas = canvas;\n    this.width = width;\n    this.height = height;\n    this._options = options;\n    this._aspectRatio = this.aspectRatio;\n    this._layers = [];\n    this._metasets = [];\n    this._stacks = undefined;\n    this.boxes = [];\n    this.currentDevicePixelRatio = undefined;\n    this.chartArea = undefined;\n    this._active = [];\n    this._lastEvent = undefined;\n    this._listeners = {};\n    this._responsiveListeners = undefined;\n    this._sortedMetasets = [];\n    this.scales = {};\n    this.scale = undefined;\n    this._plugins = new PluginService();\n    this.$proxies = {};\n    this._hiddenIndices = {};\n    this.attached = false;\n    this._animationsDisabled = undefined;\n    this.$context = undefined;\n    this._doResize = debounce(() => this.update('resize'), options.resizeDelay || 0);\n    instances[me.id] = me;\n    if (!context || !canvas) {\n      console.error(\"Failed to create chart: can't acquire context from the given item\");\n      return;\n    }\n    animator.listen(me, 'complete', onAnimationsComplete);\n    animator.listen(me, 'progress', onAnimationProgress);\n    me._initialize();\n    if (me.attached) {\n      me.update();\n    }\n  }\n  get aspectRatio() {\n    const {options: {aspectRatio, maintainAspectRatio}, width, height, _aspectRatio} = this;\n    if (!isNullOrUndef(aspectRatio)) {\n      return aspectRatio;\n    }\n    if (maintainAspectRatio && _aspectRatio) {\n      return _aspectRatio;\n    }\n    return height ? width / height : null;\n  }\n  get data() {\n    return this.config.data;\n  }\n  set data(data) {\n    this.config.data = data;\n  }\n  get options() {\n    return this._options;\n  }\n  set options(options) {\n    this.config.options = options;\n  }\n  _initialize() {\n    const me = this;\n    me.notifyPlugins('beforeInit');\n    if (me.options.responsive) {\n      me.resize();\n    } else {\n      retinaScale(me, me.options.devicePixelRatio);\n    }\n    me.bindEvents();\n    me.notifyPlugins('afterInit');\n    return me;\n  }\n  _initializePlatform(canvas, config) {\n    if (config.platform) {\n      return new config.platform();\n    } else if (!isDomSupported() || (typeof OffscreenCanvas !== 'undefined' && canvas instanceof OffscreenCanvas)) {\n      return new BasicPlatform();\n    }\n    return new DomPlatform();\n  }\n  clear() {\n    clearCanvas(this.canvas, this.ctx);\n    return this;\n  }\n  stop() {\n    animator.stop(this);\n    return this;\n  }\n  resize(width, height) {\n    if (!animator.running(this)) {\n      this._resize(width, height);\n    } else {\n      this._resizeBeforeDraw = {width, height};\n    }\n  }\n  _resize(width, height) {\n    const me = this;\n    const options = me.options;\n    const canvas = me.canvas;\n    const aspectRatio = options.maintainAspectRatio && me.aspectRatio;\n    const newSize = me.platform.getMaximumSize(canvas, width, height, aspectRatio);\n    const newRatio = options.devicePixelRatio || me.platform.getDevicePixelRatio();\n    me.width = newSize.width;\n    me.height = newSize.height;\n    me._aspectRatio = me.aspectRatio;\n    if (!retinaScale(me, newRatio, true)) {\n      return;\n    }\n    me.notifyPlugins('resize', {size: newSize});\n    callback(options.onResize, [me, newSize], me);\n    if (me.attached) {\n      if (me._doResize()) {\n        me.render();\n      }\n    }\n  }\n  ensureScalesHaveIDs() {\n    const options = this.options;\n    const scalesOptions = options.scales || {};\n    each(scalesOptions, (axisOptions, axisID) => {\n      axisOptions.id = axisID;\n    });\n  }\n  buildOrUpdateScales() {\n    const me = this;\n    const options = me.options;\n    const scaleOpts = options.scales;\n    const scales = me.scales;\n    const updated = Object.keys(scales).reduce((obj, id) => {\n      obj[id] = false;\n      return obj;\n    }, {});\n    let items = [];\n    if (scaleOpts) {\n      items = items.concat(\n        Object.keys(scaleOpts).map((id) => {\n          const scaleOptions = scaleOpts[id];\n          const axis = determineAxis(id, scaleOptions);\n          const isRadial = axis === 'r';\n          const isHorizontal = axis === 'x';\n          return {\n            options: scaleOptions,\n            dposition: isRadial ? 'chartArea' : isHorizontal ? 'bottom' : 'left',\n            dtype: isRadial ? 'radialLinear' : isHorizontal ? 'category' : 'linear'\n          };\n        })\n      );\n    }\n    each(items, (item) => {\n      const scaleOptions = item.options;\n      const id = scaleOptions.id;\n      const axis = determineAxis(id, scaleOptions);\n      const scaleType = valueOrDefault(scaleOptions.type, item.dtype);\n      if (scaleOptions.position === undefined || positionIsHorizontal(scaleOptions.position, axis) !== positionIsHorizontal(item.dposition)) {\n        scaleOptions.position = item.dposition;\n      }\n      updated[id] = true;\n      let scale = null;\n      if (id in scales && scales[id].type === scaleType) {\n        scale = scales[id];\n      } else {\n        const scaleClass = registry.getScale(scaleType);\n        scale = new scaleClass({\n          id,\n          type: scaleType,\n          ctx: me.ctx,\n          chart: me\n        });\n        scales[scale.id] = scale;\n      }\n      scale.init(scaleOptions, options);\n    });\n    each(updated, (hasUpdated, id) => {\n      if (!hasUpdated) {\n        delete scales[id];\n      }\n    });\n    each(scales, (scale) => {\n      layouts.configure(me, scale, scale.options);\n      layouts.addBox(me, scale);\n    });\n  }\n  _updateMetasets() {\n    const me = this;\n    const metasets = me._metasets;\n    const numData = me.data.datasets.length;\n    const numMeta = metasets.length;\n    metasets.sort((a, b) => a.index - b.index);\n    if (numMeta > numData) {\n      for (let i = numData; i < numMeta; ++i) {\n        me._destroyDatasetMeta(i);\n      }\n      metasets.splice(numData, numMeta - numData);\n    }\n    me._sortedMetasets = metasets.slice(0).sort(compare2Level('order', 'index'));\n  }\n  _removeUnreferencedMetasets() {\n    const me = this;\n    const {_metasets: metasets, data: {datasets}} = me;\n    if (metasets.length > datasets.length) {\n      delete me._stacks;\n    }\n    metasets.forEach((meta, index) => {\n      if (datasets.filter(x => x === meta._dataset).length === 0) {\n        me._destroyDatasetMeta(index);\n      }\n    });\n  }\n  buildOrUpdateControllers() {\n    const me = this;\n    const newControllers = [];\n    const datasets = me.data.datasets;\n    let i, ilen;\n    me._removeUnreferencedMetasets();\n    for (i = 0, ilen = datasets.length; i < ilen; i++) {\n      const dataset = datasets[i];\n      let meta = me.getDatasetMeta(i);\n      const type = dataset.type || me.config.type;\n      if (meta.type && meta.type !== type) {\n        me._destroyDatasetMeta(i);\n        meta = me.getDatasetMeta(i);\n      }\n      meta.type = type;\n      meta.indexAxis = dataset.indexAxis || getIndexAxis(type, me.options);\n      meta.order = dataset.order || 0;\n      meta.index = i;\n      meta.label = '' + dataset.label;\n      meta.visible = me.isDatasetVisible(i);\n      if (meta.controller) {\n        meta.controller.updateIndex(i);\n        meta.controller.linkScales();\n      } else {\n        const ControllerClass = registry.getController(type);\n        const {datasetElementType, dataElementType} = defaults.datasets[type];\n        Object.assign(ControllerClass.prototype, {\n          dataElementType: registry.getElement(dataElementType),\n          datasetElementType: datasetElementType && registry.getElement(datasetElementType)\n        });\n        meta.controller = new ControllerClass(me, i);\n        newControllers.push(meta.controller);\n      }\n    }\n    me._updateMetasets();\n    return newControllers;\n  }\n  _resetElements() {\n    const me = this;\n    each(me.data.datasets, (dataset, datasetIndex) => {\n      me.getDatasetMeta(datasetIndex).controller.reset();\n    }, me);\n  }\n  reset() {\n    this._resetElements();\n    this.notifyPlugins('reset');\n  }\n  update(mode) {\n    const me = this;\n    const config = me.config;\n    config.update();\n    me._options = config.createResolver(config.chartOptionScopes(), me.getContext());\n    each(me.scales, (scale) => {\n      layouts.removeBox(me, scale);\n    });\n    const animsDisabled = me._animationsDisabled = !me.options.animation;\n    me.ensureScalesHaveIDs();\n    me.buildOrUpdateScales();\n    const existingEvents = new Set(Object.keys(me._listeners));\n    const newEvents = new Set(me.options.events);\n    if (!setsEqual(existingEvents, newEvents) || !!this._responsiveListeners !== me.options.responsive) {\n      me.unbindEvents();\n      me.bindEvents();\n    }\n    me._plugins.invalidate();\n    if (me.notifyPlugins('beforeUpdate', {mode, cancelable: true}) === false) {\n      return;\n    }\n    const newControllers = me.buildOrUpdateControllers();\n    me.notifyPlugins('beforeElementsUpdate');\n    let minPadding = 0;\n    for (let i = 0, ilen = me.data.datasets.length; i < ilen; i++) {\n      const {controller} = me.getDatasetMeta(i);\n      const reset = !animsDisabled && newControllers.indexOf(controller) === -1;\n      controller.buildOrUpdateElements(reset);\n      minPadding = Math.max(+controller.getMaxOverflow(), minPadding);\n    }\n    me._minPadding = minPadding;\n    me._updateLayout(minPadding);\n    if (!animsDisabled) {\n      each(newControllers, (controller) => {\n        controller.reset();\n      });\n    }\n    me._updateDatasets(mode);\n    me.notifyPlugins('afterUpdate', {mode});\n    me._layers.sort(compare2Level('z', '_idx'));\n    if (me._lastEvent) {\n      me._eventHandler(me._lastEvent, true);\n    }\n    me.render();\n  }\n  _updateLayout(minPadding) {\n    const me = this;\n    if (me.notifyPlugins('beforeLayout', {cancelable: true}) === false) {\n      return;\n    }\n    layouts.update(me, me.width, me.height, minPadding);\n    const area = me.chartArea;\n    const noArea = area.width <= 0 || area.height <= 0;\n    me._layers = [];\n    each(me.boxes, (box) => {\n      if (noArea && box.position === 'chartArea') {\n        return;\n      }\n      if (box.configure) {\n        box.configure();\n      }\n      me._layers.push(...box._layers());\n    }, me);\n    me._layers.forEach((item, index) => {\n      item._idx = index;\n    });\n    me.notifyPlugins('afterLayout');\n  }\n  _updateDatasets(mode) {\n    const me = this;\n    const isFunction = typeof mode === 'function';\n    if (me.notifyPlugins('beforeDatasetsUpdate', {mode, cancelable: true}) === false) {\n      return;\n    }\n    for (let i = 0, ilen = me.data.datasets.length; i < ilen; ++i) {\n      me._updateDataset(i, isFunction ? mode({datasetIndex: i}) : mode);\n    }\n    me.notifyPlugins('afterDatasetsUpdate', {mode});\n  }\n  _updateDataset(index, mode) {\n    const me = this;\n    const meta = me.getDatasetMeta(index);\n    const args = {meta, index, mode, cancelable: true};\n    if (me.notifyPlugins('beforeDatasetUpdate', args) === false) {\n      return;\n    }\n    meta.controller._update(mode);\n    args.cancelable = false;\n    me.notifyPlugins('afterDatasetUpdate', args);\n  }\n  render() {\n    const me = this;\n    if (me.notifyPlugins('beforeRender', {cancelable: true}) === false) {\n      return;\n    }\n    if (animator.has(me)) {\n      if (me.attached && !animator.running(me)) {\n        animator.start(me);\n      }\n    } else {\n      me.draw();\n      onAnimationsComplete({chart: me});\n    }\n  }\n  draw() {\n    const me = this;\n    let i;\n    if (me._resizeBeforeDraw) {\n      const {width, height} = me._resizeBeforeDraw;\n      me._resize(width, height);\n      me._resizeBeforeDraw = null;\n    }\n    me.clear();\n    if (me.width <= 0 || me.height <= 0) {\n      return;\n    }\n    if (me.notifyPlugins('beforeDraw', {cancelable: true}) === false) {\n      return;\n    }\n    const layers = me._layers;\n    for (i = 0; i < layers.length && layers[i].z <= 0; ++i) {\n      layers[i].draw(me.chartArea);\n    }\n    me._drawDatasets();\n    for (; i < layers.length; ++i) {\n      layers[i].draw(me.chartArea);\n    }\n    me.notifyPlugins('afterDraw');\n  }\n  _getSortedDatasetMetas(filterVisible) {\n    const me = this;\n    const metasets = me._sortedMetasets;\n    const result = [];\n    let i, ilen;\n    for (i = 0, ilen = metasets.length; i < ilen; ++i) {\n      const meta = metasets[i];\n      if (!filterVisible || meta.visible) {\n        result.push(meta);\n      }\n    }\n    return result;\n  }\n  getSortedVisibleDatasetMetas() {\n    return this._getSortedDatasetMetas(true);\n  }\n  _drawDatasets() {\n    const me = this;\n    if (me.notifyPlugins('beforeDatasetsDraw', {cancelable: true}) === false) {\n      return;\n    }\n    const metasets = me.getSortedVisibleDatasetMetas();\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      me._drawDataset(metasets[i]);\n    }\n    me.notifyPlugins('afterDatasetsDraw');\n  }\n  _drawDataset(meta) {\n    const me = this;\n    const ctx = me.ctx;\n    const clip = meta._clip;\n    const area = me.chartArea;\n    const args = {\n      meta,\n      index: meta.index,\n      cancelable: true\n    };\n    if (me.notifyPlugins('beforeDatasetDraw', args) === false) {\n      return;\n    }\n    clipArea(ctx, {\n      left: clip.left === false ? 0 : area.left - clip.left,\n      right: clip.right === false ? me.width : area.right + clip.right,\n      top: clip.top === false ? 0 : area.top - clip.top,\n      bottom: clip.bottom === false ? me.height : area.bottom + clip.bottom\n    });\n    meta.controller.draw();\n    unclipArea(ctx);\n    args.cancelable = false;\n    me.notifyPlugins('afterDatasetDraw', args);\n  }\n  getElementsAtEventForMode(e, mode, options, useFinalPosition) {\n    const method = Interaction.modes[mode];\n    if (typeof method === 'function') {\n      return method(this, e, options, useFinalPosition);\n    }\n    return [];\n  }\n  getDatasetMeta(datasetIndex) {\n    const me = this;\n    const dataset = me.data.datasets[datasetIndex];\n    const metasets = me._metasets;\n    let meta = metasets.filter(x => x && x._dataset === dataset).pop();\n    if (!meta) {\n      meta = {\n        type: null,\n        data: [],\n        dataset: null,\n        controller: null,\n        hidden: null,\n        xAxisID: null,\n        yAxisID: null,\n        order: dataset && dataset.order || 0,\n        index: datasetIndex,\n        _dataset: dataset,\n        _parsed: [],\n        _sorted: false\n      };\n      metasets.push(meta);\n    }\n    return meta;\n  }\n  getContext() {\n    return this.$context || (this.$context = {chart: this, type: 'chart'});\n  }\n  getVisibleDatasetCount() {\n    return this.getSortedVisibleDatasetMetas().length;\n  }\n  isDatasetVisible(datasetIndex) {\n    const dataset = this.data.datasets[datasetIndex];\n    if (!dataset) {\n      return false;\n    }\n    const meta = this.getDatasetMeta(datasetIndex);\n    return typeof meta.hidden === 'boolean' ? !meta.hidden : !dataset.hidden;\n  }\n  setDatasetVisibility(datasetIndex, visible) {\n    const meta = this.getDatasetMeta(datasetIndex);\n    meta.hidden = !visible;\n  }\n  toggleDataVisibility(index) {\n    this._hiddenIndices[index] = !this._hiddenIndices[index];\n  }\n  getDataVisibility(index) {\n    return !this._hiddenIndices[index];\n  }\n  _updateDatasetVisibility(datasetIndex, visible) {\n    const me = this;\n    const mode = visible ? 'show' : 'hide';\n    const meta = me.getDatasetMeta(datasetIndex);\n    const anims = meta.controller._resolveAnimations(undefined, mode);\n    me.setDatasetVisibility(datasetIndex, visible);\n    anims.update(meta, {visible});\n    me.update((ctx) => ctx.datasetIndex === datasetIndex ? mode : undefined);\n  }\n  hide(datasetIndex) {\n    this._updateDatasetVisibility(datasetIndex, false);\n  }\n  show(datasetIndex) {\n    this._updateDatasetVisibility(datasetIndex, true);\n  }\n  _destroyDatasetMeta(datasetIndex) {\n    const me = this;\n    const meta = me._metasets && me._metasets[datasetIndex];\n    if (meta && meta.controller) {\n      meta.controller._destroy();\n      delete me._metasets[datasetIndex];\n    }\n  }\n  destroy() {\n    const me = this;\n    const {canvas, ctx} = me;\n    let i, ilen;\n    me.stop();\n    animator.remove(me);\n    for (i = 0, ilen = me.data.datasets.length; i < ilen; ++i) {\n      me._destroyDatasetMeta(i);\n    }\n    me.config.clearCache();\n    if (canvas) {\n      me.unbindEvents();\n      clearCanvas(canvas, ctx);\n      me.platform.releaseContext(ctx);\n      me.canvas = null;\n      me.ctx = null;\n    }\n    me.notifyPlugins('destroy');\n    delete instances[me.id];\n  }\n  toBase64Image(...args) {\n    return this.canvas.toDataURL(...args);\n  }\n  bindEvents() {\n    this.bindUserEvents();\n    if (this.options.responsive) {\n      this.bindResponsiveEvents();\n    } else {\n      this.attached = true;\n    }\n  }\n  bindUserEvents() {\n    const me = this;\n    const listeners = me._listeners;\n    const platform = me.platform;\n    const _add = (type, listener) => {\n      platform.addEventListener(me, type, listener);\n      listeners[type] = listener;\n    };\n    const listener = function(e, x, y) {\n      e.offsetX = x;\n      e.offsetY = y;\n      me._eventHandler(e);\n    };\n    each(me.options.events, (type) => _add(type, listener));\n  }\n  bindResponsiveEvents() {\n    const me = this;\n    if (!me._responsiveListeners) {\n      me._responsiveListeners = {};\n    }\n    const listeners = me._responsiveListeners;\n    const platform = me.platform;\n    const _add = (type, listener) => {\n      platform.addEventListener(me, type, listener);\n      listeners[type] = listener;\n    };\n    const _remove = (type, listener) => {\n      if (listeners[type]) {\n        platform.removeEventListener(me, type, listener);\n        delete listeners[type];\n      }\n    };\n    const listener = (width, height) => {\n      if (me.canvas) {\n        me.resize(width, height);\n      }\n    };\n    let detached;\n    const attached = () => {\n      _remove('attach', attached);\n      me.attached = true;\n      me.resize();\n      _add('resize', listener);\n      _add('detach', detached);\n    };\n    detached = () => {\n      me.attached = false;\n      _remove('resize', listener);\n      _add('attach', attached);\n    };\n    if (platform.isAttached(me.canvas)) {\n      attached();\n    } else {\n      detached();\n    }\n  }\n  unbindEvents() {\n    const me = this;\n    each(me._listeners, (listener, type) => {\n      me.platform.removeEventListener(me, type, listener);\n    });\n    me._listeners = {};\n    each(me._responsiveListeners, (listener, type) => {\n      me.platform.removeEventListener(me, type, listener);\n    });\n    me._responsiveListeners = undefined;\n  }\n  updateHoverStyle(items, mode, enabled) {\n    const prefix = enabled ? 'set' : 'remove';\n    let meta, item, i, ilen;\n    if (mode === 'dataset') {\n      meta = this.getDatasetMeta(items[0].datasetIndex);\n      meta.controller['_' + prefix + 'DatasetHoverStyle']();\n    }\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      item = items[i];\n      const controller = item && this.getDatasetMeta(item.datasetIndex).controller;\n      if (controller) {\n        controller[prefix + 'HoverStyle'](item.element, item.datasetIndex, item.index);\n      }\n    }\n  }\n  getActiveElements() {\n    return this._active || [];\n  }\n  setActiveElements(activeElements) {\n    const me = this;\n    const lastActive = me._active || [];\n    const active = activeElements.map(({datasetIndex, index}) => {\n      const meta = me.getDatasetMeta(datasetIndex);\n      if (!meta) {\n        throw new Error('No dataset found at index ' + datasetIndex);\n      }\n      return {\n        datasetIndex,\n        element: meta.data[index],\n        index,\n      };\n    });\n    const changed = !_elementsEqual(active, lastActive);\n    if (changed) {\n      me._active = active;\n      me._updateHoverStyles(active, lastActive);\n    }\n  }\n  notifyPlugins(hook, args, filter) {\n    return this._plugins.notify(this, hook, args, filter);\n  }\n  _updateHoverStyles(active, lastActive, replay) {\n    const me = this;\n    const hoverOptions = me.options.hover;\n    const diff = (a, b) => a.filter(x => !b.some(y => x.datasetIndex === y.datasetIndex && x.index === y.index));\n    const deactivated = diff(lastActive, active);\n    const activated = replay ? active : diff(active, lastActive);\n    if (deactivated.length) {\n      me.updateHoverStyle(deactivated, hoverOptions.mode, false);\n    }\n    if (activated.length && hoverOptions.mode) {\n      me.updateHoverStyle(activated, hoverOptions.mode, true);\n    }\n  }\n  _eventHandler(e, replay) {\n    const me = this;\n    const args = {event: e, replay, cancelable: true};\n    const eventFilter = (plugin) => (plugin.options.events || this.options.events).includes(e.type);\n    if (me.notifyPlugins('beforeEvent', args, eventFilter) === false) {\n      return;\n    }\n    const changed = me._handleEvent(e, replay);\n    args.cancelable = false;\n    me.notifyPlugins('afterEvent', args, eventFilter);\n    if (changed || args.changed) {\n      me.render();\n    }\n    return me;\n  }\n  _handleEvent(e, replay) {\n    const me = this;\n    const {_active: lastActive = [], options} = me;\n    const hoverOptions = options.hover;\n    const useFinalPosition = replay;\n    let active = [];\n    let changed = false;\n    let lastEvent = null;\n    if (e.type !== 'mouseout') {\n      active = me.getElementsAtEventForMode(e, hoverOptions.mode, hoverOptions, useFinalPosition);\n      lastEvent = e.type === 'click' ? me._lastEvent : e;\n    }\n    me._lastEvent = null;\n    if (_isPointInArea(e, me.chartArea, me._minPadding)) {\n      callback(options.onHover, [e, active, me], me);\n      if (e.type === 'mouseup' || e.type === 'click' || e.type === 'contextmenu') {\n        callback(options.onClick, [e, active, me], me);\n      }\n    }\n    changed = !_elementsEqual(active, lastActive);\n    if (changed || replay) {\n      me._active = active;\n      me._updateHoverStyles(active, lastActive, replay);\n    }\n    me._lastEvent = lastEvent;\n    return changed;\n  }\n}\nconst invalidatePlugins = () => each(Chart.instances, (chart) => chart._plugins.invalidate());\nconst enumerable = true;\nObject.defineProperties(Chart, {\n  defaults: {\n    enumerable,\n    value: defaults\n  },\n  instances: {\n    enumerable,\n    value: instances\n  },\n  overrides: {\n    enumerable,\n    value: overrides\n  },\n  registry: {\n    enumerable,\n    value: registry\n  },\n  version: {\n    enumerable,\n    value: version\n  },\n  getChart: {\n    enumerable,\n    value: getChart\n  },\n  register: {\n    enumerable,\n    value: (...items) => {\n      registry.add(...items);\n      invalidatePlugins();\n    }\n  },\n  unregister: {\n    enumerable,\n    value: (...items) => {\n      registry.remove(...items);\n      invalidatePlugins();\n    }\n  }\n});\n\nfunction abstract() {\n  throw new Error('This method is not implemented: Check that a complete date adapter is provided.');\n}\nclass DateAdapter {\n  constructor(options) {\n    this.options = options || {};\n  }\n  formats() {\n    return abstract();\n  }\n  parse(value, format) {\n    return abstract();\n  }\n  format(timestamp, format) {\n    return abstract();\n  }\n  add(timestamp, amount, unit) {\n    return abstract();\n  }\n  diff(a, b, unit) {\n    return abstract();\n  }\n  startOf(timestamp, unit, weekday) {\n    return abstract();\n  }\n  endOf(timestamp, unit) {\n    return abstract();\n  }\n}\nDateAdapter.override = function(members) {\n  Object.assign(DateAdapter.prototype, members);\n};\nvar _adapters = {\n  _date: DateAdapter\n};\n\nfunction getAllScaleValues(scale) {\n  if (!scale._cache.$bar) {\n    const metas = scale.getMatchingVisibleMetas('bar');\n    let values = [];\n    for (let i = 0, ilen = metas.length; i < ilen; i++) {\n      values = values.concat(metas[i].controller.getAllParsedValues(scale));\n    }\n    scale._cache.$bar = _arrayUnique(values.sort((a, b) => a - b));\n  }\n  return scale._cache.$bar;\n}\nfunction computeMinSampleSize(scale) {\n  const values = getAllScaleValues(scale);\n  let min = scale._length;\n  let i, ilen, curr, prev;\n  const updateMinAndPrev = () => {\n    if (curr === 32767 || curr === -32768) {\n      return;\n    }\n    if (defined(prev)) {\n      min = Math.min(min, Math.abs(curr - prev) || min);\n    }\n    prev = curr;\n  };\n  for (i = 0, ilen = values.length; i < ilen; ++i) {\n    curr = scale.getPixelForValue(values[i]);\n    updateMinAndPrev();\n  }\n  prev = undefined;\n  for (i = 0, ilen = scale.ticks.length; i < ilen; ++i) {\n    curr = scale.getPixelForTick(i);\n    updateMinAndPrev();\n  }\n  return min;\n}\nfunction computeFitCategoryTraits(index, ruler, options, stackCount) {\n  const thickness = options.barThickness;\n  let size, ratio;\n  if (isNullOrUndef(thickness)) {\n    size = ruler.min * options.categoryPercentage;\n    ratio = options.barPercentage;\n  } else {\n    size = thickness * stackCount;\n    ratio = 1;\n  }\n  return {\n    chunk: size / stackCount,\n    ratio,\n    start: ruler.pixels[index] - (size / 2)\n  };\n}\nfunction computeFlexCategoryTraits(index, ruler, options, stackCount) {\n  const pixels = ruler.pixels;\n  const curr = pixels[index];\n  let prev = index > 0 ? pixels[index - 1] : null;\n  let next = index < pixels.length - 1 ? pixels[index + 1] : null;\n  const percent = options.categoryPercentage;\n  if (prev === null) {\n    prev = curr - (next === null ? ruler.end - ruler.start : next - curr);\n  }\n  if (next === null) {\n    next = curr + curr - prev;\n  }\n  const start = curr - (curr - Math.min(prev, next)) / 2 * percent;\n  const size = Math.abs(next - prev) / 2 * percent;\n  return {\n    chunk: size / stackCount,\n    ratio: options.barPercentage,\n    start\n  };\n}\nfunction parseFloatBar(entry, item, vScale, i) {\n  const startValue = vScale.parse(entry[0], i);\n  const endValue = vScale.parse(entry[1], i);\n  const min = Math.min(startValue, endValue);\n  const max = Math.max(startValue, endValue);\n  let barStart = min;\n  let barEnd = max;\n  if (Math.abs(min) > Math.abs(max)) {\n    barStart = max;\n    barEnd = min;\n  }\n  item[vScale.axis] = barEnd;\n  item._custom = {\n    barStart,\n    barEnd,\n    start: startValue,\n    end: endValue,\n    min,\n    max\n  };\n}\nfunction parseValue(entry, item, vScale, i) {\n  if (isArray(entry)) {\n    parseFloatBar(entry, item, vScale, i);\n  } else {\n    item[vScale.axis] = vScale.parse(entry, i);\n  }\n  return item;\n}\nfunction parseArrayOrPrimitive(meta, data, start, count) {\n  const iScale = meta.iScale;\n  const vScale = meta.vScale;\n  const labels = iScale.getLabels();\n  const singleScale = iScale === vScale;\n  const parsed = [];\n  let i, ilen, item, entry;\n  for (i = start, ilen = start + count; i < ilen; ++i) {\n    entry = data[i];\n    item = {};\n    item[iScale.axis] = singleScale || iScale.parse(labels[i], i);\n    parsed.push(parseValue(entry, item, vScale, i));\n  }\n  return parsed;\n}\nfunction isFloatBar(custom) {\n  return custom && custom.barStart !== undefined && custom.barEnd !== undefined;\n}\nclass BarController extends DatasetController {\n  parsePrimitiveData(meta, data, start, count) {\n    return parseArrayOrPrimitive(meta, data, start, count);\n  }\n  parseArrayData(meta, data, start, count) {\n    return parseArrayOrPrimitive(meta, data, start, count);\n  }\n  parseObjectData(meta, data, start, count) {\n    const {iScale, vScale} = meta;\n    const {xAxisKey = 'x', yAxisKey = 'y'} = this._parsing;\n    const iAxisKey = iScale.axis === 'x' ? xAxisKey : yAxisKey;\n    const vAxisKey = vScale.axis === 'x' ? xAxisKey : yAxisKey;\n    const parsed = [];\n    let i, ilen, item, obj;\n    for (i = start, ilen = start + count; i < ilen; ++i) {\n      obj = data[i];\n      item = {};\n      item[iScale.axis] = iScale.parse(resolveObjectKey(obj, iAxisKey), i);\n      parsed.push(parseValue(resolveObjectKey(obj, vAxisKey), item, vScale, i));\n    }\n    return parsed;\n  }\n  updateRangeFromParsed(range, scale, parsed, stack) {\n    super.updateRangeFromParsed(range, scale, parsed, stack);\n    const custom = parsed._custom;\n    if (custom && scale === this._cachedMeta.vScale) {\n      range.min = Math.min(range.min, custom.min);\n      range.max = Math.max(range.max, custom.max);\n    }\n  }\n  getLabelAndValue(index) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const {iScale, vScale} = meta;\n    const parsed = me.getParsed(index);\n    const custom = parsed._custom;\n    const value = isFloatBar(custom)\n      ? '[' + custom.start + ', ' + custom.end + ']'\n      : '' + vScale.getLabelForValue(parsed[vScale.axis]);\n    return {\n      label: '' + iScale.getLabelForValue(parsed[iScale.axis]),\n      value\n    };\n  }\n  initialize() {\n    const me = this;\n    me.enableOptionSharing = true;\n    super.initialize();\n    const meta = me._cachedMeta;\n    meta.stack = me.getDataset().stack;\n  }\n  update(mode) {\n    const me = this;\n    const meta = me._cachedMeta;\n    me.updateElements(meta.data, 0, meta.data.length, mode);\n  }\n  updateElements(bars, start, count, mode) {\n    const me = this;\n    const reset = mode === 'reset';\n    const vScale = me._cachedMeta.vScale;\n    const base = vScale.getBasePixel();\n    const horizontal = vScale.isHorizontal();\n    const ruler = me._getRuler();\n    const firstOpts = me.resolveDataElementOptions(start, mode);\n    const sharedOptions = me.getSharedOptions(firstOpts);\n    const includeOptions = me.includeOptions(mode, sharedOptions);\n    me.updateSharedOptions(sharedOptions, mode, firstOpts);\n    for (let i = start; i < start + count; i++) {\n      const parsed = me.getParsed(i);\n      const vpixels = reset || isNullOrUndef(parsed[vScale.axis]) ? {base, head: base} : me._calculateBarValuePixels(i);\n      const ipixels = me._calculateBarIndexPixels(i, ruler);\n      const stack = (parsed._stacks || {})[vScale.axis];\n      const properties = {\n        horizontal,\n        base: vpixels.base,\n        enableBorderRadius: !stack || isFloatBar(parsed._custom) || (me.index === stack._top || me.index === stack._bottom),\n        x: horizontal ? vpixels.head : ipixels.center,\n        y: horizontal ? ipixels.center : vpixels.head,\n        height: horizontal ? ipixels.size : undefined,\n        width: horizontal ? undefined : ipixels.size\n      };\n      if (includeOptions) {\n        properties.options = sharedOptions || me.resolveDataElementOptions(i, mode);\n      }\n      me.updateElement(bars[i], i, properties, mode);\n    }\n  }\n  _getStacks(last, dataIndex) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const iScale = meta.iScale;\n    const metasets = iScale.getMatchingVisibleMetas(me._type);\n    const stacked = iScale.options.stacked;\n    const ilen = metasets.length;\n    const stacks = [];\n    let i, item;\n    for (i = 0; i < ilen; ++i) {\n      item = metasets[i];\n      if (typeof dataIndex !== 'undefined') {\n        const val = item.controller.getParsed(dataIndex)[\n          item.controller._cachedMeta.vScale.axis\n        ];\n        if (isNullOrUndef(val) || isNaN(val)) {\n          continue;\n        }\n      }\n      if (stacked === false || stacks.indexOf(item.stack) === -1 ||\n\t\t\t\t(stacked === undefined && item.stack === undefined)) {\n        stacks.push(item.stack);\n      }\n      if (item.index === last) {\n        break;\n      }\n    }\n    if (!stacks.length) {\n      stacks.push(undefined);\n    }\n    return stacks;\n  }\n  _getStackCount(index) {\n    return this._getStacks(undefined, index).length;\n  }\n  _getStackIndex(datasetIndex, name, dataIndex) {\n    const stacks = this._getStacks(datasetIndex, dataIndex);\n    const index = (name !== undefined)\n      ? stacks.indexOf(name)\n      : -1;\n    return (index === -1)\n      ? stacks.length - 1\n      : index;\n  }\n  _getRuler() {\n    const me = this;\n    const opts = me.options;\n    const meta = me._cachedMeta;\n    const iScale = meta.iScale;\n    const pixels = [];\n    let i, ilen;\n    for (i = 0, ilen = meta.data.length; i < ilen; ++i) {\n      pixels.push(iScale.getPixelForValue(me.getParsed(i)[iScale.axis], i));\n    }\n    const barThickness = opts.barThickness;\n    const min = barThickness || computeMinSampleSize(iScale);\n    return {\n      min,\n      pixels,\n      start: iScale._startPixel,\n      end: iScale._endPixel,\n      stackCount: me._getStackCount(),\n      scale: iScale,\n      grouped: opts.grouped,\n      ratio: barThickness ? 1 : opts.categoryPercentage * opts.barPercentage\n    };\n  }\n  _calculateBarValuePixels(index) {\n    const me = this;\n    const {vScale, _stacked} = me._cachedMeta;\n    const {base: baseValue, minBarLength} = me.options;\n    const parsed = me.getParsed(index);\n    const custom = parsed._custom;\n    const floating = isFloatBar(custom);\n    let value = parsed[vScale.axis];\n    let start = 0;\n    let length = _stacked ? me.applyStack(vScale, parsed, _stacked) : value;\n    let head, size;\n    if (length !== value) {\n      start = length - value;\n      length = value;\n    }\n    if (floating) {\n      value = custom.barStart;\n      length = custom.barEnd - custom.barStart;\n      if (value !== 0 && sign(value) !== sign(custom.barEnd)) {\n        start = 0;\n      }\n      start += value;\n    }\n    const startValue = !isNullOrUndef(baseValue) && !floating ? baseValue : start;\n    let base = vScale.getPixelForValue(startValue);\n    if (this.chart.getDataVisibility(index)) {\n      head = vScale.getPixelForValue(start + length);\n    } else {\n      head = base;\n    }\n    size = head - base;\n    if (minBarLength !== undefined && Math.abs(size) < minBarLength) {\n      size = size < 0 ? -minBarLength : minBarLength;\n      if (value === 0) {\n        base -= size / 2;\n      }\n      head = base + size;\n    }\n    const actualBase = baseValue || 0;\n    if (base === vScale.getPixelForValue(actualBase)) {\n      const halfGrid = vScale.getLineWidthForValue(actualBase) / 2;\n      if (size > 0) {\n        base += halfGrid;\n        size -= halfGrid;\n      } else if (size < 0) {\n        base -= halfGrid;\n        size += halfGrid;\n      }\n    }\n    return {\n      size,\n      base,\n      head,\n      center: head + size / 2\n    };\n  }\n  _calculateBarIndexPixels(index, ruler) {\n    const me = this;\n    const scale = ruler.scale;\n    const options = me.options;\n    const skipNull = options.skipNull;\n    const maxBarThickness = valueOrDefault(options.maxBarThickness, Infinity);\n    let center, size;\n    if (ruler.grouped) {\n      const stackCount = skipNull ? me._getStackCount(index) : ruler.stackCount;\n      const range = options.barThickness === 'flex'\n        ? computeFlexCategoryTraits(index, ruler, options, stackCount)\n        : computeFitCategoryTraits(index, ruler, options, stackCount);\n      const stackIndex = me._getStackIndex(me.index, me._cachedMeta.stack, skipNull ? index : undefined);\n      center = range.start + (range.chunk * stackIndex) + (range.chunk / 2);\n      size = Math.min(maxBarThickness, range.chunk * range.ratio);\n    } else {\n      center = scale.getPixelForValue(me.getParsed(index)[scale.axis], index);\n      size = Math.min(maxBarThickness, ruler.min * ruler.ratio);\n    }\n    return {\n      base: center - size / 2,\n      head: center + size / 2,\n      center,\n      size\n    };\n  }\n  draw() {\n    const me = this;\n    const chart = me.chart;\n    const meta = me._cachedMeta;\n    const vScale = meta.vScale;\n    const rects = meta.data;\n    const ilen = rects.length;\n    let i = 0;\n    clipArea(chart.ctx, chart.chartArea);\n    for (; i < ilen; ++i) {\n      if (me.getParsed(i)[vScale.axis] !== null) {\n        rects[i].draw(me._ctx);\n      }\n    }\n    unclipArea(chart.ctx);\n  }\n}\nBarController.id = 'bar';\nBarController.defaults = {\n  datasetElementType: false,\n  dataElementType: 'bar',\n  categoryPercentage: 0.8,\n  barPercentage: 0.9,\n  grouped: true,\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['x', 'y', 'base', 'width', 'height']\n    }\n  }\n};\nBarController.overrides = {\n  interaction: {\n    mode: 'index'\n  },\n  scales: {\n    _index_: {\n      type: 'category',\n      offset: true,\n      grid: {\n        offset: true\n      }\n    },\n    _value_: {\n      type: 'linear',\n      beginAtZero: true,\n    }\n  }\n};\n\nclass BubbleController extends DatasetController {\n  initialize() {\n    this.enableOptionSharing = true;\n    super.initialize();\n  }\n  parseObjectData(meta, data, start, count) {\n    const {xScale, yScale} = meta;\n    const {xAxisKey = 'x', yAxisKey = 'y'} = this._parsing;\n    const parsed = [];\n    let i, ilen, item;\n    for (i = start, ilen = start + count; i < ilen; ++i) {\n      item = data[i];\n      parsed.push({\n        x: xScale.parse(resolveObjectKey(item, xAxisKey), i),\n        y: yScale.parse(resolveObjectKey(item, yAxisKey), i),\n        _custom: item && item.r && +item.r\n      });\n    }\n    return parsed;\n  }\n  getMaxOverflow() {\n    const {data, _parsed} = this._cachedMeta;\n    let max = 0;\n    for (let i = data.length - 1; i >= 0; --i) {\n      max = Math.max(max, data[i].size() / 2, _parsed[i]._custom);\n    }\n    return max > 0 && max;\n  }\n  getLabelAndValue(index) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const {xScale, yScale} = meta;\n    const parsed = me.getParsed(index);\n    const x = xScale.getLabelForValue(parsed.x);\n    const y = yScale.getLabelForValue(parsed.y);\n    const r = parsed._custom;\n    return {\n      label: meta.label,\n      value: '(' + x + ', ' + y + (r ? ', ' + r : '') + ')'\n    };\n  }\n  update(mode) {\n    const me = this;\n    const points = me._cachedMeta.data;\n    me.updateElements(points, 0, points.length, mode);\n  }\n  updateElements(points, start, count, mode) {\n    const me = this;\n    const reset = mode === 'reset';\n    const {iScale, vScale} = me._cachedMeta;\n    const firstOpts = me.resolveDataElementOptions(start, mode);\n    const sharedOptions = me.getSharedOptions(firstOpts);\n    const includeOptions = me.includeOptions(mode, sharedOptions);\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    for (let i = start; i < start + count; i++) {\n      const point = points[i];\n      const parsed = !reset && me.getParsed(i);\n      const properties = {};\n      const iPixel = properties[iAxis] = reset ? iScale.getPixelForDecimal(0.5) : iScale.getPixelForValue(parsed[iAxis]);\n      const vPixel = properties[vAxis] = reset ? vScale.getBasePixel() : vScale.getPixelForValue(parsed[vAxis]);\n      properties.skip = isNaN(iPixel) || isNaN(vPixel);\n      if (includeOptions) {\n        properties.options = me.resolveDataElementOptions(i, mode);\n        if (reset) {\n          properties.options.radius = 0;\n        }\n      }\n      me.updateElement(point, i, properties, mode);\n    }\n    me.updateSharedOptions(sharedOptions, mode, firstOpts);\n  }\n  resolveDataElementOptions(index, mode) {\n    const parsed = this.getParsed(index);\n    let values = super.resolveDataElementOptions(index, mode);\n    if (values.$shared) {\n      values = Object.assign({}, values, {$shared: false});\n    }\n    const radius = values.radius;\n    if (mode !== 'active') {\n      values.radius = 0;\n    }\n    values.radius += valueOrDefault(parsed && parsed._custom, radius);\n    return values;\n  }\n}\nBubbleController.id = 'bubble';\nBubbleController.defaults = {\n  datasetElementType: false,\n  dataElementType: 'point',\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['x', 'y', 'borderWidth', 'radius']\n    }\n  }\n};\nBubbleController.overrides = {\n  scales: {\n    x: {\n      type: 'linear'\n    },\n    y: {\n      type: 'linear'\n    }\n  },\n  plugins: {\n    tooltip: {\n      callbacks: {\n        title() {\n          return '';\n        }\n      }\n    }\n  }\n};\n\nfunction getRatioAndOffset(rotation, circumference, cutout) {\n  let ratioX = 1;\n  let ratioY = 1;\n  let offsetX = 0;\n  let offsetY = 0;\n  if (circumference < TAU) {\n    const startAngle = rotation;\n    const endAngle = startAngle + circumference;\n    const startX = Math.cos(startAngle);\n    const startY = Math.sin(startAngle);\n    const endX = Math.cos(endAngle);\n    const endY = Math.sin(endAngle);\n    const calcMax = (angle, a, b) => _angleBetween(angle, startAngle, endAngle, true) ? 1 : Math.max(a, a * cutout, b, b * cutout);\n    const calcMin = (angle, a, b) => _angleBetween(angle, startAngle, endAngle, true) ? -1 : Math.min(a, a * cutout, b, b * cutout);\n    const maxX = calcMax(0, startX, endX);\n    const maxY = calcMax(HALF_PI, startY, endY);\n    const minX = calcMin(PI, startX, endX);\n    const minY = calcMin(PI + HALF_PI, startY, endY);\n    ratioX = (maxX - minX) / 2;\n    ratioY = (maxY - minY) / 2;\n    offsetX = -(maxX + minX) / 2;\n    offsetY = -(maxY + minY) / 2;\n  }\n  return {ratioX, ratioY, offsetX, offsetY};\n}\nclass DoughnutController extends DatasetController {\n  constructor(chart, datasetIndex) {\n    super(chart, datasetIndex);\n    this.enableOptionSharing = true;\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n    this.offsetX = undefined;\n    this.offsetY = undefined;\n  }\n  linkScales() {}\n  parse(start, count) {\n    const data = this.getDataset().data;\n    const meta = this._cachedMeta;\n    let i, ilen;\n    for (i = start, ilen = start + count; i < ilen; ++i) {\n      meta._parsed[i] = +data[i];\n    }\n  }\n  _getRotation() {\n    return toRadians(this.options.rotation - 90);\n  }\n  _getCircumference() {\n    return toRadians(this.options.circumference);\n  }\n  _getRotationExtents() {\n    let min = TAU;\n    let max = -TAU;\n    const me = this;\n    for (let i = 0; i < me.chart.data.datasets.length; ++i) {\n      if (me.chart.isDatasetVisible(i)) {\n        const controller = me.chart.getDatasetMeta(i).controller;\n        const rotation = controller._getRotation();\n        const circumference = controller._getCircumference();\n        min = Math.min(min, rotation);\n        max = Math.max(max, rotation + circumference);\n      }\n    }\n    return {\n      rotation: min,\n      circumference: max - min,\n    };\n  }\n  update(mode) {\n    const me = this;\n    const chart = me.chart;\n    const {chartArea} = chart;\n    const meta = me._cachedMeta;\n    const arcs = meta.data;\n    const spacing = me.getMaxBorderWidth() + me.getMaxOffset(arcs);\n    const maxSize = Math.max((Math.min(chartArea.width, chartArea.height) - spacing) / 2, 0);\n    const cutout = Math.min(toPercentage(me.options.cutout, maxSize), 1);\n    const chartWeight = me._getRingWeight(me.index);\n    const {circumference, rotation} = me._getRotationExtents();\n    const {ratioX, ratioY, offsetX, offsetY} = getRatioAndOffset(rotation, circumference, cutout);\n    const maxWidth = (chartArea.width - spacing) / ratioX;\n    const maxHeight = (chartArea.height - spacing) / ratioY;\n    const maxRadius = Math.max(Math.min(maxWidth, maxHeight) / 2, 0);\n    const outerRadius = toDimension(me.options.radius, maxRadius);\n    const innerRadius = Math.max(outerRadius * cutout, 0);\n    const radiusLength = (outerRadius - innerRadius) / me._getVisibleDatasetWeightTotal();\n    me.offsetX = offsetX * outerRadius;\n    me.offsetY = offsetY * outerRadius;\n    meta.total = me.calculateTotal();\n    me.outerRadius = outerRadius - radiusLength * me._getRingWeightOffset(me.index);\n    me.innerRadius = Math.max(me.outerRadius - radiusLength * chartWeight, 0);\n    me.updateElements(arcs, 0, arcs.length, mode);\n  }\n  _circumference(i, reset) {\n    const me = this;\n    const opts = me.options;\n    const meta = me._cachedMeta;\n    const circumference = me._getCircumference();\n    if ((reset && opts.animation.animateRotate) || !this.chart.getDataVisibility(i) || meta._parsed[i] === null) {\n      return 0;\n    }\n    return me.calculateCircumference(meta._parsed[i] * circumference / TAU);\n  }\n  updateElements(arcs, start, count, mode) {\n    const me = this;\n    const reset = mode === 'reset';\n    const chart = me.chart;\n    const chartArea = chart.chartArea;\n    const opts = chart.options;\n    const animationOpts = opts.animation;\n    const centerX = (chartArea.left + chartArea.right) / 2;\n    const centerY = (chartArea.top + chartArea.bottom) / 2;\n    const animateScale = reset && animationOpts.animateScale;\n    const innerRadius = animateScale ? 0 : me.innerRadius;\n    const outerRadius = animateScale ? 0 : me.outerRadius;\n    const firstOpts = me.resolveDataElementOptions(start, mode);\n    const sharedOptions = me.getSharedOptions(firstOpts);\n    const includeOptions = me.includeOptions(mode, sharedOptions);\n    let startAngle = me._getRotation();\n    let i;\n    for (i = 0; i < start; ++i) {\n      startAngle += me._circumference(i, reset);\n    }\n    for (i = start; i < start + count; ++i) {\n      const circumference = me._circumference(i, reset);\n      const arc = arcs[i];\n      const properties = {\n        x: centerX + me.offsetX,\n        y: centerY + me.offsetY,\n        startAngle,\n        endAngle: startAngle + circumference,\n        circumference,\n        outerRadius,\n        innerRadius\n      };\n      if (includeOptions) {\n        properties.options = sharedOptions || me.resolveDataElementOptions(i, mode);\n      }\n      startAngle += circumference;\n      me.updateElement(arc, i, properties, mode);\n    }\n    me.updateSharedOptions(sharedOptions, mode, firstOpts);\n  }\n  calculateTotal() {\n    const meta = this._cachedMeta;\n    const metaData = meta.data;\n    let total = 0;\n    let i;\n    for (i = 0; i < metaData.length; i++) {\n      const value = meta._parsed[i];\n      if (value !== null && !isNaN(value) && this.chart.getDataVisibility(i)) {\n        total += Math.abs(value);\n      }\n    }\n    return total;\n  }\n  calculateCircumference(value) {\n    const total = this._cachedMeta.total;\n    if (total > 0 && !isNaN(value)) {\n      return TAU * (Math.abs(value) / total);\n    }\n    return 0;\n  }\n  getLabelAndValue(index) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const chart = me.chart;\n    const labels = chart.data.labels || [];\n    const value = formatNumber(meta._parsed[index], chart.options.locale);\n    return {\n      label: labels[index] || '',\n      value,\n    };\n  }\n  getMaxBorderWidth(arcs) {\n    const me = this;\n    let max = 0;\n    const chart = me.chart;\n    let i, ilen, meta, controller, options;\n    if (!arcs) {\n      for (i = 0, ilen = chart.data.datasets.length; i < ilen; ++i) {\n        if (chart.isDatasetVisible(i)) {\n          meta = chart.getDatasetMeta(i);\n          arcs = meta.data;\n          controller = meta.controller;\n          if (controller !== me) {\n            controller.configure();\n          }\n          break;\n        }\n      }\n    }\n    if (!arcs) {\n      return 0;\n    }\n    for (i = 0, ilen = arcs.length; i < ilen; ++i) {\n      options = controller.resolveDataElementOptions(i);\n      if (options.borderAlign !== 'inner') {\n        max = Math.max(max, options.borderWidth || 0, options.hoverBorderWidth || 0);\n      }\n    }\n    return max;\n  }\n  getMaxOffset(arcs) {\n    let max = 0;\n    for (let i = 0, ilen = arcs.length; i < ilen; ++i) {\n      const options = this.resolveDataElementOptions(i);\n      max = Math.max(max, options.offset || 0, options.hoverOffset || 0);\n    }\n    return max;\n  }\n  _getRingWeightOffset(datasetIndex) {\n    let ringWeightOffset = 0;\n    for (let i = 0; i < datasetIndex; ++i) {\n      if (this.chart.isDatasetVisible(i)) {\n        ringWeightOffset += this._getRingWeight(i);\n      }\n    }\n    return ringWeightOffset;\n  }\n  _getRingWeight(datasetIndex) {\n    return Math.max(valueOrDefault(this.chart.data.datasets[datasetIndex].weight, 1), 0);\n  }\n  _getVisibleDatasetWeightTotal() {\n    return this._getRingWeightOffset(this.chart.data.datasets.length) || 1;\n  }\n}\nDoughnutController.id = 'doughnut';\nDoughnutController.defaults = {\n  datasetElementType: false,\n  dataElementType: 'arc',\n  animation: {\n    animateRotate: true,\n    animateScale: false\n  },\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['circumference', 'endAngle', 'innerRadius', 'outerRadius', 'startAngle', 'x', 'y', 'offset', 'borderWidth']\n    },\n  },\n  cutout: '50%',\n  rotation: 0,\n  circumference: 360,\n  radius: '100%',\n  indexAxis: 'r',\n};\nDoughnutController.overrides = {\n  aspectRatio: 1,\n  plugins: {\n    legend: {\n      labels: {\n        generateLabels(chart) {\n          const data = chart.data;\n          if (data.labels.length && data.datasets.length) {\n            return data.labels.map((label, i) => {\n              const meta = chart.getDatasetMeta(0);\n              const style = meta.controller.getStyle(i);\n              return {\n                text: label,\n                fillStyle: style.backgroundColor,\n                strokeStyle: style.borderColor,\n                lineWidth: style.borderWidth,\n                hidden: !chart.getDataVisibility(i),\n                index: i\n              };\n            });\n          }\n          return [];\n        }\n      },\n      onClick(e, legendItem, legend) {\n        legend.chart.toggleDataVisibility(legendItem.index);\n        legend.chart.update();\n      }\n    },\n    tooltip: {\n      callbacks: {\n        title() {\n          return '';\n        },\n        label(tooltipItem) {\n          let dataLabel = tooltipItem.label;\n          const value = ': ' + tooltipItem.formattedValue;\n          if (isArray(dataLabel)) {\n            dataLabel = dataLabel.slice();\n            dataLabel[0] += value;\n          } else {\n            dataLabel += value;\n          }\n          return dataLabel;\n        }\n      }\n    }\n  }\n};\n\nclass LineController extends DatasetController {\n  initialize() {\n    this.enableOptionSharing = true;\n    super.initialize();\n  }\n  update(mode) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const {dataset: line, data: points = [], _dataset} = meta;\n    const animationsDisabled = me.chart._animationsDisabled;\n    let {start, count} = getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n    me._drawStart = start;\n    me._drawCount = count;\n    if (scaleRangesChanged(meta)) {\n      start = 0;\n      count = points.length;\n    }\n    line._decimated = !!_dataset._decimated;\n    line.points = points;\n    const options = me.resolveDatasetElementOptions(mode);\n    if (!me.options.showLine) {\n      options.borderWidth = 0;\n    }\n    options.segment = me.options.segment;\n    me.updateElement(line, undefined, {\n      animated: !animationsDisabled,\n      options\n    }, mode);\n    me.updateElements(points, start, count, mode);\n  }\n  updateElements(points, start, count, mode) {\n    const me = this;\n    const reset = mode === 'reset';\n    const {iScale, vScale, _stacked} = me._cachedMeta;\n    const firstOpts = me.resolveDataElementOptions(start, mode);\n    const sharedOptions = me.getSharedOptions(firstOpts);\n    const includeOptions = me.includeOptions(mode, sharedOptions);\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const spanGaps = me.options.spanGaps;\n    const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n    const directUpdate = me.chart._animationsDisabled || reset || mode === 'none';\n    let prevParsed = start > 0 && me.getParsed(start - 1);\n    for (let i = start; i < start + count; ++i) {\n      const point = points[i];\n      const parsed = me.getParsed(i);\n      const properties = directUpdate ? point : {};\n      const nullData = isNullOrUndef(parsed[vAxis]);\n      const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n      const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? me.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n      properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n      properties.stop = i > 0 && (parsed[iAxis] - prevParsed[iAxis]) > maxGapLength;\n      properties.parsed = parsed;\n      if (includeOptions) {\n        properties.options = sharedOptions || me.resolveDataElementOptions(i, mode);\n      }\n      if (!directUpdate) {\n        me.updateElement(point, i, properties, mode);\n      }\n      prevParsed = parsed;\n    }\n    me.updateSharedOptions(sharedOptions, mode, firstOpts);\n  }\n  getMaxOverflow() {\n    const me = this;\n    const meta = me._cachedMeta;\n    const dataset = meta.dataset;\n    const border = dataset.options && dataset.options.borderWidth || 0;\n    const data = meta.data || [];\n    if (!data.length) {\n      return border;\n    }\n    const firstPoint = data[0].size(me.resolveDataElementOptions(0));\n    const lastPoint = data[data.length - 1].size(me.resolveDataElementOptions(data.length - 1));\n    return Math.max(border, firstPoint, lastPoint) / 2;\n  }\n  draw() {\n    const meta = this._cachedMeta;\n    meta.dataset.updateControlPoints(this.chart.chartArea, meta.iScale.axis);\n    super.draw();\n  }\n}\nLineController.id = 'line';\nLineController.defaults = {\n  datasetElementType: 'line',\n  dataElementType: 'point',\n  showLine: true,\n  spanGaps: false,\n};\nLineController.overrides = {\n  scales: {\n    _index_: {\n      type: 'category',\n    },\n    _value_: {\n      type: 'linear',\n    },\n  }\n};\nfunction getStartAndCountOfVisiblePoints(meta, points, animationsDisabled) {\n  const pointCount = points.length;\n  let start = 0;\n  let count = pointCount;\n  if (meta._sorted) {\n    const {iScale, _parsed} = meta;\n    const axis = iScale.axis;\n    const {min, max, minDefined, maxDefined} = iScale.getUserBounds();\n    if (minDefined) {\n      start = _limitValue(Math.min(\n        _lookupByKey(_parsed, iScale.axis, min).lo,\n        animationsDisabled ? pointCount : _lookupByKey(points, axis, iScale.getPixelForValue(min)).lo),\n      0, pointCount - 1);\n    }\n    if (maxDefined) {\n      count = _limitValue(Math.max(\n        _lookupByKey(_parsed, iScale.axis, max).hi + 1,\n        animationsDisabled ? 0 : _lookupByKey(points, axis, iScale.getPixelForValue(max)).hi + 1),\n      start, pointCount) - start;\n    } else {\n      count = pointCount - start;\n    }\n  }\n  return {start, count};\n}\nfunction scaleRangesChanged(meta) {\n  const {xScale, yScale, _scaleRanges} = meta;\n  const newRanges = {\n    xmin: xScale.min,\n    xmax: xScale.max,\n    ymin: yScale.min,\n    ymax: yScale.max\n  };\n  if (!_scaleRanges) {\n    meta._scaleRanges = newRanges;\n    return true;\n  }\n  const changed = _scaleRanges.xmin !== xScale.min\n\t\t|| _scaleRanges.xmax !== xScale.max\n\t\t|| _scaleRanges.ymin !== yScale.min\n\t\t|| _scaleRanges.ymax !== yScale.max;\n  Object.assign(_scaleRanges, newRanges);\n  return changed;\n}\n\nclass PolarAreaController extends DatasetController {\n  constructor(chart, datasetIndex) {\n    super(chart, datasetIndex);\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n  }\n  getLabelAndValue(index) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const chart = me.chart;\n    const labels = chart.data.labels || [];\n    const value = formatNumber(meta._parsed[index].r, chart.options.locale);\n    return {\n      label: labels[index] || '',\n      value,\n    };\n  }\n  update(mode) {\n    const arcs = this._cachedMeta.data;\n    this._updateRadius();\n    this.updateElements(arcs, 0, arcs.length, mode);\n  }\n  _updateRadius() {\n    const me = this;\n    const chart = me.chart;\n    const chartArea = chart.chartArea;\n    const opts = chart.options;\n    const minSize = Math.min(chartArea.right - chartArea.left, chartArea.bottom - chartArea.top);\n    const outerRadius = Math.max(minSize / 2, 0);\n    const innerRadius = Math.max(opts.cutoutPercentage ? (outerRadius / 100) * (opts.cutoutPercentage) : 1, 0);\n    const radiusLength = (outerRadius - innerRadius) / chart.getVisibleDatasetCount();\n    me.outerRadius = outerRadius - (radiusLength * me.index);\n    me.innerRadius = me.outerRadius - radiusLength;\n  }\n  updateElements(arcs, start, count, mode) {\n    const me = this;\n    const reset = mode === 'reset';\n    const chart = me.chart;\n    const dataset = me.getDataset();\n    const opts = chart.options;\n    const animationOpts = opts.animation;\n    const scale = me._cachedMeta.rScale;\n    const centerX = scale.xCenter;\n    const centerY = scale.yCenter;\n    const datasetStartAngle = scale.getIndexAngle(0) - 0.5 * PI;\n    let angle = datasetStartAngle;\n    let i;\n    const defaultAngle = 360 / me.countVisibleElements();\n    for (i = 0; i < start; ++i) {\n      angle += me._computeAngle(i, mode, defaultAngle);\n    }\n    for (i = start; i < start + count; i++) {\n      const arc = arcs[i];\n      let startAngle = angle;\n      let endAngle = angle + me._computeAngle(i, mode, defaultAngle);\n      let outerRadius = chart.getDataVisibility(i) ? scale.getDistanceFromCenterForValue(dataset.data[i]) : 0;\n      angle = endAngle;\n      if (reset) {\n        if (animationOpts.animateScale) {\n          outerRadius = 0;\n        }\n        if (animationOpts.animateRotate) {\n          startAngle = endAngle = datasetStartAngle;\n        }\n      }\n      const properties = {\n        x: centerX,\n        y: centerY,\n        innerRadius: 0,\n        outerRadius,\n        startAngle,\n        endAngle,\n        options: me.resolveDataElementOptions(i, mode)\n      };\n      me.updateElement(arc, i, properties, mode);\n    }\n  }\n  countVisibleElements() {\n    const dataset = this.getDataset();\n    const meta = this._cachedMeta;\n    let count = 0;\n    meta.data.forEach((element, index) => {\n      if (!isNaN(dataset.data[index]) && this.chart.getDataVisibility(index)) {\n        count++;\n      }\n    });\n    return count;\n  }\n  _computeAngle(index, mode, defaultAngle) {\n    return this.chart.getDataVisibility(index)\n      ? toRadians(this.resolveDataElementOptions(index, mode).angle || defaultAngle)\n      : 0;\n  }\n}\nPolarAreaController.id = 'polarArea';\nPolarAreaController.defaults = {\n  dataElementType: 'arc',\n  animation: {\n    animateRotate: true,\n    animateScale: true\n  },\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['x', 'y', 'startAngle', 'endAngle', 'innerRadius', 'outerRadius']\n    },\n  },\n  indexAxis: 'r',\n  startAngle: 0,\n};\nPolarAreaController.overrides = {\n  aspectRatio: 1,\n  plugins: {\n    legend: {\n      labels: {\n        generateLabels(chart) {\n          const data = chart.data;\n          if (data.labels.length && data.datasets.length) {\n            return data.labels.map((label, i) => {\n              const meta = chart.getDatasetMeta(0);\n              const style = meta.controller.getStyle(i);\n              return {\n                text: label,\n                fillStyle: style.backgroundColor,\n                strokeStyle: style.borderColor,\n                lineWidth: style.borderWidth,\n                hidden: !chart.getDataVisibility(i),\n                index: i\n              };\n            });\n          }\n          return [];\n        }\n      },\n      onClick(e, legendItem, legend) {\n        legend.chart.toggleDataVisibility(legendItem.index);\n        legend.chart.update();\n      }\n    },\n    tooltip: {\n      callbacks: {\n        title() {\n          return '';\n        },\n        label(context) {\n          return context.chart.data.labels[context.dataIndex] + ': ' + context.formattedValue;\n        }\n      }\n    }\n  },\n  scales: {\n    r: {\n      type: 'radialLinear',\n      angleLines: {\n        display: false\n      },\n      beginAtZero: true,\n      grid: {\n        circular: true\n      },\n      pointLabels: {\n        display: false\n      },\n      startAngle: 0\n    }\n  }\n};\n\nclass PieController extends DoughnutController {\n}\nPieController.id = 'pie';\nPieController.defaults = {\n  cutout: 0,\n  rotation: 0,\n  circumference: 360,\n  radius: '100%'\n};\n\nclass RadarController extends DatasetController {\n  getLabelAndValue(index) {\n    const me = this;\n    const vScale = me._cachedMeta.vScale;\n    const parsed = me.getParsed(index);\n    return {\n      label: vScale.getLabels()[index],\n      value: '' + vScale.getLabelForValue(parsed[vScale.axis])\n    };\n  }\n  update(mode) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const line = meta.dataset;\n    const points = meta.data || [];\n    const labels = meta.iScale.getLabels();\n    line.points = points;\n    if (mode !== 'resize') {\n      const options = me.resolveDatasetElementOptions(mode);\n      if (!me.options.showLine) {\n        options.borderWidth = 0;\n      }\n      const properties = {\n        _loop: true,\n        _fullLoop: labels.length === points.length,\n        options\n      };\n      me.updateElement(line, undefined, properties, mode);\n    }\n    me.updateElements(points, 0, points.length, mode);\n  }\n  updateElements(points, start, count, mode) {\n    const me = this;\n    const dataset = me.getDataset();\n    const scale = me._cachedMeta.rScale;\n    const reset = mode === 'reset';\n    for (let i = start; i < start + count; i++) {\n      const point = points[i];\n      const options = me.resolveDataElementOptions(i, mode);\n      const pointPosition = scale.getPointPositionForValue(i, dataset.data[i]);\n      const x = reset ? scale.xCenter : pointPosition.x;\n      const y = reset ? scale.yCenter : pointPosition.y;\n      const properties = {\n        x,\n        y,\n        angle: pointPosition.angle,\n        skip: isNaN(x) || isNaN(y),\n        options\n      };\n      me.updateElement(point, i, properties, mode);\n    }\n  }\n}\nRadarController.id = 'radar';\nRadarController.defaults = {\n  datasetElementType: 'line',\n  dataElementType: 'point',\n  indexAxis: 'r',\n  showLine: true,\n  elements: {\n    line: {\n      fill: 'start'\n    }\n  },\n};\nRadarController.overrides = {\n  aspectRatio: 1,\n  scales: {\n    r: {\n      type: 'radialLinear',\n    }\n  }\n};\n\nclass ScatterController extends LineController {\n}\nScatterController.id = 'scatter';\nScatterController.defaults = {\n  showLine: false,\n  fill: false\n};\nScatterController.overrides = {\n  interaction: {\n    mode: 'point'\n  },\n  plugins: {\n    tooltip: {\n      callbacks: {\n        title() {\n          return '';\n        },\n        label(item) {\n          return '(' + item.label + ', ' + item.formattedValue + ')';\n        }\n      }\n    }\n  },\n  scales: {\n    x: {\n      type: 'linear'\n    },\n    y: {\n      type: 'linear'\n    }\n  }\n};\n\nvar controllers = /*#__PURE__*/Object.freeze({\n__proto__: null,\nBarController: BarController,\nBubbleController: BubbleController,\nDoughnutController: DoughnutController,\nLineController: LineController,\nPolarAreaController: PolarAreaController,\nPieController: PieController,\nRadarController: RadarController,\nScatterController: ScatterController\n});\n\nfunction clipArc(ctx, element, endAngle) {\n  const {startAngle, pixelMargin, x, y, outerRadius, innerRadius} = element;\n  let angleMargin = pixelMargin / outerRadius;\n  ctx.beginPath();\n  ctx.arc(x, y, outerRadius, startAngle - angleMargin, endAngle + angleMargin);\n  if (innerRadius > pixelMargin) {\n    angleMargin = pixelMargin / innerRadius;\n    ctx.arc(x, y, innerRadius, endAngle + angleMargin, startAngle - angleMargin, true);\n  } else {\n    ctx.arc(x, y, pixelMargin, endAngle + HALF_PI, startAngle - HALF_PI);\n  }\n  ctx.closePath();\n  ctx.clip();\n}\nfunction toRadiusCorners(value) {\n  return _readValueToProps(value, ['outerStart', 'outerEnd', 'innerStart', 'innerEnd']);\n}\nfunction parseBorderRadius$1(arc, innerRadius, outerRadius, angleDelta) {\n  const o = toRadiusCorners(arc.options.borderRadius);\n  const halfThickness = (outerRadius - innerRadius) / 2;\n  const innerLimit = Math.min(halfThickness, angleDelta * innerRadius / 2);\n  const computeOuterLimit = (val) => {\n    const outerArcLimit = (outerRadius - Math.min(halfThickness, val)) * angleDelta / 2;\n    return _limitValue(val, 0, Math.min(halfThickness, outerArcLimit));\n  };\n  return {\n    outerStart: computeOuterLimit(o.outerStart),\n    outerEnd: computeOuterLimit(o.outerEnd),\n    innerStart: _limitValue(o.innerStart, 0, innerLimit),\n    innerEnd: _limitValue(o.innerEnd, 0, innerLimit),\n  };\n}\nfunction rThetaToXY(r, theta, x, y) {\n  return {\n    x: x + r * Math.cos(theta),\n    y: y + r * Math.sin(theta),\n  };\n}\nfunction pathArc(ctx, element, offset, end) {\n  const {x, y, startAngle: start, pixelMargin, innerRadius: innerR} = element;\n  const outerRadius = Math.max(element.outerRadius + offset - pixelMargin, 0);\n  const innerRadius = innerR > 0 ? innerR + offset + pixelMargin : 0;\n  const alpha = end - start;\n  const beta = Math.max(0.001, alpha * outerRadius - offset / PI) / outerRadius;\n  const angleOffset = (alpha - beta) / 2;\n  const startAngle = start + angleOffset;\n  const endAngle = end - angleOffset;\n  const {outerStart, outerEnd, innerStart, innerEnd} = parseBorderRadius$1(element, innerRadius, outerRadius, endAngle - startAngle);\n  const outerStartAdjustedRadius = outerRadius - outerStart;\n  const outerEndAdjustedRadius = outerRadius - outerEnd;\n  const outerStartAdjustedAngle = startAngle + outerStart / outerStartAdjustedRadius;\n  const outerEndAdjustedAngle = endAngle - outerEnd / outerEndAdjustedRadius;\n  const innerStartAdjustedRadius = innerRadius + innerStart;\n  const innerEndAdjustedRadius = innerRadius + innerEnd;\n  const innerStartAdjustedAngle = startAngle + innerStart / innerStartAdjustedRadius;\n  const innerEndAdjustedAngle = endAngle - innerEnd / innerEndAdjustedRadius;\n  ctx.beginPath();\n  ctx.arc(x, y, outerRadius, outerStartAdjustedAngle, outerEndAdjustedAngle);\n  if (outerEnd > 0) {\n    const pCenter = rThetaToXY(outerEndAdjustedRadius, outerEndAdjustedAngle, x, y);\n    ctx.arc(pCenter.x, pCenter.y, outerEnd, outerEndAdjustedAngle, endAngle + HALF_PI);\n  }\n  const p4 = rThetaToXY(innerEndAdjustedRadius, endAngle, x, y);\n  ctx.lineTo(p4.x, p4.y);\n  if (innerEnd > 0) {\n    const pCenter = rThetaToXY(innerEndAdjustedRadius, innerEndAdjustedAngle, x, y);\n    ctx.arc(pCenter.x, pCenter.y, innerEnd, endAngle + HALF_PI, innerEndAdjustedAngle + Math.PI);\n  }\n  ctx.arc(x, y, innerRadius, endAngle - (innerEnd / innerRadius), startAngle + (innerStart / innerRadius), true);\n  if (innerStart > 0) {\n    const pCenter = rThetaToXY(innerStartAdjustedRadius, innerStartAdjustedAngle, x, y);\n    ctx.arc(pCenter.x, pCenter.y, innerStart, innerStartAdjustedAngle + Math.PI, startAngle - HALF_PI);\n  }\n  const p8 = rThetaToXY(outerStartAdjustedRadius, startAngle, x, y);\n  ctx.lineTo(p8.x, p8.y);\n  if (outerStart > 0) {\n    const pCenter = rThetaToXY(outerStartAdjustedRadius, outerStartAdjustedAngle, x, y);\n    ctx.arc(pCenter.x, pCenter.y, outerStart, startAngle - HALF_PI, outerStartAdjustedAngle);\n  }\n  ctx.closePath();\n}\nfunction drawArc(ctx, element, offset) {\n  const {fullCircles, startAngle, circumference} = element;\n  let endAngle = element.endAngle;\n  if (fullCircles) {\n    pathArc(ctx, element, offset, startAngle + TAU);\n    for (let i = 0; i < fullCircles; ++i) {\n      ctx.fill();\n    }\n    if (!isNaN(circumference)) {\n      endAngle = startAngle + circumference % TAU;\n      if (circumference % TAU === 0) {\n        endAngle += TAU;\n      }\n    }\n  }\n  pathArc(ctx, element, offset, endAngle);\n  ctx.fill();\n  return endAngle;\n}\nfunction drawFullCircleBorders(ctx, element, inner) {\n  const {x, y, startAngle, pixelMargin, fullCircles} = element;\n  const outerRadius = Math.max(element.outerRadius - pixelMargin, 0);\n  const innerRadius = element.innerRadius + pixelMargin;\n  let i;\n  if (inner) {\n    clipArc(ctx, element, startAngle + TAU);\n  }\n  ctx.beginPath();\n  ctx.arc(x, y, innerRadius, startAngle + TAU, startAngle, true);\n  for (i = 0; i < fullCircles; ++i) {\n    ctx.stroke();\n  }\n  ctx.beginPath();\n  ctx.arc(x, y, outerRadius, startAngle, startAngle + TAU);\n  for (i = 0; i < fullCircles; ++i) {\n    ctx.stroke();\n  }\n}\nfunction drawBorder(ctx, element, offset, endAngle) {\n  const {options} = element;\n  const inner = options.borderAlign === 'inner';\n  if (!options.borderWidth) {\n    return;\n  }\n  if (inner) {\n    ctx.lineWidth = options.borderWidth * 2;\n    ctx.lineJoin = 'round';\n  } else {\n    ctx.lineWidth = options.borderWidth;\n    ctx.lineJoin = 'bevel';\n  }\n  if (element.fullCircles) {\n    drawFullCircleBorders(ctx, element, inner);\n  }\n  if (inner) {\n    clipArc(ctx, element, endAngle);\n  }\n  pathArc(ctx, element, offset, endAngle);\n  ctx.stroke();\n}\nclass ArcElement extends Element {\n  constructor(cfg) {\n    super();\n    this.options = undefined;\n    this.circumference = undefined;\n    this.startAngle = undefined;\n    this.endAngle = undefined;\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n    this.pixelMargin = 0;\n    this.fullCircles = 0;\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n  inRange(chartX, chartY, useFinalPosition) {\n    const point = this.getProps(['x', 'y'], useFinalPosition);\n    const {angle, distance} = getAngleFromPoint(point, {x: chartX, y: chartY});\n    const {startAngle, endAngle, innerRadius, outerRadius, circumference} = this.getProps([\n      'startAngle',\n      'endAngle',\n      'innerRadius',\n      'outerRadius',\n      'circumference'\n    ], useFinalPosition);\n    const betweenAngles = circumference >= TAU || _angleBetween(angle, startAngle, endAngle);\n    const withinRadius = (distance >= innerRadius && distance <= outerRadius);\n    return (betweenAngles && withinRadius);\n  }\n  getCenterPoint(useFinalPosition) {\n    const {x, y, startAngle, endAngle, innerRadius, outerRadius} = this.getProps([\n      'x',\n      'y',\n      'startAngle',\n      'endAngle',\n      'innerRadius',\n      'outerRadius',\n      'circumference'\n    ], useFinalPosition);\n    const halfAngle = (startAngle + endAngle) / 2;\n    const halfRadius = (innerRadius + outerRadius) / 2;\n    return {\n      x: x + Math.cos(halfAngle) * halfRadius,\n      y: y + Math.sin(halfAngle) * halfRadius\n    };\n  }\n  tooltipPosition(useFinalPosition) {\n    return this.getCenterPoint(useFinalPosition);\n  }\n  draw(ctx) {\n    const me = this;\n    const {options, circumference} = me;\n    const offset = (options.offset || 0) / 2;\n    me.pixelMargin = (options.borderAlign === 'inner') ? 0.33 : 0;\n    me.fullCircles = circumference > TAU ? Math.floor(circumference / TAU) : 0;\n    if (circumference === 0 || me.innerRadius < 0 || me.outerRadius < 0) {\n      return;\n    }\n    ctx.save();\n    let radiusOffset = 0;\n    if (offset) {\n      radiusOffset = offset / 2;\n      const halfAngle = (me.startAngle + me.endAngle) / 2;\n      ctx.translate(Math.cos(halfAngle) * radiusOffset, Math.sin(halfAngle) * radiusOffset);\n      if (me.circumference >= PI) {\n        radiusOffset = offset;\n      }\n    }\n    ctx.fillStyle = options.backgroundColor;\n    ctx.strokeStyle = options.borderColor;\n    const endAngle = drawArc(ctx, me, radiusOffset);\n    drawBorder(ctx, me, radiusOffset, endAngle);\n    ctx.restore();\n  }\n}\nArcElement.id = 'arc';\nArcElement.defaults = {\n  borderAlign: 'center',\n  borderColor: '#fff',\n  borderRadius: 0,\n  borderWidth: 2,\n  offset: 0,\n  angle: undefined,\n};\nArcElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor'\n};\n\nfunction setStyle(ctx, options, style = options) {\n  ctx.lineCap = valueOrDefault(style.borderCapStyle, options.borderCapStyle);\n  ctx.setLineDash(valueOrDefault(style.borderDash, options.borderDash));\n  ctx.lineDashOffset = valueOrDefault(style.borderDashOffset, options.borderDashOffset);\n  ctx.lineJoin = valueOrDefault(style.borderJoinStyle, options.borderJoinStyle);\n  ctx.lineWidth = valueOrDefault(style.borderWidth, options.borderWidth);\n  ctx.strokeStyle = valueOrDefault(style.borderColor, options.borderColor);\n}\nfunction lineTo(ctx, previous, target) {\n  ctx.lineTo(target.x, target.y);\n}\nfunction getLineMethod(options) {\n  if (options.stepped) {\n    return _steppedLineTo;\n  }\n  if (options.tension || options.cubicInterpolationMode === 'monotone') {\n    return _bezierCurveTo;\n  }\n  return lineTo;\n}\nfunction pathVars(points, segment, params = {}) {\n  const count = points.length;\n  const {start: paramsStart = 0, end: paramsEnd = count - 1} = params;\n  const {start: segmentStart, end: segmentEnd} = segment;\n  const start = Math.max(paramsStart, segmentStart);\n  const end = Math.min(paramsEnd, segmentEnd);\n  const outside = paramsStart < segmentStart && paramsEnd < segmentStart || paramsStart > segmentEnd && paramsEnd > segmentEnd;\n  return {\n    count,\n    start,\n    loop: segment.loop,\n    ilen: end < start && !outside ? count + end - start : end - start\n  };\n}\nfunction pathSegment(ctx, line, segment, params) {\n  const {points, options} = line;\n  const {count, start, loop, ilen} = pathVars(points, segment, params);\n  const lineMethod = getLineMethod(options);\n  let {move = true, reverse} = params || {};\n  let i, point, prev;\n  for (i = 0; i <= ilen; ++i) {\n    point = points[(start + (reverse ? ilen - i : i)) % count];\n    if (point.skip) {\n      continue;\n    } else if (move) {\n      ctx.moveTo(point.x, point.y);\n      move = false;\n    } else {\n      lineMethod(ctx, prev, point, reverse, options.stepped);\n    }\n    prev = point;\n  }\n  if (loop) {\n    point = points[(start + (reverse ? ilen : 0)) % count];\n    lineMethod(ctx, prev, point, reverse, options.stepped);\n  }\n  return !!loop;\n}\nfunction fastPathSegment(ctx, line, segment, params) {\n  const points = line.points;\n  const {count, start, ilen} = pathVars(points, segment, params);\n  const {move = true, reverse} = params || {};\n  let avgX = 0;\n  let countX = 0;\n  let i, point, prevX, minY, maxY, lastY;\n  const pointIndex = (index) => (start + (reverse ? ilen - index : index)) % count;\n  const drawX = () => {\n    if (minY !== maxY) {\n      ctx.lineTo(avgX, maxY);\n      ctx.lineTo(avgX, minY);\n      ctx.lineTo(avgX, lastY);\n    }\n  };\n  if (move) {\n    point = points[pointIndex(0)];\n    ctx.moveTo(point.x, point.y);\n  }\n  for (i = 0; i <= ilen; ++i) {\n    point = points[pointIndex(i)];\n    if (point.skip) {\n      continue;\n    }\n    const x = point.x;\n    const y = point.y;\n    const truncX = x | 0;\n    if (truncX === prevX) {\n      if (y < minY) {\n        minY = y;\n      } else if (y > maxY) {\n        maxY = y;\n      }\n      avgX = (countX * avgX + x) / ++countX;\n    } else {\n      drawX();\n      ctx.lineTo(x, y);\n      prevX = truncX;\n      countX = 0;\n      minY = maxY = y;\n    }\n    lastY = y;\n  }\n  drawX();\n}\nfunction _getSegmentMethod(line) {\n  const opts = line.options;\n  const borderDash = opts.borderDash && opts.borderDash.length;\n  const useFastPath = !line._decimated && !line._loop && !opts.tension && opts.cubicInterpolationMode !== 'monotone' && !opts.stepped && !borderDash;\n  return useFastPath ? fastPathSegment : pathSegment;\n}\nfunction _getInterpolationMethod(options) {\n  if (options.stepped) {\n    return _steppedInterpolation;\n  }\n  if (options.tension || options.cubicInterpolationMode === 'monotone') {\n    return _bezierInterpolation;\n  }\n  return _pointInLine;\n}\nfunction strokePathWithCache(ctx, line, start, count) {\n  let path = line._path;\n  if (!path) {\n    path = line._path = new Path2D();\n    if (line.path(path, start, count)) {\n      path.closePath();\n    }\n  }\n  setStyle(ctx, line.options);\n  ctx.stroke(path);\n}\nfunction strokePathDirect(ctx, line, start, count) {\n  const {segments, options} = line;\n  const segmentMethod = _getSegmentMethod(line);\n  for (const segment of segments) {\n    setStyle(ctx, options, segment.style);\n    ctx.beginPath();\n    if (segmentMethod(ctx, line, segment, {start, end: start + count - 1})) {\n      ctx.closePath();\n    }\n    ctx.stroke();\n  }\n}\nconst usePath2D = typeof Path2D === 'function';\nfunction draw(ctx, line, start, count) {\n  if (usePath2D && line.segments.length === 1) {\n    strokePathWithCache(ctx, line, start, count);\n  } else {\n    strokePathDirect(ctx, line, start, count);\n  }\n}\nclass LineElement extends Element {\n  constructor(cfg) {\n    super();\n    this.animated = true;\n    this.options = undefined;\n    this._loop = undefined;\n    this._fullLoop = undefined;\n    this._path = undefined;\n    this._points = undefined;\n    this._segments = undefined;\n    this._decimated = false;\n    this._pointsUpdated = false;\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n  updateControlPoints(chartArea, indexAxis) {\n    const me = this;\n    const options = me.options;\n    if ((options.tension || options.cubicInterpolationMode === 'monotone') && !options.stepped && !me._pointsUpdated) {\n      const loop = options.spanGaps ? me._loop : me._fullLoop;\n      _updateBezierControlPoints(me._points, options, chartArea, loop, indexAxis);\n      me._pointsUpdated = true;\n    }\n  }\n  set points(points) {\n    const me = this;\n    me._points = points;\n    delete me._segments;\n    delete me._path;\n    me._pointsUpdated = false;\n  }\n  get points() {\n    return this._points;\n  }\n  get segments() {\n    return this._segments || (this._segments = _computeSegments(this, this.options.segment));\n  }\n  first() {\n    const segments = this.segments;\n    const points = this.points;\n    return segments.length && points[segments[0].start];\n  }\n  last() {\n    const segments = this.segments;\n    const points = this.points;\n    const count = segments.length;\n    return count && points[segments[count - 1].end];\n  }\n  interpolate(point, property) {\n    const me = this;\n    const options = me.options;\n    const value = point[property];\n    const points = me.points;\n    const segments = _boundSegments(me, {property, start: value, end: value});\n    if (!segments.length) {\n      return;\n    }\n    const result = [];\n    const _interpolate = _getInterpolationMethod(options);\n    let i, ilen;\n    for (i = 0, ilen = segments.length; i < ilen; ++i) {\n      const {start, end} = segments[i];\n      const p1 = points[start];\n      const p2 = points[end];\n      if (p1 === p2) {\n        result.push(p1);\n        continue;\n      }\n      const t = Math.abs((value - p1[property]) / (p2[property] - p1[property]));\n      const interpolated = _interpolate(p1, p2, t, options.stepped);\n      interpolated[property] = point[property];\n      result.push(interpolated);\n    }\n    return result.length === 1 ? result[0] : result;\n  }\n  pathSegment(ctx, segment, params) {\n    const segmentMethod = _getSegmentMethod(this);\n    return segmentMethod(ctx, this, segment, params);\n  }\n  path(ctx, start, count) {\n    const me = this;\n    const segments = me.segments;\n    const segmentMethod = _getSegmentMethod(me);\n    let loop = me._loop;\n    start = start || 0;\n    count = count || (me.points.length - start);\n    for (const segment of segments) {\n      loop &= segmentMethod(ctx, me, segment, {start, end: start + count - 1});\n    }\n    return !!loop;\n  }\n  draw(ctx, chartArea, start, count) {\n    const me = this;\n    const options = me.options || {};\n    const points = me.points || [];\n    if (!points.length || !options.borderWidth) {\n      return;\n    }\n    ctx.save();\n    draw(ctx, me, start, count);\n    ctx.restore();\n    if (me.animated) {\n      me._pointsUpdated = false;\n      me._path = undefined;\n    }\n  }\n}\nLineElement.id = 'line';\nLineElement.defaults = {\n  borderCapStyle: 'butt',\n  borderDash: [],\n  borderDashOffset: 0,\n  borderJoinStyle: 'miter',\n  borderWidth: 3,\n  capBezierPoints: true,\n  cubicInterpolationMode: 'default',\n  fill: false,\n  spanGaps: false,\n  stepped: false,\n  tension: 0,\n};\nLineElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor',\n  borderColor: 'borderColor'\n};\nLineElement.descriptors = {\n  _scriptable: true,\n  _indexable: (name) => name !== 'borderDash' && name !== 'fill',\n};\n\nfunction inRange$1(el, pos, axis, useFinalPosition) {\n  const options = el.options;\n  const {[axis]: value} = el.getProps([axis], useFinalPosition);\n  return (Math.abs(pos - value) < options.radius + options.hitRadius);\n}\nclass PointElement extends Element {\n  constructor(cfg) {\n    super();\n    this.options = undefined;\n    this.parsed = undefined;\n    this.skip = undefined;\n    this.stop = undefined;\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n  inRange(mouseX, mouseY, useFinalPosition) {\n    const options = this.options;\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return ((Math.pow(mouseX - x, 2) + Math.pow(mouseY - y, 2)) < Math.pow(options.hitRadius + options.radius, 2));\n  }\n  inXRange(mouseX, useFinalPosition) {\n    return inRange$1(this, mouseX, 'x', useFinalPosition);\n  }\n  inYRange(mouseY, useFinalPosition) {\n    return inRange$1(this, mouseY, 'y', useFinalPosition);\n  }\n  getCenterPoint(useFinalPosition) {\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return {x, y};\n  }\n  size(options) {\n    options = options || this.options || {};\n    let radius = options.radius || 0;\n    radius = Math.max(radius, radius && options.hoverRadius || 0);\n    const borderWidth = radius && options.borderWidth || 0;\n    return (radius + borderWidth) * 2;\n  }\n  draw(ctx) {\n    const me = this;\n    const options = me.options;\n    if (me.skip || options.radius < 0.1) {\n      return;\n    }\n    ctx.strokeStyle = options.borderColor;\n    ctx.lineWidth = options.borderWidth;\n    ctx.fillStyle = options.backgroundColor;\n    drawPoint(ctx, options, me.x, me.y);\n  }\n  getRange() {\n    const options = this.options || {};\n    return options.radius + options.hitRadius;\n  }\n}\nPointElement.id = 'point';\nPointElement.defaults = {\n  borderWidth: 1,\n  hitRadius: 1,\n  hoverBorderWidth: 1,\n  hoverRadius: 4,\n  pointStyle: 'circle',\n  radius: 3,\n  rotation: 0\n};\nPointElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor',\n  borderColor: 'borderColor'\n};\n\nfunction getBarBounds(bar, useFinalPosition) {\n  const {x, y, base, width, height} = bar.getProps(['x', 'y', 'base', 'width', 'height'], useFinalPosition);\n  let left, right, top, bottom, half;\n  if (bar.horizontal) {\n    half = height / 2;\n    left = Math.min(x, base);\n    right = Math.max(x, base);\n    top = y - half;\n    bottom = y + half;\n  } else {\n    half = width / 2;\n    left = x - half;\n    right = x + half;\n    top = Math.min(y, base);\n    bottom = Math.max(y, base);\n  }\n  return {left, top, right, bottom};\n}\nfunction parseBorderSkipped(bar) {\n  let edge = bar.options.borderSkipped;\n  const res = {};\n  if (!edge) {\n    return res;\n  }\n  edge = bar.horizontal\n    ? parseEdge(edge, 'left', 'right', bar.base > bar.x)\n    : parseEdge(edge, 'bottom', 'top', bar.base < bar.y);\n  res[edge] = true;\n  return res;\n}\nfunction parseEdge(edge, a, b, reverse) {\n  if (reverse) {\n    edge = swap(edge, a, b);\n    edge = startEnd(edge, b, a);\n  } else {\n    edge = startEnd(edge, a, b);\n  }\n  return edge;\n}\nfunction swap(orig, v1, v2) {\n  return orig === v1 ? v2 : orig === v2 ? v1 : orig;\n}\nfunction startEnd(v, start, end) {\n  return v === 'start' ? start : v === 'end' ? end : v;\n}\nfunction skipOrLimit(skip, value, min, max) {\n  return skip ? 0 : Math.max(Math.min(value, max), min);\n}\nfunction parseBorderWidth(bar, maxW, maxH) {\n  const value = bar.options.borderWidth;\n  const skip = parseBorderSkipped(bar);\n  const o = toTRBL(value);\n  return {\n    t: skipOrLimit(skip.top, o.top, 0, maxH),\n    r: skipOrLimit(skip.right, o.right, 0, maxW),\n    b: skipOrLimit(skip.bottom, o.bottom, 0, maxH),\n    l: skipOrLimit(skip.left, o.left, 0, maxW)\n  };\n}\nfunction parseBorderRadius(bar, maxW, maxH) {\n  const {enableBorderRadius} = bar.getProps(['enableBorderRadius']);\n  const value = bar.options.borderRadius;\n  const o = toTRBLCorners(value);\n  const maxR = Math.min(maxW, maxH);\n  const skip = parseBorderSkipped(bar);\n  const enableBorder = enableBorderRadius || isObject(value);\n  return {\n    topLeft: skipOrLimit(!enableBorder || skip.top || skip.left, o.topLeft, 0, maxR),\n    topRight: skipOrLimit(!enableBorder || skip.top || skip.right, o.topRight, 0, maxR),\n    bottomLeft: skipOrLimit(!enableBorder || skip.bottom || skip.left, o.bottomLeft, 0, maxR),\n    bottomRight: skipOrLimit(!enableBorder || skip.bottom || skip.right, o.bottomRight, 0, maxR)\n  };\n}\nfunction boundingRects(bar) {\n  const bounds = getBarBounds(bar);\n  const width = bounds.right - bounds.left;\n  const height = bounds.bottom - bounds.top;\n  const border = parseBorderWidth(bar, width / 2, height / 2);\n  const radius = parseBorderRadius(bar, width / 2, height / 2);\n  return {\n    outer: {\n      x: bounds.left,\n      y: bounds.top,\n      w: width,\n      h: height,\n      radius\n    },\n    inner: {\n      x: bounds.left + border.l,\n      y: bounds.top + border.t,\n      w: width - border.l - border.r,\n      h: height - border.t - border.b,\n      radius: {\n        topLeft: Math.max(0, radius.topLeft - Math.max(border.t, border.l)),\n        topRight: Math.max(0, radius.topRight - Math.max(border.t, border.r)),\n        bottomLeft: Math.max(0, radius.bottomLeft - Math.max(border.b, border.l)),\n        bottomRight: Math.max(0, radius.bottomRight - Math.max(border.b, border.r)),\n      }\n    }\n  };\n}\nfunction inRange(bar, x, y, useFinalPosition) {\n  const skipX = x === null;\n  const skipY = y === null;\n  const skipBoth = skipX && skipY;\n  const bounds = bar && !skipBoth && getBarBounds(bar, useFinalPosition);\n  return bounds\n\t\t&& (skipX || x >= bounds.left && x <= bounds.right)\n\t\t&& (skipY || y >= bounds.top && y <= bounds.bottom);\n}\nfunction hasRadius(radius) {\n  return radius.topLeft || radius.topRight || radius.bottomLeft || radius.bottomRight;\n}\nfunction addNormalRectPath(ctx, rect) {\n  ctx.rect(rect.x, rect.y, rect.w, rect.h);\n}\nclass BarElement extends Element {\n  constructor(cfg) {\n    super();\n    this.options = undefined;\n    this.horizontal = undefined;\n    this.base = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n  draw(ctx) {\n    const options = this.options;\n    const {inner, outer} = boundingRects(this);\n    const addRectPath = hasRadius(outer.radius) ? addRoundedRectPath : addNormalRectPath;\n    ctx.save();\n    if (outer.w !== inner.w || outer.h !== inner.h) {\n      ctx.beginPath();\n      addRectPath(ctx, outer);\n      ctx.clip();\n      addRectPath(ctx, inner);\n      ctx.fillStyle = options.borderColor;\n      ctx.fill('evenodd');\n    }\n    ctx.beginPath();\n    addRectPath(ctx, inner);\n    ctx.fillStyle = options.backgroundColor;\n    ctx.fill();\n    ctx.restore();\n  }\n  inRange(mouseX, mouseY, useFinalPosition) {\n    return inRange(this, mouseX, mouseY, useFinalPosition);\n  }\n  inXRange(mouseX, useFinalPosition) {\n    return inRange(this, mouseX, null, useFinalPosition);\n  }\n  inYRange(mouseY, useFinalPosition) {\n    return inRange(this, null, mouseY, useFinalPosition);\n  }\n  getCenterPoint(useFinalPosition) {\n    const {x, y, base, horizontal} = this.getProps(['x', 'y', 'base', 'horizontal'], useFinalPosition);\n    return {\n      x: horizontal ? (x + base) / 2 : x,\n      y: horizontal ? y : (y + base) / 2\n    };\n  }\n  getRange(axis) {\n    return axis === 'x' ? this.width / 2 : this.height / 2;\n  }\n}\nBarElement.id = 'bar';\nBarElement.defaults = {\n  borderSkipped: 'start',\n  borderWidth: 0,\n  borderRadius: 0,\n  enableBorderRadius: true,\n  pointStyle: undefined\n};\nBarElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor',\n  borderColor: 'borderColor'\n};\n\nvar elements = /*#__PURE__*/Object.freeze({\n__proto__: null,\nArcElement: ArcElement,\nLineElement: LineElement,\nPointElement: PointElement,\nBarElement: BarElement\n});\n\nfunction lttbDecimation(data, start, count, availableWidth, options) {\n  const samples = options.samples || availableWidth;\n  if (samples >= count) {\n    return data.slice(start, start + count);\n  }\n  const decimated = [];\n  const bucketWidth = (count - 2) / (samples - 2);\n  let sampledIndex = 0;\n  const endIndex = start + count - 1;\n  let a = start;\n  let i, maxAreaPoint, maxArea, area, nextA;\n  decimated[sampledIndex++] = data[a];\n  for (i = 0; i < samples - 2; i++) {\n    let avgX = 0;\n    let avgY = 0;\n    let j;\n    const avgRangeStart = Math.floor((i + 1) * bucketWidth) + 1 + start;\n    const avgRangeEnd = Math.min(Math.floor((i + 2) * bucketWidth) + 1, count) + start;\n    const avgRangeLength = avgRangeEnd - avgRangeStart;\n    for (j = avgRangeStart; j < avgRangeEnd; j++) {\n      avgX += data[j].x;\n      avgY += data[j].y;\n    }\n    avgX /= avgRangeLength;\n    avgY /= avgRangeLength;\n    const rangeOffs = Math.floor(i * bucketWidth) + 1 + start;\n    const rangeTo = Math.floor((i + 1) * bucketWidth) + 1 + start;\n    const {x: pointAx, y: pointAy} = data[a];\n    maxArea = area = -1;\n    for (j = rangeOffs; j < rangeTo; j++) {\n      area = 0.5 * Math.abs(\n        (pointAx - avgX) * (data[j].y - pointAy) -\n        (pointAx - data[j].x) * (avgY - pointAy)\n      );\n      if (area > maxArea) {\n        maxArea = area;\n        maxAreaPoint = data[j];\n        nextA = j;\n      }\n    }\n    decimated[sampledIndex++] = maxAreaPoint;\n    a = nextA;\n  }\n  decimated[sampledIndex++] = data[endIndex];\n  return decimated;\n}\nfunction minMaxDecimation(data, start, count, availableWidth) {\n  let avgX = 0;\n  let countX = 0;\n  let i, point, x, y, prevX, minIndex, maxIndex, startIndex, minY, maxY;\n  const decimated = [];\n  const endIndex = start + count - 1;\n  const xMin = data[start].x;\n  const xMax = data[endIndex].x;\n  const dx = xMax - xMin;\n  for (i = start; i < start + count; ++i) {\n    point = data[i];\n    x = (point.x - xMin) / dx * availableWidth;\n    y = point.y;\n    const truncX = x | 0;\n    if (truncX === prevX) {\n      if (y < minY) {\n        minY = y;\n        minIndex = i;\n      } else if (y > maxY) {\n        maxY = y;\n        maxIndex = i;\n      }\n      avgX = (countX * avgX + point.x) / ++countX;\n    } else {\n      const lastIndex = i - 1;\n      if (!isNullOrUndef(minIndex) && !isNullOrUndef(maxIndex)) {\n        const intermediateIndex1 = Math.min(minIndex, maxIndex);\n        const intermediateIndex2 = Math.max(minIndex, maxIndex);\n        if (intermediateIndex1 !== startIndex && intermediateIndex1 !== lastIndex) {\n          decimated.push({\n            ...data[intermediateIndex1],\n            x: avgX,\n          });\n        }\n        if (intermediateIndex2 !== startIndex && intermediateIndex2 !== lastIndex) {\n          decimated.push({\n            ...data[intermediateIndex2],\n            x: avgX\n          });\n        }\n      }\n      if (i > 0 && lastIndex !== startIndex) {\n        decimated.push(data[lastIndex]);\n      }\n      decimated.push(point);\n      prevX = truncX;\n      countX = 0;\n      minY = maxY = y;\n      minIndex = maxIndex = startIndex = i;\n    }\n  }\n  return decimated;\n}\nfunction cleanDecimatedDataset(dataset) {\n  if (dataset._decimated) {\n    const data = dataset._data;\n    delete dataset._decimated;\n    delete dataset._data;\n    Object.defineProperty(dataset, 'data', {value: data});\n  }\n}\nfunction cleanDecimatedData(chart) {\n  chart.data.datasets.forEach((dataset) => {\n    cleanDecimatedDataset(dataset);\n  });\n}\nfunction getStartAndCountOfVisiblePointsSimplified(meta, points) {\n  const pointCount = points.length;\n  let start = 0;\n  let count;\n  const {iScale} = meta;\n  const {min, max, minDefined, maxDefined} = iScale.getUserBounds();\n  if (minDefined) {\n    start = _limitValue(_lookupByKey(points, iScale.axis, min).lo, 0, pointCount - 1);\n  }\n  if (maxDefined) {\n    count = _limitValue(_lookupByKey(points, iScale.axis, max).hi + 1, start, pointCount) - start;\n  } else {\n    count = pointCount - start;\n  }\n  return {start, count};\n}\nvar plugin_decimation = {\n  id: 'decimation',\n  defaults: {\n    algorithm: 'min-max',\n    enabled: false,\n  },\n  beforeElementsUpdate: (chart, args, options) => {\n    if (!options.enabled) {\n      cleanDecimatedData(chart);\n      return;\n    }\n    const availableWidth = chart.width;\n    chart.data.datasets.forEach((dataset, datasetIndex) => {\n      const {_data, indexAxis} = dataset;\n      const meta = chart.getDatasetMeta(datasetIndex);\n      const data = _data || dataset.data;\n      if (resolve([indexAxis, chart.options.indexAxis]) === 'y') {\n        return;\n      }\n      if (meta.type !== 'line') {\n        return;\n      }\n      const xAxis = chart.scales[meta.xAxisID];\n      if (xAxis.type !== 'linear' && xAxis.type !== 'time') {\n        return;\n      }\n      if (chart.options.parsing) {\n        return;\n      }\n      let {start, count} = getStartAndCountOfVisiblePointsSimplified(meta, data);\n      if (count <= 4 * availableWidth) {\n        cleanDecimatedDataset(dataset);\n        return;\n      }\n      if (isNullOrUndef(_data)) {\n        dataset._data = data;\n        delete dataset.data;\n        Object.defineProperty(dataset, 'data', {\n          configurable: true,\n          enumerable: true,\n          get: function() {\n            return this._decimated;\n          },\n          set: function(d) {\n            this._data = d;\n          }\n        });\n      }\n      let decimated;\n      switch (options.algorithm) {\n      case 'lttb':\n        decimated = lttbDecimation(data, start, count, availableWidth, options);\n        break;\n      case 'min-max':\n        decimated = minMaxDecimation(data, start, count, availableWidth);\n        break;\n      default:\n        throw new Error(`Unsupported decimation algorithm '${options.algorithm}'`);\n      }\n      dataset._decimated = decimated;\n    });\n  },\n  destroy(chart) {\n    cleanDecimatedData(chart);\n  }\n};\n\nfunction getLineByIndex(chart, index) {\n  const meta = chart.getDatasetMeta(index);\n  const visible = meta && chart.isDatasetVisible(index);\n  return visible ? meta.dataset : null;\n}\nfunction parseFillOption(line) {\n  const options = line.options;\n  const fillOption = options.fill;\n  let fill = valueOrDefault(fillOption && fillOption.target, fillOption);\n  if (fill === undefined) {\n    fill = !!options.backgroundColor;\n  }\n  if (fill === false || fill === null) {\n    return false;\n  }\n  if (fill === true) {\n    return 'origin';\n  }\n  return fill;\n}\nfunction decodeFill(line, index, count) {\n  const fill = parseFillOption(line);\n  if (isObject(fill)) {\n    return isNaN(fill.value) ? false : fill;\n  }\n  let target = parseFloat(fill);\n  if (isNumberFinite(target) && Math.floor(target) === target) {\n    if (fill[0] === '-' || fill[0] === '+') {\n      target = index + target;\n    }\n    if (target === index || target < 0 || target >= count) {\n      return false;\n    }\n    return target;\n  }\n  return ['origin', 'start', 'end', 'stack'].indexOf(fill) >= 0 && fill;\n}\nfunction computeLinearBoundary(source) {\n  const {scale = {}, fill} = source;\n  let target = null;\n  let horizontal;\n  if (fill === 'start') {\n    target = scale.bottom;\n  } else if (fill === 'end') {\n    target = scale.top;\n  } else if (isObject(fill)) {\n    target = scale.getPixelForValue(fill.value);\n  } else if (scale.getBasePixel) {\n    target = scale.getBasePixel();\n  }\n  if (isNumberFinite(target)) {\n    horizontal = scale.isHorizontal();\n    return {\n      x: horizontal ? target : null,\n      y: horizontal ? null : target\n    };\n  }\n  return null;\n}\nclass simpleArc {\n  constructor(opts) {\n    this.x = opts.x;\n    this.y = opts.y;\n    this.radius = opts.radius;\n  }\n  pathSegment(ctx, bounds, opts) {\n    const {x, y, radius} = this;\n    bounds = bounds || {start: 0, end: TAU};\n    ctx.arc(x, y, radius, bounds.end, bounds.start, true);\n    return !opts.bounds;\n  }\n  interpolate(point) {\n    const {x, y, radius} = this;\n    const angle = point.angle;\n    return {\n      x: x + Math.cos(angle) * radius,\n      y: y + Math.sin(angle) * radius,\n      angle\n    };\n  }\n}\nfunction computeCircularBoundary(source) {\n  const {scale, fill} = source;\n  const options = scale.options;\n  const length = scale.getLabels().length;\n  const target = [];\n  const start = options.reverse ? scale.max : scale.min;\n  const end = options.reverse ? scale.min : scale.max;\n  let i, center, value;\n  if (fill === 'start') {\n    value = start;\n  } else if (fill === 'end') {\n    value = end;\n  } else if (isObject(fill)) {\n    value = fill.value;\n  } else {\n    value = scale.getBaseValue();\n  }\n  if (options.grid.circular) {\n    center = scale.getPointPositionForValue(0, start);\n    return new simpleArc({\n      x: center.x,\n      y: center.y,\n      radius: scale.getDistanceFromCenterForValue(value)\n    });\n  }\n  for (i = 0; i < length; ++i) {\n    target.push(scale.getPointPositionForValue(i, value));\n  }\n  return target;\n}\nfunction computeBoundary(source) {\n  const scale = source.scale || {};\n  if (scale.getPointPositionForValue) {\n    return computeCircularBoundary(source);\n  }\n  return computeLinearBoundary(source);\n}\nfunction pointsFromSegments(boundary, line) {\n  const {x = null, y = null} = boundary || {};\n  const linePoints = line.points;\n  const points = [];\n  line.segments.forEach((segment) => {\n    const first = linePoints[segment.start];\n    const last = linePoints[segment.end];\n    if (y !== null) {\n      points.push({x: first.x, y});\n      points.push({x: last.x, y});\n    } else if (x !== null) {\n      points.push({x, y: first.y});\n      points.push({x, y: last.y});\n    }\n  });\n  return points;\n}\nfunction buildStackLine(source) {\n  const {chart, scale, index, line} = source;\n  const points = [];\n  const segments = line.segments;\n  const sourcePoints = line.points;\n  const linesBelow = getLinesBelow(chart, index);\n  linesBelow.push(createBoundaryLine({x: null, y: scale.bottom}, line));\n  for (let i = 0; i < segments.length; i++) {\n    const segment = segments[i];\n    for (let j = segment.start; j <= segment.end; j++) {\n      addPointsBelow(points, sourcePoints[j], linesBelow);\n    }\n  }\n  return new LineElement({points, options: {}});\n}\nconst isLineAndNotInHideAnimation = (meta) => meta.type === 'line' && !meta.hidden;\nfunction getLinesBelow(chart, index) {\n  const below = [];\n  const metas = chart.getSortedVisibleDatasetMetas();\n  for (let i = 0; i < metas.length; i++) {\n    const meta = metas[i];\n    if (meta.index === index) {\n      break;\n    }\n    if (isLineAndNotInHideAnimation(meta)) {\n      below.unshift(meta.dataset);\n    }\n  }\n  return below;\n}\nfunction addPointsBelow(points, sourcePoint, linesBelow) {\n  const postponed = [];\n  for (let j = 0; j < linesBelow.length; j++) {\n    const line = linesBelow[j];\n    const {first, last, point} = findPoint(line, sourcePoint, 'x');\n    if (!point || (first && last)) {\n      continue;\n    }\n    if (first) {\n      postponed.unshift(point);\n    } else {\n      points.push(point);\n      if (!last) {\n        break;\n      }\n    }\n  }\n  points.push(...postponed);\n}\nfunction findPoint(line, sourcePoint, property) {\n  const point = line.interpolate(sourcePoint, property);\n  if (!point) {\n    return {};\n  }\n  const pointValue = point[property];\n  const segments = line.segments;\n  const linePoints = line.points;\n  let first = false;\n  let last = false;\n  for (let i = 0; i < segments.length; i++) {\n    const segment = segments[i];\n    const firstValue = linePoints[segment.start][property];\n    const lastValue = linePoints[segment.end][property];\n    if (pointValue >= firstValue && pointValue <= lastValue) {\n      first = pointValue === firstValue;\n      last = pointValue === lastValue;\n      break;\n    }\n  }\n  return {first, last, point};\n}\nfunction getTarget(source) {\n  const {chart, fill, line} = source;\n  if (isNumberFinite(fill)) {\n    return getLineByIndex(chart, fill);\n  }\n  if (fill === 'stack') {\n    return buildStackLine(source);\n  }\n  const boundary = computeBoundary(source);\n  if (boundary instanceof simpleArc) {\n    return boundary;\n  }\n  return createBoundaryLine(boundary, line);\n}\nfunction createBoundaryLine(boundary, line) {\n  let points = [];\n  let _loop = false;\n  if (isArray(boundary)) {\n    _loop = true;\n    points = boundary;\n  } else {\n    points = pointsFromSegments(boundary, line);\n  }\n  return points.length ? new LineElement({\n    points,\n    options: {tension: 0},\n    _loop,\n    _fullLoop: _loop\n  }) : null;\n}\nfunction resolveTarget(sources, index, propagate) {\n  const source = sources[index];\n  let fill = source.fill;\n  const visited = [index];\n  let target;\n  if (!propagate) {\n    return fill;\n  }\n  while (fill !== false && visited.indexOf(fill) === -1) {\n    if (!isNumberFinite(fill)) {\n      return fill;\n    }\n    target = sources[fill];\n    if (!target) {\n      return false;\n    }\n    if (target.visible) {\n      return fill;\n    }\n    visited.push(fill);\n    fill = target.fill;\n  }\n  return false;\n}\nfunction _clip(ctx, target, clipY) {\n  ctx.beginPath();\n  target.path(ctx);\n  ctx.lineTo(target.last().x, clipY);\n  ctx.lineTo(target.first().x, clipY);\n  ctx.closePath();\n  ctx.clip();\n}\nfunction getBounds(property, first, last, loop) {\n  if (loop) {\n    return;\n  }\n  let start = first[property];\n  let end = last[property];\n  if (property === 'angle') {\n    start = _normalizeAngle(start);\n    end = _normalizeAngle(end);\n  }\n  return {property, start, end};\n}\nfunction _getEdge(a, b, prop, fn) {\n  if (a && b) {\n    return fn(a[prop], b[prop]);\n  }\n  return a ? a[prop] : b ? b[prop] : 0;\n}\nfunction _segments(line, target, property) {\n  const segments = line.segments;\n  const points = line.points;\n  const tpoints = target.points;\n  const parts = [];\n  for (const segment of segments) {\n    const bounds = getBounds(property, points[segment.start], points[segment.end], segment.loop);\n    if (!target.segments) {\n      parts.push({\n        source: segment,\n        target: bounds,\n        start: points[segment.start],\n        end: points[segment.end]\n      });\n      continue;\n    }\n    const targetSegments = _boundSegments(target, bounds);\n    for (const tgt of targetSegments) {\n      const subBounds = getBounds(property, tpoints[tgt.start], tpoints[tgt.end], tgt.loop);\n      const fillSources = _boundSegment(segment, points, subBounds);\n      for (const fillSource of fillSources) {\n        parts.push({\n          source: fillSource,\n          target: tgt,\n          start: {\n            [property]: _getEdge(bounds, subBounds, 'start', Math.max)\n          },\n          end: {\n            [property]: _getEdge(bounds, subBounds, 'end', Math.min)\n          }\n        });\n      }\n    }\n  }\n  return parts;\n}\nfunction clipBounds(ctx, scale, bounds) {\n  const {top, bottom} = scale.chart.chartArea;\n  const {property, start, end} = bounds || {};\n  if (property === 'x') {\n    ctx.beginPath();\n    ctx.rect(start, top, end - start, bottom - top);\n    ctx.clip();\n  }\n}\nfunction interpolatedLineTo(ctx, target, point, property) {\n  const interpolatedPoint = target.interpolate(point, property);\n  if (interpolatedPoint) {\n    ctx.lineTo(interpolatedPoint.x, interpolatedPoint.y);\n  }\n}\nfunction _fill(ctx, cfg) {\n  const {line, target, property, color, scale} = cfg;\n  const segments = _segments(line, target, property);\n  for (const {source: src, target: tgt, start, end} of segments) {\n    const {style: {backgroundColor = color} = {}} = src;\n    ctx.save();\n    ctx.fillStyle = backgroundColor;\n    clipBounds(ctx, scale, getBounds(property, start, end));\n    ctx.beginPath();\n    const lineLoop = !!line.pathSegment(ctx, src);\n    if (lineLoop) {\n      ctx.closePath();\n    } else {\n      interpolatedLineTo(ctx, target, end, property);\n    }\n    const targetLoop = !!target.pathSegment(ctx, tgt, {move: lineLoop, reverse: true});\n    const loop = lineLoop && targetLoop;\n    if (!loop) {\n      interpolatedLineTo(ctx, target, start, property);\n    }\n    ctx.closePath();\n    ctx.fill(loop ? 'evenodd' : 'nonzero');\n    ctx.restore();\n  }\n}\nfunction doFill(ctx, cfg) {\n  const {line, target, above, below, area, scale} = cfg;\n  const property = line._loop ? 'angle' : cfg.axis;\n  ctx.save();\n  if (property === 'x' && below !== above) {\n    _clip(ctx, target, area.top);\n    _fill(ctx, {line, target, color: above, scale, property});\n    ctx.restore();\n    ctx.save();\n    _clip(ctx, target, area.bottom);\n  }\n  _fill(ctx, {line, target, color: below, scale, property});\n  ctx.restore();\n}\nfunction drawfill(ctx, source, area) {\n  const target = getTarget(source);\n  const {line, scale, axis} = source;\n  const lineOpts = line.options;\n  const fillOption = lineOpts.fill;\n  const color = lineOpts.backgroundColor;\n  const {above = color, below = color} = fillOption || {};\n  if (target && line.points.length) {\n    clipArea(ctx, area);\n    doFill(ctx, {line, target, above, below, area, scale, axis});\n    unclipArea(ctx);\n  }\n}\nvar plugin_filler = {\n  id: 'filler',\n  afterDatasetsUpdate(chart, _args, options) {\n    const count = (chart.data.datasets || []).length;\n    const sources = [];\n    let meta, i, line, source;\n    for (i = 0; i < count; ++i) {\n      meta = chart.getDatasetMeta(i);\n      line = meta.dataset;\n      source = null;\n      if (line && line.options && line instanceof LineElement) {\n        source = {\n          visible: chart.isDatasetVisible(i),\n          index: i,\n          fill: decodeFill(line, i, count),\n          chart,\n          axis: meta.controller.options.indexAxis,\n          scale: meta.vScale,\n          line,\n        };\n      }\n      meta.$filler = source;\n      sources.push(source);\n    }\n    for (i = 0; i < count; ++i) {\n      source = sources[i];\n      if (!source || source.fill === false) {\n        continue;\n      }\n      source.fill = resolveTarget(sources, i, options.propagate);\n    }\n  },\n  beforeDraw(chart, _args, options) {\n    const draw = options.drawTime === 'beforeDraw';\n    const metasets = chart.getSortedVisibleDatasetMetas();\n    const area = chart.chartArea;\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      const source = metasets[i].$filler;\n      if (!source) {\n        continue;\n      }\n      source.line.updateControlPoints(area, source.axis);\n      if (draw) {\n        drawfill(chart.ctx, source, area);\n      }\n    }\n  },\n  beforeDatasetsDraw(chart, _args, options) {\n    if (options.drawTime !== 'beforeDatasetsDraw') {\n      return;\n    }\n    const metasets = chart.getSortedVisibleDatasetMetas();\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      const source = metasets[i].$filler;\n      if (source) {\n        drawfill(chart.ctx, source, chart.chartArea);\n      }\n    }\n  },\n  beforeDatasetDraw(chart, args, options) {\n    const source = args.meta.$filler;\n    if (!source || source.fill === false || options.drawTime !== 'beforeDatasetDraw') {\n      return;\n    }\n    drawfill(chart.ctx, source, chart.chartArea);\n  },\n  defaults: {\n    propagate: true,\n    drawTime: 'beforeDatasetDraw'\n  }\n};\n\nconst getBoxSize = (labelOpts, fontSize) => {\n  let {boxHeight = fontSize, boxWidth = fontSize} = labelOpts;\n  if (labelOpts.usePointStyle) {\n    boxHeight = Math.min(boxHeight, fontSize);\n    boxWidth = Math.min(boxWidth, fontSize);\n  }\n  return {\n    boxWidth,\n    boxHeight,\n    itemHeight: Math.max(fontSize, boxHeight)\n  };\n};\nconst itemsEqual = (a, b) => a !== null && b !== null && a.datasetIndex === b.datasetIndex && a.index === b.index;\nclass Legend extends Element {\n  constructor(config) {\n    super();\n    this._added = false;\n    this.legendHitBoxes = [];\n    this._hoveredItem = null;\n    this.doughnutMode = false;\n    this.chart = config.chart;\n    this.options = config.options;\n    this.ctx = config.ctx;\n    this.legendItems = undefined;\n    this.columnSizes = undefined;\n    this.lineWidths = undefined;\n    this.maxHeight = undefined;\n    this.maxWidth = undefined;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.height = undefined;\n    this.width = undefined;\n    this._margins = undefined;\n    this.position = undefined;\n    this.weight = undefined;\n    this.fullSize = undefined;\n  }\n  update(maxWidth, maxHeight, margins) {\n    const me = this;\n    me.maxWidth = maxWidth;\n    me.maxHeight = maxHeight;\n    me._margins = margins;\n    me.setDimensions();\n    me.buildLabels();\n    me.fit();\n  }\n  setDimensions() {\n    const me = this;\n    if (me.isHorizontal()) {\n      me.width = me.maxWidth;\n      me.left = 0;\n      me.right = me.width;\n    } else {\n      me.height = me.maxHeight;\n      me.top = 0;\n      me.bottom = me.height;\n    }\n  }\n  buildLabels() {\n    const me = this;\n    const labelOpts = me.options.labels || {};\n    let legendItems = callback(labelOpts.generateLabels, [me.chart], me) || [];\n    if (labelOpts.filter) {\n      legendItems = legendItems.filter((item) => labelOpts.filter(item, me.chart.data));\n    }\n    if (labelOpts.sort) {\n      legendItems = legendItems.sort((a, b) => labelOpts.sort(a, b, me.chart.data));\n    }\n    if (me.options.reverse) {\n      legendItems.reverse();\n    }\n    me.legendItems = legendItems;\n  }\n  fit() {\n    const me = this;\n    const {options, ctx} = me;\n    if (!options.display) {\n      me.width = me.height = 0;\n      return;\n    }\n    const labelOpts = options.labels;\n    const labelFont = toFont(labelOpts.font);\n    const fontSize = labelFont.size;\n    const titleHeight = me._computeTitleHeight();\n    const {boxWidth, itemHeight} = getBoxSize(labelOpts, fontSize);\n    let width, height;\n    ctx.font = labelFont.string;\n    if (me.isHorizontal()) {\n      width = me.maxWidth;\n      height = me._fitRows(titleHeight, fontSize, boxWidth, itemHeight) + 10;\n    } else {\n      height = me.maxHeight;\n      width = me._fitCols(titleHeight, fontSize, boxWidth, itemHeight) + 10;\n    }\n    me.width = Math.min(width, options.maxWidth || me.maxWidth);\n    me.height = Math.min(height, options.maxHeight || me.maxHeight);\n  }\n  _fitRows(titleHeight, fontSize, boxWidth, itemHeight) {\n    const me = this;\n    const {ctx, maxWidth, options: {labels: {padding}}} = me;\n    const hitboxes = me.legendHitBoxes = [];\n    const lineWidths = me.lineWidths = [0];\n    const lineHeight = itemHeight + padding;\n    let totalHeight = titleHeight;\n    ctx.textAlign = 'left';\n    ctx.textBaseline = 'middle';\n    let row = -1;\n    let top = -lineHeight;\n    me.legendItems.forEach((legendItem, i) => {\n      const itemWidth = boxWidth + (fontSize / 2) + ctx.measureText(legendItem.text).width;\n      if (i === 0 || lineWidths[lineWidths.length - 1] + itemWidth + 2 * padding > maxWidth) {\n        totalHeight += lineHeight;\n        lineWidths[lineWidths.length - (i > 0 ? 0 : 1)] = 0;\n        top += lineHeight;\n        row++;\n      }\n      hitboxes[i] = {left: 0, top, row, width: itemWidth, height: itemHeight};\n      lineWidths[lineWidths.length - 1] += itemWidth + padding;\n    });\n    return totalHeight;\n  }\n  _fitCols(titleHeight, fontSize, boxWidth, itemHeight) {\n    const me = this;\n    const {ctx, maxHeight, options: {labels: {padding}}} = me;\n    const hitboxes = me.legendHitBoxes = [];\n    const columnSizes = me.columnSizes = [];\n    const heightLimit = maxHeight - titleHeight;\n    let totalWidth = padding;\n    let currentColWidth = 0;\n    let currentColHeight = 0;\n    let left = 0;\n    let top = 0;\n    let col = 0;\n    me.legendItems.forEach((legendItem, i) => {\n      const itemWidth = boxWidth + (fontSize / 2) + ctx.measureText(legendItem.text).width;\n      if (i > 0 && currentColHeight + fontSize + 2 * padding > heightLimit) {\n        totalWidth += currentColWidth + padding;\n        columnSizes.push({width: currentColWidth, height: currentColHeight});\n        left += currentColWidth + padding;\n        col++;\n        top = 0;\n        currentColWidth = currentColHeight = 0;\n      }\n      currentColWidth = Math.max(currentColWidth, itemWidth);\n      currentColHeight += fontSize + padding;\n      hitboxes[i] = {left, top, col, width: itemWidth, height: itemHeight};\n      top += itemHeight + padding;\n    });\n    totalWidth += currentColWidth;\n    columnSizes.push({width: currentColWidth, height: currentColHeight});\n    return totalWidth;\n  }\n  adjustHitBoxes() {\n    const me = this;\n    if (!me.options.display) {\n      return;\n    }\n    const titleHeight = me._computeTitleHeight();\n    const {legendHitBoxes: hitboxes, options: {align, labels: {padding}}} = me;\n    if (this.isHorizontal()) {\n      let row = 0;\n      let left = _alignStartEnd(align, me.left + padding, me.right - me.lineWidths[row]);\n      for (const hitbox of hitboxes) {\n        if (row !== hitbox.row) {\n          row = hitbox.row;\n          left = _alignStartEnd(align, me.left + padding, me.right - me.lineWidths[row]);\n        }\n        hitbox.top += me.top + titleHeight + padding;\n        hitbox.left = left;\n        left += hitbox.width + padding;\n      }\n    } else {\n      let col = 0;\n      let top = _alignStartEnd(align, me.top + titleHeight + padding, me.bottom - me.columnSizes[col].height);\n      for (const hitbox of hitboxes) {\n        if (hitbox.col !== col) {\n          col = hitbox.col;\n          top = _alignStartEnd(align, me.top + titleHeight + padding, me.bottom - me.columnSizes[col].height);\n        }\n        hitbox.top = top;\n        hitbox.left += me.left + padding;\n        top += hitbox.height + padding;\n      }\n    }\n  }\n  isHorizontal() {\n    return this.options.position === 'top' || this.options.position === 'bottom';\n  }\n  draw() {\n    const me = this;\n    if (me.options.display) {\n      const ctx = me.ctx;\n      clipArea(ctx, me);\n      me._draw();\n      unclipArea(ctx);\n    }\n  }\n  _draw() {\n    const me = this;\n    const {options: opts, columnSizes, lineWidths, ctx} = me;\n    const {align, labels: labelOpts} = opts;\n    const defaultColor = defaults.color;\n    const rtlHelper = getRtlAdapter(opts.rtl, me.left, me.width);\n    const labelFont = toFont(labelOpts.font);\n    const {color: fontColor, padding} = labelOpts;\n    const fontSize = labelFont.size;\n    const halfFontSize = fontSize / 2;\n    let cursor;\n    me.drawTitle();\n    ctx.textAlign = rtlHelper.textAlign('left');\n    ctx.textBaseline = 'middle';\n    ctx.lineWidth = 0.5;\n    ctx.font = labelFont.string;\n    const {boxWidth, boxHeight, itemHeight} = getBoxSize(labelOpts, fontSize);\n    const drawLegendBox = function(x, y, legendItem) {\n      if (isNaN(boxWidth) || boxWidth <= 0 || isNaN(boxHeight) || boxHeight < 0) {\n        return;\n      }\n      ctx.save();\n      const lineWidth = valueOrDefault(legendItem.lineWidth, 1);\n      ctx.fillStyle = valueOrDefault(legendItem.fillStyle, defaultColor);\n      ctx.lineCap = valueOrDefault(legendItem.lineCap, 'butt');\n      ctx.lineDashOffset = valueOrDefault(legendItem.lineDashOffset, 0);\n      ctx.lineJoin = valueOrDefault(legendItem.lineJoin, 'miter');\n      ctx.lineWidth = lineWidth;\n      ctx.strokeStyle = valueOrDefault(legendItem.strokeStyle, defaultColor);\n      ctx.setLineDash(valueOrDefault(legendItem.lineDash, []));\n      if (labelOpts.usePointStyle) {\n        const drawOptions = {\n          radius: boxWidth * Math.SQRT2 / 2,\n          pointStyle: legendItem.pointStyle,\n          rotation: legendItem.rotation,\n          borderWidth: lineWidth\n        };\n        const centerX = rtlHelper.xPlus(x, boxWidth / 2);\n        const centerY = y + halfFontSize;\n        drawPoint(ctx, drawOptions, centerX, centerY);\n      } else {\n        const yBoxTop = y + Math.max((fontSize - boxHeight) / 2, 0);\n        const xBoxLeft = rtlHelper.leftForLtr(x, boxWidth);\n        const borderRadius = toTRBLCorners(legendItem.borderRadius);\n        ctx.beginPath();\n        if (Object.values(borderRadius).some(v => v !== 0)) {\n          addRoundedRectPath(ctx, {\n            x: xBoxLeft,\n            y: yBoxTop,\n            w: boxWidth,\n            h: boxHeight,\n            radius: borderRadius,\n          });\n        } else {\n          ctx.rect(xBoxLeft, yBoxTop, boxWidth, boxHeight);\n        }\n        ctx.fill();\n        if (lineWidth !== 0) {\n          ctx.stroke();\n        }\n      }\n      ctx.restore();\n    };\n    const fillText = function(x, y, legendItem) {\n      renderText(ctx, legendItem.text, x, y + (itemHeight / 2), labelFont, {\n        strikethrough: legendItem.hidden,\n        textAlign: legendItem.textAlign\n      });\n    };\n    const isHorizontal = me.isHorizontal();\n    const titleHeight = this._computeTitleHeight();\n    if (isHorizontal) {\n      cursor = {\n        x: _alignStartEnd(align, me.left + padding, me.right - lineWidths[0]),\n        y: me.top + padding + titleHeight,\n        line: 0\n      };\n    } else {\n      cursor = {\n        x: me.left + padding,\n        y: _alignStartEnd(align, me.top + titleHeight + padding, me.bottom - columnSizes[0].height),\n        line: 0\n      };\n    }\n    overrideTextDirection(me.ctx, opts.textDirection);\n    const lineHeight = itemHeight + padding;\n    me.legendItems.forEach((legendItem, i) => {\n      ctx.strokeStyle = legendItem.fontColor || fontColor;\n      ctx.fillStyle = legendItem.fontColor || fontColor;\n      const textWidth = ctx.measureText(legendItem.text).width;\n      const textAlign = rtlHelper.textAlign(legendItem.textAlign || (legendItem.textAlign = labelOpts.textAlign));\n      const width = boxWidth + (fontSize / 2) + textWidth;\n      let x = cursor.x;\n      let y = cursor.y;\n      rtlHelper.setWidth(me.width);\n      if (isHorizontal) {\n        if (i > 0 && x + width + padding > me.right) {\n          y = cursor.y += lineHeight;\n          cursor.line++;\n          x = cursor.x = _alignStartEnd(align, me.left + padding, me.right - lineWidths[cursor.line]);\n        }\n      } else if (i > 0 && y + lineHeight > me.bottom) {\n        x = cursor.x = x + columnSizes[cursor.line].width + padding;\n        cursor.line++;\n        y = cursor.y = _alignStartEnd(align, me.top + titleHeight + padding, me.bottom - columnSizes[cursor.line].height);\n      }\n      const realX = rtlHelper.x(x);\n      drawLegendBox(realX, y, legendItem);\n      x = _textX(textAlign, x + boxWidth + halfFontSize, me.right);\n      fillText(rtlHelper.x(x), y, legendItem);\n      if (isHorizontal) {\n        cursor.x += width + padding;\n      } else {\n        cursor.y += lineHeight;\n      }\n    });\n    restoreTextDirection(me.ctx, opts.textDirection);\n  }\n  drawTitle() {\n    const me = this;\n    const opts = me.options;\n    const titleOpts = opts.title;\n    const titleFont = toFont(titleOpts.font);\n    const titlePadding = toPadding(titleOpts.padding);\n    if (!titleOpts.display) {\n      return;\n    }\n    const rtlHelper = getRtlAdapter(opts.rtl, me.left, me.width);\n    const ctx = me.ctx;\n    const position = titleOpts.position;\n    const halfFontSize = titleFont.size / 2;\n    const topPaddingPlusHalfFontSize = titlePadding.top + halfFontSize;\n    let y;\n    let left = me.left;\n    let maxWidth = me.width;\n    if (this.isHorizontal()) {\n      maxWidth = Math.max(...me.lineWidths);\n      y = me.top + topPaddingPlusHalfFontSize;\n      left = _alignStartEnd(opts.align, left, me.right - maxWidth);\n    } else {\n      const maxHeight = me.columnSizes.reduce((acc, size) => Math.max(acc, size.height), 0);\n      y = topPaddingPlusHalfFontSize + _alignStartEnd(opts.align, me.top, me.bottom - maxHeight - opts.labels.padding - me._computeTitleHeight());\n    }\n    const x = _alignStartEnd(position, left, left + maxWidth);\n    ctx.textAlign = rtlHelper.textAlign(_toLeftRightCenter(position));\n    ctx.textBaseline = 'middle';\n    ctx.strokeStyle = titleOpts.color;\n    ctx.fillStyle = titleOpts.color;\n    ctx.font = titleFont.string;\n    renderText(ctx, titleOpts.text, x, y, titleFont);\n  }\n  _computeTitleHeight() {\n    const titleOpts = this.options.title;\n    const titleFont = toFont(titleOpts.font);\n    const titlePadding = toPadding(titleOpts.padding);\n    return titleOpts.display ? titleFont.lineHeight + titlePadding.height : 0;\n  }\n  _getLegendItemAt(x, y) {\n    const me = this;\n    let i, hitBox, lh;\n    if (x >= me.left && x <= me.right && y >= me.top && y <= me.bottom) {\n      lh = me.legendHitBoxes;\n      for (i = 0; i < lh.length; ++i) {\n        hitBox = lh[i];\n        if (x >= hitBox.left && x <= hitBox.left + hitBox.width && y >= hitBox.top && y <= hitBox.top + hitBox.height) {\n          return me.legendItems[i];\n        }\n      }\n    }\n    return null;\n  }\n  handleEvent(e) {\n    const me = this;\n    const opts = me.options;\n    if (!isListened(e.type, opts)) {\n      return;\n    }\n    const hoveredItem = me._getLegendItemAt(e.x, e.y);\n    if (e.type === 'mousemove') {\n      const previous = me._hoveredItem;\n      const sameItem = itemsEqual(previous, hoveredItem);\n      if (previous && !sameItem) {\n        callback(opts.onLeave, [e, previous, me], me);\n      }\n      me._hoveredItem = hoveredItem;\n      if (hoveredItem && !sameItem) {\n        callback(opts.onHover, [e, hoveredItem, me], me);\n      }\n    } else if (hoveredItem) {\n      callback(opts.onClick, [e, hoveredItem, me], me);\n    }\n  }\n}\nfunction isListened(type, opts) {\n  if (type === 'mousemove' && (opts.onHover || opts.onLeave)) {\n    return true;\n  }\n  if (opts.onClick && (type === 'click' || type === 'mouseup')) {\n    return true;\n  }\n  return false;\n}\nvar plugin_legend = {\n  id: 'legend',\n  _element: Legend,\n  start(chart, _args, options) {\n    const legend = chart.legend = new Legend({ctx: chart.ctx, options, chart});\n    layouts.configure(chart, legend, options);\n    layouts.addBox(chart, legend);\n  },\n  stop(chart) {\n    layouts.removeBox(chart, chart.legend);\n    delete chart.legend;\n  },\n  beforeUpdate(chart, _args, options) {\n    const legend = chart.legend;\n    layouts.configure(chart, legend, options);\n    legend.options = options;\n  },\n  afterUpdate(chart) {\n    const legend = chart.legend;\n    legend.buildLabels();\n    legend.adjustHitBoxes();\n  },\n  afterEvent(chart, args) {\n    if (!args.replay) {\n      chart.legend.handleEvent(args.event);\n    }\n  },\n  defaults: {\n    display: true,\n    position: 'top',\n    align: 'center',\n    fullSize: true,\n    reverse: false,\n    weight: 1000,\n    onClick(e, legendItem, legend) {\n      const index = legendItem.datasetIndex;\n      const ci = legend.chart;\n      if (ci.isDatasetVisible(index)) {\n        ci.hide(index);\n        legendItem.hidden = true;\n      } else {\n        ci.show(index);\n        legendItem.hidden = false;\n      }\n    },\n    onHover: null,\n    onLeave: null,\n    labels: {\n      color: (ctx) => ctx.chart.options.color,\n      boxWidth: 40,\n      padding: 10,\n      generateLabels(chart) {\n        const datasets = chart.data.datasets;\n        const {labels: {usePointStyle, pointStyle, textAlign, color}} = chart.legend.options;\n        return chart._getSortedDatasetMetas().map((meta) => {\n          const style = meta.controller.getStyle(usePointStyle ? 0 : undefined);\n          const borderWidth = toPadding(style.borderWidth);\n          return {\n            text: datasets[meta.index].label,\n            fillStyle: style.backgroundColor,\n            fontColor: color,\n            hidden: !meta.visible,\n            lineCap: style.borderCapStyle,\n            lineDash: style.borderDash,\n            lineDashOffset: style.borderDashOffset,\n            lineJoin: style.borderJoinStyle,\n            lineWidth: (borderWidth.width + borderWidth.height) / 4,\n            strokeStyle: style.borderColor,\n            pointStyle: pointStyle || style.pointStyle,\n            rotation: style.rotation,\n            textAlign: textAlign || style.textAlign,\n            borderRadius: 0,\n            datasetIndex: meta.index\n          };\n        }, this);\n      }\n    },\n    title: {\n      color: (ctx) => ctx.chart.options.color,\n      display: false,\n      position: 'center',\n      text: '',\n    }\n  },\n  descriptors: {\n    _scriptable: (name) => !name.startsWith('on'),\n    labels: {\n      _scriptable: (name) => !['generateLabels', 'filter', 'sort'].includes(name),\n    }\n  },\n};\n\nclass Title extends Element {\n  constructor(config) {\n    super();\n    this.chart = config.chart;\n    this.options = config.options;\n    this.ctx = config.ctx;\n    this._padding = undefined;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    this.position = undefined;\n    this.weight = undefined;\n    this.fullSize = undefined;\n  }\n  update(maxWidth, maxHeight) {\n    const me = this;\n    const opts = me.options;\n    me.left = 0;\n    me.top = 0;\n    if (!opts.display) {\n      me.width = me.height = me.right = me.bottom = 0;\n      return;\n    }\n    me.width = me.right = maxWidth;\n    me.height = me.bottom = maxHeight;\n    const lineCount = isArray(opts.text) ? opts.text.length : 1;\n    me._padding = toPadding(opts.padding);\n    const textSize = lineCount * toFont(opts.font).lineHeight + me._padding.height;\n    if (me.isHorizontal()) {\n      me.height = textSize;\n    } else {\n      me.width = textSize;\n    }\n  }\n  isHorizontal() {\n    const pos = this.options.position;\n    return pos === 'top' || pos === 'bottom';\n  }\n  _drawArgs(offset) {\n    const {top, left, bottom, right, options} = this;\n    const align = options.align;\n    let rotation = 0;\n    let maxWidth, titleX, titleY;\n    if (this.isHorizontal()) {\n      titleX = _alignStartEnd(align, left, right);\n      titleY = top + offset;\n      maxWidth = right - left;\n    } else {\n      if (options.position === 'left') {\n        titleX = left + offset;\n        titleY = _alignStartEnd(align, bottom, top);\n        rotation = PI * -0.5;\n      } else {\n        titleX = right - offset;\n        titleY = _alignStartEnd(align, top, bottom);\n        rotation = PI * 0.5;\n      }\n      maxWidth = bottom - top;\n    }\n    return {titleX, titleY, maxWidth, rotation};\n  }\n  draw() {\n    const me = this;\n    const ctx = me.ctx;\n    const opts = me.options;\n    if (!opts.display) {\n      return;\n    }\n    const fontOpts = toFont(opts.font);\n    const lineHeight = fontOpts.lineHeight;\n    const offset = lineHeight / 2 + me._padding.top;\n    const {titleX, titleY, maxWidth, rotation} = me._drawArgs(offset);\n    renderText(ctx, opts.text, 0, 0, fontOpts, {\n      color: opts.color,\n      maxWidth,\n      rotation,\n      textAlign: _toLeftRightCenter(opts.align),\n      textBaseline: 'middle',\n      translation: [titleX, titleY],\n    });\n  }\n}\nfunction createTitle(chart, titleOpts) {\n  const title = new Title({\n    ctx: chart.ctx,\n    options: titleOpts,\n    chart\n  });\n  layouts.configure(chart, title, titleOpts);\n  layouts.addBox(chart, title);\n  chart.titleBlock = title;\n}\nvar plugin_title = {\n  id: 'title',\n  _element: Title,\n  start(chart, _args, options) {\n    createTitle(chart, options);\n  },\n  stop(chart) {\n    const titleBlock = chart.titleBlock;\n    layouts.removeBox(chart, titleBlock);\n    delete chart.titleBlock;\n  },\n  beforeUpdate(chart, _args, options) {\n    const title = chart.titleBlock;\n    layouts.configure(chart, title, options);\n    title.options = options;\n  },\n  defaults: {\n    align: 'center',\n    display: false,\n    font: {\n      weight: 'bold',\n    },\n    fullSize: true,\n    padding: 10,\n    position: 'top',\n    text: '',\n    weight: 2000\n  },\n  defaultRoutes: {\n    color: 'color'\n  },\n  descriptors: {\n    _scriptable: true,\n    _indexable: false,\n  },\n};\n\nconst positioners = {\n  average(items) {\n    if (!items.length) {\n      return false;\n    }\n    let i, len;\n    let x = 0;\n    let y = 0;\n    let count = 0;\n    for (i = 0, len = items.length; i < len; ++i) {\n      const el = items[i].element;\n      if (el && el.hasValue()) {\n        const pos = el.tooltipPosition();\n        x += pos.x;\n        y += pos.y;\n        ++count;\n      }\n    }\n    return {\n      x: x / count,\n      y: y / count\n    };\n  },\n  nearest(items, eventPosition) {\n    if (!items.length) {\n      return false;\n    }\n    let x = eventPosition.x;\n    let y = eventPosition.y;\n    let minDistance = Number.POSITIVE_INFINITY;\n    let i, len, nearestElement;\n    for (i = 0, len = items.length; i < len; ++i) {\n      const el = items[i].element;\n      if (el && el.hasValue()) {\n        const center = el.getCenterPoint();\n        const d = distanceBetweenPoints(eventPosition, center);\n        if (d < minDistance) {\n          minDistance = d;\n          nearestElement = el;\n        }\n      }\n    }\n    if (nearestElement) {\n      const tp = nearestElement.tooltipPosition();\n      x = tp.x;\n      y = tp.y;\n    }\n    return {\n      x,\n      y\n    };\n  }\n};\nfunction pushOrConcat(base, toPush) {\n  if (toPush) {\n    if (isArray(toPush)) {\n      Array.prototype.push.apply(base, toPush);\n    } else {\n      base.push(toPush);\n    }\n  }\n  return base;\n}\nfunction splitNewlines(str) {\n  if ((typeof str === 'string' || str instanceof String) && str.indexOf('\\n') > -1) {\n    return str.split('\\n');\n  }\n  return str;\n}\nfunction createTooltipItem(chart, item) {\n  const {element, datasetIndex, index} = item;\n  const controller = chart.getDatasetMeta(datasetIndex).controller;\n  const {label, value} = controller.getLabelAndValue(index);\n  return {\n    chart,\n    label,\n    parsed: controller.getParsed(index),\n    raw: chart.data.datasets[datasetIndex].data[index],\n    formattedValue: value,\n    dataset: controller.getDataset(),\n    dataIndex: index,\n    datasetIndex,\n    element\n  };\n}\nfunction getTooltipSize(tooltip, options) {\n  const ctx = tooltip._chart.ctx;\n  const {body, footer, title} = tooltip;\n  const {boxWidth, boxHeight} = options;\n  const bodyFont = toFont(options.bodyFont);\n  const titleFont = toFont(options.titleFont);\n  const footerFont = toFont(options.footerFont);\n  const titleLineCount = title.length;\n  const footerLineCount = footer.length;\n  const bodyLineItemCount = body.length;\n  const padding = toPadding(options.padding);\n  let height = padding.height;\n  let width = 0;\n  let combinedBodyLength = body.reduce((count, bodyItem) => count + bodyItem.before.length + bodyItem.lines.length + bodyItem.after.length, 0);\n  combinedBodyLength += tooltip.beforeBody.length + tooltip.afterBody.length;\n  if (titleLineCount) {\n    height += titleLineCount * titleFont.lineHeight\n\t\t\t+ (titleLineCount - 1) * options.titleSpacing\n\t\t\t+ options.titleMarginBottom;\n  }\n  if (combinedBodyLength) {\n    const bodyLineHeight = options.displayColors ? Math.max(boxHeight, bodyFont.lineHeight) : bodyFont.lineHeight;\n    height += bodyLineItemCount * bodyLineHeight\n\t\t\t+ (combinedBodyLength - bodyLineItemCount) * bodyFont.lineHeight\n\t\t\t+ (combinedBodyLength - 1) * options.bodySpacing;\n  }\n  if (footerLineCount) {\n    height += options.footerMarginTop\n\t\t\t+ footerLineCount * footerFont.lineHeight\n\t\t\t+ (footerLineCount - 1) * options.footerSpacing;\n  }\n  let widthPadding = 0;\n  const maxLineWidth = function(line) {\n    width = Math.max(width, ctx.measureText(line).width + widthPadding);\n  };\n  ctx.save();\n  ctx.font = titleFont.string;\n  each(tooltip.title, maxLineWidth);\n  ctx.font = bodyFont.string;\n  each(tooltip.beforeBody.concat(tooltip.afterBody), maxLineWidth);\n  widthPadding = options.displayColors ? (boxWidth + 2) : 0;\n  each(body, (bodyItem) => {\n    each(bodyItem.before, maxLineWidth);\n    each(bodyItem.lines, maxLineWidth);\n    each(bodyItem.after, maxLineWidth);\n  });\n  widthPadding = 0;\n  ctx.font = footerFont.string;\n  each(tooltip.footer, maxLineWidth);\n  ctx.restore();\n  width += padding.width;\n  return {width, height};\n}\nfunction determineYAlign(chart, size) {\n  const {y, height} = size;\n  if (y < height / 2) {\n    return 'top';\n  } else if (y > (chart.height - height / 2)) {\n    return 'bottom';\n  }\n  return 'center';\n}\nfunction doesNotFitWithAlign(xAlign, chart, options, size) {\n  const {x, width} = size;\n  const caret = options.caretSize + options.caretPadding;\n  if (xAlign === 'left' && x + width + caret > chart.width) {\n    return true;\n  }\n  if (xAlign === 'right' && x - width - caret < 0) {\n    return true;\n  }\n}\nfunction determineXAlign(chart, options, size, yAlign) {\n  const {x, width} = size;\n  const {width: chartWidth, chartArea: {left, right}} = chart;\n  let xAlign = 'center';\n  if (yAlign === 'center') {\n    xAlign = x <= (left + right) / 2 ? 'left' : 'right';\n  } else if (x <= width / 2) {\n    xAlign = 'left';\n  } else if (x >= chartWidth - width / 2) {\n    xAlign = 'right';\n  }\n  if (doesNotFitWithAlign(xAlign, chart, options, size)) {\n    xAlign = 'center';\n  }\n  return xAlign;\n}\nfunction determineAlignment(chart, options, size) {\n  const yAlign = options.yAlign || determineYAlign(chart, size);\n  return {\n    xAlign: options.xAlign || determineXAlign(chart, options, size, yAlign),\n    yAlign\n  };\n}\nfunction alignX(size, xAlign) {\n  let {x, width} = size;\n  if (xAlign === 'right') {\n    x -= width;\n  } else if (xAlign === 'center') {\n    x -= (width / 2);\n  }\n  return x;\n}\nfunction alignY(size, yAlign, paddingAndSize) {\n  let {y, height} = size;\n  if (yAlign === 'top') {\n    y += paddingAndSize;\n  } else if (yAlign === 'bottom') {\n    y -= height + paddingAndSize;\n  } else {\n    y -= (height / 2);\n  }\n  return y;\n}\nfunction getBackgroundPoint(options, size, alignment, chart) {\n  const {caretSize, caretPadding, cornerRadius} = options;\n  const {xAlign, yAlign} = alignment;\n  const paddingAndSize = caretSize + caretPadding;\n  const radiusAndPadding = cornerRadius + caretPadding;\n  let x = alignX(size, xAlign);\n  const y = alignY(size, yAlign, paddingAndSize);\n  if (yAlign === 'center') {\n    if (xAlign === 'left') {\n      x += paddingAndSize;\n    } else if (xAlign === 'right') {\n      x -= paddingAndSize;\n    }\n  } else if (xAlign === 'left') {\n    x -= radiusAndPadding;\n  } else if (xAlign === 'right') {\n    x += radiusAndPadding;\n  }\n  return {\n    x: _limitValue(x, 0, chart.width - size.width),\n    y: _limitValue(y, 0, chart.height - size.height)\n  };\n}\nfunction getAlignedX(tooltip, align, options) {\n  const padding = toPadding(options.padding);\n  return align === 'center'\n    ? tooltip.x + tooltip.width / 2\n    : align === 'right'\n      ? tooltip.x + tooltip.width - padding.right\n      : tooltip.x + padding.left;\n}\nfunction getBeforeAfterBodyLines(callback) {\n  return pushOrConcat([], splitNewlines(callback));\n}\nfunction createTooltipContext(parent, tooltip, tooltipItems) {\n  return Object.assign(Object.create(parent), {\n    tooltip,\n    tooltipItems,\n    type: 'tooltip'\n  });\n}\nfunction overrideCallbacks(callbacks, context) {\n  const override = context && context.dataset && context.dataset.tooltip && context.dataset.tooltip.callbacks;\n  return override ? callbacks.override(override) : callbacks;\n}\nclass Tooltip extends Element {\n  constructor(config) {\n    super();\n    this.opacity = 0;\n    this._active = [];\n    this._chart = config._chart;\n    this._eventPosition = undefined;\n    this._size = undefined;\n    this._cachedAnimations = undefined;\n    this._tooltipItems = [];\n    this.$animations = undefined;\n    this.$context = undefined;\n    this.options = config.options;\n    this.dataPoints = undefined;\n    this.title = undefined;\n    this.beforeBody = undefined;\n    this.body = undefined;\n    this.afterBody = undefined;\n    this.footer = undefined;\n    this.xAlign = undefined;\n    this.yAlign = undefined;\n    this.x = undefined;\n    this.y = undefined;\n    this.height = undefined;\n    this.width = undefined;\n    this.caretX = undefined;\n    this.caretY = undefined;\n    this.labelColors = undefined;\n    this.labelPointStyles = undefined;\n    this.labelTextColors = undefined;\n  }\n  initialize(options) {\n    this.options = options;\n    this._cachedAnimations = undefined;\n    this.$context = undefined;\n  }\n  _resolveAnimations() {\n    const me = this;\n    const cached = me._cachedAnimations;\n    if (cached) {\n      return cached;\n    }\n    const chart = me._chart;\n    const options = me.options.setContext(me.getContext());\n    const opts = options.enabled && chart.options.animation && options.animations;\n    const animations = new Animations(me._chart, opts);\n    if (opts._cacheable) {\n      me._cachedAnimations = Object.freeze(animations);\n    }\n    return animations;\n  }\n  getContext() {\n    const me = this;\n    return me.$context ||\n\t\t\t(me.$context = createTooltipContext(me._chart.getContext(), me, me._tooltipItems));\n  }\n  getTitle(context, options) {\n    const me = this;\n    const {callbacks} = options;\n    const beforeTitle = callbacks.beforeTitle.apply(me, [context]);\n    const title = callbacks.title.apply(me, [context]);\n    const afterTitle = callbacks.afterTitle.apply(me, [context]);\n    let lines = [];\n    lines = pushOrConcat(lines, splitNewlines(beforeTitle));\n    lines = pushOrConcat(lines, splitNewlines(title));\n    lines = pushOrConcat(lines, splitNewlines(afterTitle));\n    return lines;\n  }\n  getBeforeBody(tooltipItems, options) {\n    return getBeforeAfterBodyLines(options.callbacks.beforeBody.apply(this, [tooltipItems]));\n  }\n  getBody(tooltipItems, options) {\n    const me = this;\n    const {callbacks} = options;\n    const bodyItems = [];\n    each(tooltipItems, (context) => {\n      const bodyItem = {\n        before: [],\n        lines: [],\n        after: []\n      };\n      const scoped = overrideCallbacks(callbacks, context);\n      pushOrConcat(bodyItem.before, splitNewlines(scoped.beforeLabel.call(me, context)));\n      pushOrConcat(bodyItem.lines, scoped.label.call(me, context));\n      pushOrConcat(bodyItem.after, splitNewlines(scoped.afterLabel.call(me, context)));\n      bodyItems.push(bodyItem);\n    });\n    return bodyItems;\n  }\n  getAfterBody(tooltipItems, options) {\n    return getBeforeAfterBodyLines(options.callbacks.afterBody.apply(this, [tooltipItems]));\n  }\n  getFooter(tooltipItems, options) {\n    const me = this;\n    const {callbacks} = options;\n    const beforeFooter = callbacks.beforeFooter.apply(me, [tooltipItems]);\n    const footer = callbacks.footer.apply(me, [tooltipItems]);\n    const afterFooter = callbacks.afterFooter.apply(me, [tooltipItems]);\n    let lines = [];\n    lines = pushOrConcat(lines, splitNewlines(beforeFooter));\n    lines = pushOrConcat(lines, splitNewlines(footer));\n    lines = pushOrConcat(lines, splitNewlines(afterFooter));\n    return lines;\n  }\n  _createItems(options) {\n    const me = this;\n    const active = me._active;\n    const data = me._chart.data;\n    const labelColors = [];\n    const labelPointStyles = [];\n    const labelTextColors = [];\n    let tooltipItems = [];\n    let i, len;\n    for (i = 0, len = active.length; i < len; ++i) {\n      tooltipItems.push(createTooltipItem(me._chart, active[i]));\n    }\n    if (options.filter) {\n      tooltipItems = tooltipItems.filter((element, index, array) => options.filter(element, index, array, data));\n    }\n    if (options.itemSort) {\n      tooltipItems = tooltipItems.sort((a, b) => options.itemSort(a, b, data));\n    }\n    each(tooltipItems, (context) => {\n      const scoped = overrideCallbacks(options.callbacks, context);\n      labelColors.push(scoped.labelColor.call(me, context));\n      labelPointStyles.push(scoped.labelPointStyle.call(me, context));\n      labelTextColors.push(scoped.labelTextColor.call(me, context));\n    });\n    me.labelColors = labelColors;\n    me.labelPointStyles = labelPointStyles;\n    me.labelTextColors = labelTextColors;\n    me.dataPoints = tooltipItems;\n    return tooltipItems;\n  }\n  update(changed, replay) {\n    const me = this;\n    const options = me.options.setContext(me.getContext());\n    const active = me._active;\n    let properties;\n    let tooltipItems = [];\n    if (!active.length) {\n      if (me.opacity !== 0) {\n        properties = {\n          opacity: 0\n        };\n      }\n    } else {\n      const position = positioners[options.position].call(me, active, me._eventPosition);\n      tooltipItems = me._createItems(options);\n      me.title = me.getTitle(tooltipItems, options);\n      me.beforeBody = me.getBeforeBody(tooltipItems, options);\n      me.body = me.getBody(tooltipItems, options);\n      me.afterBody = me.getAfterBody(tooltipItems, options);\n      me.footer = me.getFooter(tooltipItems, options);\n      const size = me._size = getTooltipSize(me, options);\n      const positionAndSize = Object.assign({}, position, size);\n      const alignment = determineAlignment(me._chart, options, positionAndSize);\n      const backgroundPoint = getBackgroundPoint(options, positionAndSize, alignment, me._chart);\n      me.xAlign = alignment.xAlign;\n      me.yAlign = alignment.yAlign;\n      properties = {\n        opacity: 1,\n        x: backgroundPoint.x,\n        y: backgroundPoint.y,\n        width: size.width,\n        height: size.height,\n        caretX: position.x,\n        caretY: position.y\n      };\n    }\n    me._tooltipItems = tooltipItems;\n    me.$context = undefined;\n    if (properties) {\n      me._resolveAnimations().update(me, properties);\n    }\n    if (changed && options.external) {\n      options.external.call(me, {chart: me._chart, tooltip: me, replay});\n    }\n  }\n  drawCaret(tooltipPoint, ctx, size, options) {\n    const caretPosition = this.getCaretPosition(tooltipPoint, size, options);\n    ctx.lineTo(caretPosition.x1, caretPosition.y1);\n    ctx.lineTo(caretPosition.x2, caretPosition.y2);\n    ctx.lineTo(caretPosition.x3, caretPosition.y3);\n  }\n  getCaretPosition(tooltipPoint, size, options) {\n    const {xAlign, yAlign} = this;\n    const {cornerRadius, caretSize} = options;\n    const {x: ptX, y: ptY} = tooltipPoint;\n    const {width, height} = size;\n    let x1, x2, x3, y1, y2, y3;\n    if (yAlign === 'center') {\n      y2 = ptY + (height / 2);\n      if (xAlign === 'left') {\n        x1 = ptX;\n        x2 = x1 - caretSize;\n        y1 = y2 + caretSize;\n        y3 = y2 - caretSize;\n      } else {\n        x1 = ptX + width;\n        x2 = x1 + caretSize;\n        y1 = y2 - caretSize;\n        y3 = y2 + caretSize;\n      }\n      x3 = x1;\n    } else {\n      if (xAlign === 'left') {\n        x2 = ptX + cornerRadius + (caretSize);\n      } else if (xAlign === 'right') {\n        x2 = ptX + width - cornerRadius - caretSize;\n      } else {\n        x2 = this.caretX;\n      }\n      if (yAlign === 'top') {\n        y1 = ptY;\n        y2 = y1 - caretSize;\n        x1 = x2 - caretSize;\n        x3 = x2 + caretSize;\n      } else {\n        y1 = ptY + height;\n        y2 = y1 + caretSize;\n        x1 = x2 + caretSize;\n        x3 = x2 - caretSize;\n      }\n      y3 = y1;\n    }\n    return {x1, x2, x3, y1, y2, y3};\n  }\n  drawTitle(pt, ctx, options) {\n    const me = this;\n    const title = me.title;\n    const length = title.length;\n    let titleFont, titleSpacing, i;\n    if (length) {\n      const rtlHelper = getRtlAdapter(options.rtl, me.x, me.width);\n      pt.x = getAlignedX(me, options.titleAlign, options);\n      ctx.textAlign = rtlHelper.textAlign(options.titleAlign);\n      ctx.textBaseline = 'middle';\n      titleFont = toFont(options.titleFont);\n      titleSpacing = options.titleSpacing;\n      ctx.fillStyle = options.titleColor;\n      ctx.font = titleFont.string;\n      for (i = 0; i < length; ++i) {\n        ctx.fillText(title[i], rtlHelper.x(pt.x), pt.y + titleFont.lineHeight / 2);\n        pt.y += titleFont.lineHeight + titleSpacing;\n        if (i + 1 === length) {\n          pt.y += options.titleMarginBottom - titleSpacing;\n        }\n      }\n    }\n  }\n  _drawColorBox(ctx, pt, i, rtlHelper, options) {\n    const me = this;\n    const labelColors = me.labelColors[i];\n    const labelPointStyle = me.labelPointStyles[i];\n    const {boxHeight, boxWidth} = options;\n    const bodyFont = toFont(options.bodyFont);\n    const colorX = getAlignedX(me, 'left', options);\n    const rtlColorX = rtlHelper.x(colorX);\n    const yOffSet = boxHeight < bodyFont.lineHeight ? (bodyFont.lineHeight - boxHeight) / 2 : 0;\n    const colorY = pt.y + yOffSet;\n    if (options.usePointStyle) {\n      const drawOptions = {\n        radius: Math.min(boxWidth, boxHeight) / 2,\n        pointStyle: labelPointStyle.pointStyle,\n        rotation: labelPointStyle.rotation,\n        borderWidth: 1\n      };\n      const centerX = rtlHelper.leftForLtr(rtlColorX, boxWidth) + boxWidth / 2;\n      const centerY = colorY + boxHeight / 2;\n      ctx.strokeStyle = options.multiKeyBackground;\n      ctx.fillStyle = options.multiKeyBackground;\n      drawPoint(ctx, drawOptions, centerX, centerY);\n      ctx.strokeStyle = labelColors.borderColor;\n      ctx.fillStyle = labelColors.backgroundColor;\n      drawPoint(ctx, drawOptions, centerX, centerY);\n    } else {\n      ctx.lineWidth = labelColors.borderWidth || 1;\n      ctx.strokeStyle = labelColors.borderColor;\n      ctx.setLineDash(labelColors.borderDash || []);\n      ctx.lineDashOffset = labelColors.borderDashOffset || 0;\n      const outerX = rtlHelper.leftForLtr(rtlColorX, boxWidth);\n      const innerX = rtlHelper.leftForLtr(rtlHelper.xPlus(rtlColorX, 1), boxWidth - 2);\n      const borderRadius = toTRBLCorners(labelColors.borderRadius);\n      if (Object.values(borderRadius).some(v => v !== 0)) {\n        ctx.beginPath();\n        ctx.fillStyle = options.multiKeyBackground;\n        addRoundedRectPath(ctx, {\n          x: outerX,\n          y: colorY,\n          w: boxWidth,\n          h: boxHeight,\n          radius: borderRadius,\n        });\n        ctx.fill();\n        ctx.stroke();\n        ctx.fillStyle = labelColors.backgroundColor;\n        ctx.beginPath();\n        addRoundedRectPath(ctx, {\n          x: innerX,\n          y: colorY + 1,\n          w: boxWidth - 2,\n          h: boxHeight - 2,\n          radius: borderRadius,\n        });\n        ctx.fill();\n      } else {\n        ctx.fillStyle = options.multiKeyBackground;\n        ctx.fillRect(outerX, colorY, boxWidth, boxHeight);\n        ctx.strokeRect(outerX, colorY, boxWidth, boxHeight);\n        ctx.fillStyle = labelColors.backgroundColor;\n        ctx.fillRect(innerX, colorY + 1, boxWidth - 2, boxHeight - 2);\n      }\n    }\n    ctx.fillStyle = me.labelTextColors[i];\n  }\n  drawBody(pt, ctx, options) {\n    const me = this;\n    const {body} = me;\n    const {bodySpacing, bodyAlign, displayColors, boxHeight, boxWidth} = options;\n    const bodyFont = toFont(options.bodyFont);\n    let bodyLineHeight = bodyFont.lineHeight;\n    let xLinePadding = 0;\n    const rtlHelper = getRtlAdapter(options.rtl, me.x, me.width);\n    const fillLineOfText = function(line) {\n      ctx.fillText(line, rtlHelper.x(pt.x + xLinePadding), pt.y + bodyLineHeight / 2);\n      pt.y += bodyLineHeight + bodySpacing;\n    };\n    const bodyAlignForCalculation = rtlHelper.textAlign(bodyAlign);\n    let bodyItem, textColor, lines, i, j, ilen, jlen;\n    ctx.textAlign = bodyAlign;\n    ctx.textBaseline = 'middle';\n    ctx.font = bodyFont.string;\n    pt.x = getAlignedX(me, bodyAlignForCalculation, options);\n    ctx.fillStyle = options.bodyColor;\n    each(me.beforeBody, fillLineOfText);\n    xLinePadding = displayColors && bodyAlignForCalculation !== 'right'\n      ? bodyAlign === 'center' ? (boxWidth / 2 + 1) : (boxWidth + 2)\n      : 0;\n    for (i = 0, ilen = body.length; i < ilen; ++i) {\n      bodyItem = body[i];\n      textColor = me.labelTextColors[i];\n      ctx.fillStyle = textColor;\n      each(bodyItem.before, fillLineOfText);\n      lines = bodyItem.lines;\n      if (displayColors && lines.length) {\n        me._drawColorBox(ctx, pt, i, rtlHelper, options);\n        bodyLineHeight = Math.max(bodyFont.lineHeight, boxHeight);\n      }\n      for (j = 0, jlen = lines.length; j < jlen; ++j) {\n        fillLineOfText(lines[j]);\n        bodyLineHeight = bodyFont.lineHeight;\n      }\n      each(bodyItem.after, fillLineOfText);\n    }\n    xLinePadding = 0;\n    bodyLineHeight = bodyFont.lineHeight;\n    each(me.afterBody, fillLineOfText);\n    pt.y -= bodySpacing;\n  }\n  drawFooter(pt, ctx, options) {\n    const me = this;\n    const footer = me.footer;\n    const length = footer.length;\n    let footerFont, i;\n    if (length) {\n      const rtlHelper = getRtlAdapter(options.rtl, me.x, me.width);\n      pt.x = getAlignedX(me, options.footerAlign, options);\n      pt.y += options.footerMarginTop;\n      ctx.textAlign = rtlHelper.textAlign(options.footerAlign);\n      ctx.textBaseline = 'middle';\n      footerFont = toFont(options.footerFont);\n      ctx.fillStyle = options.footerColor;\n      ctx.font = footerFont.string;\n      for (i = 0; i < length; ++i) {\n        ctx.fillText(footer[i], rtlHelper.x(pt.x), pt.y + footerFont.lineHeight / 2);\n        pt.y += footerFont.lineHeight + options.footerSpacing;\n      }\n    }\n  }\n  drawBackground(pt, ctx, tooltipSize, options) {\n    const {xAlign, yAlign} = this;\n    const {x, y} = pt;\n    const {width, height} = tooltipSize;\n    const radius = options.cornerRadius;\n    ctx.fillStyle = options.backgroundColor;\n    ctx.strokeStyle = options.borderColor;\n    ctx.lineWidth = options.borderWidth;\n    ctx.beginPath();\n    ctx.moveTo(x + radius, y);\n    if (yAlign === 'top') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + width - radius, y);\n    ctx.quadraticCurveTo(x + width, y, x + width, y + radius);\n    if (yAlign === 'center' && xAlign === 'right') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + width, y + height - radius);\n    ctx.quadraticCurveTo(x + width, y + height, x + width - radius, y + height);\n    if (yAlign === 'bottom') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + radius, y + height);\n    ctx.quadraticCurveTo(x, y + height, x, y + height - radius);\n    if (yAlign === 'center' && xAlign === 'left') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x, y + radius);\n    ctx.quadraticCurveTo(x, y, x + radius, y);\n    ctx.closePath();\n    ctx.fill();\n    if (options.borderWidth > 0) {\n      ctx.stroke();\n    }\n  }\n  _updateAnimationTarget(options) {\n    const me = this;\n    const chart = me._chart;\n    const anims = me.$animations;\n    const animX = anims && anims.x;\n    const animY = anims && anims.y;\n    if (animX || animY) {\n      const position = positioners[options.position].call(me, me._active, me._eventPosition);\n      if (!position) {\n        return;\n      }\n      const size = me._size = getTooltipSize(me, options);\n      const positionAndSize = Object.assign({}, position, me._size);\n      const alignment = determineAlignment(chart, options, positionAndSize);\n      const point = getBackgroundPoint(options, positionAndSize, alignment, chart);\n      if (animX._to !== point.x || animY._to !== point.y) {\n        me.xAlign = alignment.xAlign;\n        me.yAlign = alignment.yAlign;\n        me.width = size.width;\n        me.height = size.height;\n        me.caretX = position.x;\n        me.caretY = position.y;\n        me._resolveAnimations().update(me, point);\n      }\n    }\n  }\n  draw(ctx) {\n    const me = this;\n    const options = me.options.setContext(me.getContext());\n    let opacity = me.opacity;\n    if (!opacity) {\n      return;\n    }\n    me._updateAnimationTarget(options);\n    const tooltipSize = {\n      width: me.width,\n      height: me.height\n    };\n    const pt = {\n      x: me.x,\n      y: me.y\n    };\n    opacity = Math.abs(opacity) < 1e-3 ? 0 : opacity;\n    const padding = toPadding(options.padding);\n    const hasTooltipContent = me.title.length || me.beforeBody.length || me.body.length || me.afterBody.length || me.footer.length;\n    if (options.enabled && hasTooltipContent) {\n      ctx.save();\n      ctx.globalAlpha = opacity;\n      me.drawBackground(pt, ctx, tooltipSize, options);\n      overrideTextDirection(ctx, options.textDirection);\n      pt.y += padding.top;\n      me.drawTitle(pt, ctx, options);\n      me.drawBody(pt, ctx, options);\n      me.drawFooter(pt, ctx, options);\n      restoreTextDirection(ctx, options.textDirection);\n      ctx.restore();\n    }\n  }\n  getActiveElements() {\n    return this._active || [];\n  }\n  setActiveElements(activeElements, eventPosition) {\n    const me = this;\n    const lastActive = me._active;\n    const active = activeElements.map(({datasetIndex, index}) => {\n      const meta = me._chart.getDatasetMeta(datasetIndex);\n      if (!meta) {\n        throw new Error('Cannot find a dataset at index ' + datasetIndex);\n      }\n      return {\n        datasetIndex,\n        element: meta.data[index],\n        index,\n      };\n    });\n    const changed = !_elementsEqual(lastActive, active);\n    const positionChanged = me._positionChanged(active, eventPosition);\n    if (changed || positionChanged) {\n      me._active = active;\n      me._eventPosition = eventPosition;\n      me.update(true);\n    }\n  }\n  handleEvent(e, replay) {\n    const me = this;\n    const options = me.options;\n    const lastActive = me._active || [];\n    let changed = false;\n    let active = [];\n    if (e.type !== 'mouseout') {\n      active = me._chart.getElementsAtEventForMode(e, options.mode, options, replay);\n      if (options.reverse) {\n        active.reverse();\n      }\n    }\n    const positionChanged = me._positionChanged(active, e);\n    changed = replay || !_elementsEqual(active, lastActive) || positionChanged;\n    if (changed) {\n      me._active = active;\n      if (options.enabled || options.external) {\n        me._eventPosition = {\n          x: e.x,\n          y: e.y\n        };\n        me.update(true, replay);\n      }\n    }\n    return changed;\n  }\n  _positionChanged(active, e) {\n    const {caretX, caretY, options} = this;\n    const position = positioners[options.position].call(this, active, e);\n    return position !== false && (caretX !== position.x || caretY !== position.y);\n  }\n}\nTooltip.positioners = positioners;\nvar plugin_tooltip = {\n  id: 'tooltip',\n  _element: Tooltip,\n  positioners,\n  afterInit(chart, _args, options) {\n    if (options) {\n      chart.tooltip = new Tooltip({_chart: chart, options});\n    }\n  },\n  beforeUpdate(chart, _args, options) {\n    if (chart.tooltip) {\n      chart.tooltip.initialize(options);\n    }\n  },\n  reset(chart, _args, options) {\n    if (chart.tooltip) {\n      chart.tooltip.initialize(options);\n    }\n  },\n  afterDraw(chart) {\n    const tooltip = chart.tooltip;\n    const args = {\n      tooltip\n    };\n    if (chart.notifyPlugins('beforeTooltipDraw', args) === false) {\n      return;\n    }\n    if (tooltip) {\n      tooltip.draw(chart.ctx);\n    }\n    chart.notifyPlugins('afterTooltipDraw', args);\n  },\n  afterEvent(chart, args) {\n    if (chart.tooltip) {\n      const useFinalPosition = args.replay;\n      if (chart.tooltip.handleEvent(args.event, useFinalPosition)) {\n        args.changed = true;\n      }\n    }\n  },\n  defaults: {\n    enabled: true,\n    external: null,\n    position: 'average',\n    backgroundColor: 'rgba(0,0,0,0.8)',\n    titleColor: '#fff',\n    titleFont: {\n      weight: 'bold',\n    },\n    titleSpacing: 2,\n    titleMarginBottom: 6,\n    titleAlign: 'left',\n    bodyColor: '#fff',\n    bodySpacing: 2,\n    bodyFont: {\n    },\n    bodyAlign: 'left',\n    footerColor: '#fff',\n    footerSpacing: 2,\n    footerMarginTop: 6,\n    footerFont: {\n      weight: 'bold',\n    },\n    footerAlign: 'left',\n    padding: 6,\n    caretPadding: 2,\n    caretSize: 5,\n    cornerRadius: 6,\n    boxHeight: (ctx, opts) => opts.bodyFont.size,\n    boxWidth: (ctx, opts) => opts.bodyFont.size,\n    multiKeyBackground: '#fff',\n    displayColors: true,\n    borderColor: 'rgba(0,0,0,0)',\n    borderWidth: 0,\n    animation: {\n      duration: 400,\n      easing: 'easeOutQuart',\n    },\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['x', 'y', 'width', 'height', 'caretX', 'caretY'],\n      },\n      opacity: {\n        easing: 'linear',\n        duration: 200\n      }\n    },\n    callbacks: {\n      beforeTitle: noop,\n      title(tooltipItems) {\n        if (tooltipItems.length > 0) {\n          const item = tooltipItems[0];\n          const labels = item.chart.data.labels;\n          const labelCount = labels ? labels.length : 0;\n          if (this && this.options && this.options.mode === 'dataset') {\n            return item.dataset.label || '';\n          } else if (item.label) {\n            return item.label;\n          } else if (labelCount > 0 && item.dataIndex < labelCount) {\n            return labels[item.dataIndex];\n          }\n        }\n        return '';\n      },\n      afterTitle: noop,\n      beforeBody: noop,\n      beforeLabel: noop,\n      label(tooltipItem) {\n        if (this && this.options && this.options.mode === 'dataset') {\n          return tooltipItem.label + ': ' + tooltipItem.formattedValue || tooltipItem.formattedValue;\n        }\n        let label = tooltipItem.dataset.label || '';\n        if (label) {\n          label += ': ';\n        }\n        const value = tooltipItem.formattedValue;\n        if (!isNullOrUndef(value)) {\n          label += value;\n        }\n        return label;\n      },\n      labelColor(tooltipItem) {\n        const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n        const options = meta.controller.getStyle(tooltipItem.dataIndex);\n        return {\n          borderColor: options.borderColor,\n          backgroundColor: options.backgroundColor,\n          borderWidth: options.borderWidth,\n          borderDash: options.borderDash,\n          borderDashOffset: options.borderDashOffset,\n          borderRadius: 0,\n        };\n      },\n      labelTextColor() {\n        return this.options.bodyColor;\n      },\n      labelPointStyle(tooltipItem) {\n        const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n        const options = meta.controller.getStyle(tooltipItem.dataIndex);\n        return {\n          pointStyle: options.pointStyle,\n          rotation: options.rotation,\n        };\n      },\n      afterLabel: noop,\n      afterBody: noop,\n      beforeFooter: noop,\n      footer: noop,\n      afterFooter: noop\n    }\n  },\n  defaultRoutes: {\n    bodyFont: 'font',\n    footerFont: 'font',\n    titleFont: 'font'\n  },\n  descriptors: {\n    _scriptable: (name) => name !== 'filter' && name !== 'itemSort' && name !== 'external',\n    _indexable: false,\n    callbacks: {\n      _scriptable: false,\n      _indexable: false,\n    },\n    animation: {\n      _fallback: false\n    },\n    animations: {\n      _fallback: 'animation'\n    }\n  },\n  additionalOptionScopes: ['interaction']\n};\n\nvar plugins = /*#__PURE__*/Object.freeze({\n__proto__: null,\nDecimation: plugin_decimation,\nFiller: plugin_filler,\nLegend: plugin_legend,\nTitle: plugin_title,\nTooltip: plugin_tooltip\n});\n\nconst addIfString = (labels, raw, index) => typeof raw === 'string'\n  ? labels.push(raw) - 1\n  : isNaN(raw) ? null : index;\nfunction findOrAddLabel(labels, raw, index) {\n  const first = labels.indexOf(raw);\n  if (first === -1) {\n    return addIfString(labels, raw, index);\n  }\n  const last = labels.lastIndexOf(raw);\n  return first !== last ? index : first;\n}\nconst validIndex = (index, max) => index === null ? null : _limitValue(Math.round(index), 0, max);\nclass CategoryScale extends Scale {\n  constructor(cfg) {\n    super(cfg);\n    this._startValue = undefined;\n    this._valueRange = 0;\n  }\n  parse(raw, index) {\n    if (isNullOrUndef(raw)) {\n      return null;\n    }\n    const labels = this.getLabels();\n    index = isFinite(index) && labels[index] === raw ? index\n      : findOrAddLabel(labels, raw, valueOrDefault(index, raw));\n    return validIndex(index, labels.length - 1);\n  }\n  determineDataLimits() {\n    const me = this;\n    const {minDefined, maxDefined} = me.getUserBounds();\n    let {min, max} = me.getMinMax(true);\n    if (me.options.bounds === 'ticks') {\n      if (!minDefined) {\n        min = 0;\n      }\n      if (!maxDefined) {\n        max = me.getLabels().length - 1;\n      }\n    }\n    me.min = min;\n    me.max = max;\n  }\n  buildTicks() {\n    const me = this;\n    const min = me.min;\n    const max = me.max;\n    const offset = me.options.offset;\n    const ticks = [];\n    let labels = me.getLabels();\n    labels = (min === 0 && max === labels.length - 1) ? labels : labels.slice(min, max + 1);\n    me._valueRange = Math.max(labels.length - (offset ? 0 : 1), 1);\n    me._startValue = me.min - (offset ? 0.5 : 0);\n    for (let value = min; value <= max; value++) {\n      ticks.push({value});\n    }\n    return ticks;\n  }\n  getLabelForValue(value) {\n    const me = this;\n    const labels = me.getLabels();\n    if (value >= 0 && value < labels.length) {\n      return labels[value];\n    }\n    return value;\n  }\n  configure() {\n    const me = this;\n    super.configure();\n    if (!me.isHorizontal()) {\n      me._reversePixels = !me._reversePixels;\n    }\n  }\n  getPixelForValue(value) {\n    const me = this;\n    if (typeof value !== 'number') {\n      value = me.parse(value);\n    }\n    return value === null ? NaN : me.getPixelForDecimal((value - me._startValue) / me._valueRange);\n  }\n  getPixelForTick(index) {\n    const me = this;\n    const ticks = me.ticks;\n    if (index < 0 || index > ticks.length - 1) {\n      return null;\n    }\n    return me.getPixelForValue(ticks[index].value);\n  }\n  getValueForPixel(pixel) {\n    const me = this;\n    return Math.round(me._startValue + me.getDecimalForPixel(pixel) * me._valueRange);\n  }\n  getBasePixel() {\n    return this.bottom;\n  }\n}\nCategoryScale.id = 'category';\nCategoryScale.defaults = {\n  ticks: {\n    callback: CategoryScale.prototype.getLabelForValue\n  }\n};\n\nfunction generateTicks$1(generationOptions, dataRange) {\n  const ticks = [];\n  const MIN_SPACING = 1e-14;\n  const {bounds, step, min, max, precision, count, maxTicks, maxDigits, includeBounds} = generationOptions;\n  const unit = step || 1;\n  const maxSpaces = maxTicks - 1;\n  const {min: rmin, max: rmax} = dataRange;\n  const minDefined = !isNullOrUndef(min);\n  const maxDefined = !isNullOrUndef(max);\n  const countDefined = !isNullOrUndef(count);\n  const minSpacing = (rmax - rmin) / (maxDigits + 1);\n  let spacing = niceNum((rmax - rmin) / maxSpaces / unit) * unit;\n  let factor, niceMin, niceMax, numSpaces;\n  if (spacing < MIN_SPACING && !minDefined && !maxDefined) {\n    return [{value: rmin}, {value: rmax}];\n  }\n  numSpaces = Math.ceil(rmax / spacing) - Math.floor(rmin / spacing);\n  if (numSpaces > maxSpaces) {\n    spacing = niceNum(numSpaces * spacing / maxSpaces / unit) * unit;\n  }\n  if (!isNullOrUndef(precision)) {\n    factor = Math.pow(10, precision);\n    spacing = Math.ceil(spacing * factor) / factor;\n  }\n  if (bounds === 'ticks') {\n    niceMin = Math.floor(rmin / spacing) * spacing;\n    niceMax = Math.ceil(rmax / spacing) * spacing;\n  } else {\n    niceMin = rmin;\n    niceMax = rmax;\n  }\n  if (minDefined && maxDefined && step && almostWhole((max - min) / step, spacing / 1000)) {\n    numSpaces = Math.min((max - min) / spacing, maxTicks);\n    spacing = (max - min) / numSpaces;\n    niceMin = min;\n    niceMax = max;\n  } else if (countDefined) {\n    niceMin = minDefined ? min : niceMin;\n    niceMax = maxDefined ? max : niceMax;\n    numSpaces = count - 1;\n    spacing = (niceMax - niceMin) / numSpaces;\n  } else {\n    numSpaces = (niceMax - niceMin) / spacing;\n    if (almostEquals(numSpaces, Math.round(numSpaces), spacing / 1000)) {\n      numSpaces = Math.round(numSpaces);\n    } else {\n      numSpaces = Math.ceil(numSpaces);\n    }\n  }\n  const decimalPlaces = Math.max(\n    _decimalPlaces(spacing),\n    _decimalPlaces(niceMin),\n  );\n  factor = Math.pow(10, isNullOrUndef(precision) ? decimalPlaces : precision);\n  niceMin = Math.round(niceMin * factor) / factor;\n  niceMax = Math.round(niceMax * factor) / factor;\n  let j = 0;\n  if (minDefined) {\n    if (includeBounds && niceMin !== min) {\n      ticks.push({value: min});\n      if (niceMin < min) {\n        j++;\n      }\n      if (almostEquals(Math.round((niceMin + j * spacing) * factor) / factor, min, relativeLabelSize(min, minSpacing, generationOptions))) {\n        j++;\n      }\n    } else if (niceMin < min) {\n      j++;\n    }\n  }\n  for (; j < numSpaces; ++j) {\n    ticks.push({value: Math.round((niceMin + j * spacing) * factor) / factor});\n  }\n  if (maxDefined && includeBounds && niceMax !== max) {\n    if (almostEquals(ticks[ticks.length - 1].value, max, relativeLabelSize(max, minSpacing, generationOptions))) {\n      ticks[ticks.length - 1].value = max;\n    } else {\n      ticks.push({value: max});\n    }\n  } else if (!maxDefined || niceMax === max) {\n    ticks.push({value: niceMax});\n  }\n  return ticks;\n}\nfunction relativeLabelSize(value, minSpacing, {horizontal, minRotation}) {\n  const rad = toRadians(minRotation);\n  const ratio = (horizontal ? Math.sin(rad) : Math.cos(rad)) || 0.001;\n  const length = 0.75 * minSpacing * ('' + value).length;\n  return Math.min(minSpacing / ratio, length);\n}\nclass LinearScaleBase extends Scale {\n  constructor(cfg) {\n    super(cfg);\n    this.start = undefined;\n    this.end = undefined;\n    this._startValue = undefined;\n    this._endValue = undefined;\n    this._valueRange = 0;\n  }\n  parse(raw, index) {\n    if (isNullOrUndef(raw)) {\n      return null;\n    }\n    if ((typeof raw === 'number' || raw instanceof Number) && !isFinite(+raw)) {\n      return null;\n    }\n    return +raw;\n  }\n  handleTickRangeOptions() {\n    const me = this;\n    const {beginAtZero} = me.options;\n    const {minDefined, maxDefined} = me.getUserBounds();\n    let {min, max} = me;\n    const setMin = v => (min = minDefined ? min : v);\n    const setMax = v => (max = maxDefined ? max : v);\n    if (beginAtZero) {\n      const minSign = sign(min);\n      const maxSign = sign(max);\n      if (minSign < 0 && maxSign < 0) {\n        setMax(0);\n      } else if (minSign > 0 && maxSign > 0) {\n        setMin(0);\n      }\n    }\n    if (min === max) {\n      setMax(max + 1);\n      if (!beginAtZero) {\n        setMin(min - 1);\n      }\n    }\n    me.min = min;\n    me.max = max;\n  }\n  getTickLimit() {\n    const me = this;\n    const tickOpts = me.options.ticks;\n    let {maxTicksLimit, stepSize} = tickOpts;\n    let maxTicks;\n    if (stepSize) {\n      maxTicks = Math.ceil(me.max / stepSize) - Math.floor(me.min / stepSize) + 1;\n    } else {\n      maxTicks = me.computeTickLimit();\n      maxTicksLimit = maxTicksLimit || 11;\n    }\n    if (maxTicksLimit) {\n      maxTicks = Math.min(maxTicksLimit, maxTicks);\n    }\n    return maxTicks;\n  }\n  computeTickLimit() {\n    return Number.POSITIVE_INFINITY;\n  }\n  buildTicks() {\n    const me = this;\n    const opts = me.options;\n    const tickOpts = opts.ticks;\n    let maxTicks = me.getTickLimit();\n    maxTicks = Math.max(2, maxTicks);\n    const numericGeneratorOptions = {\n      maxTicks,\n      bounds: opts.bounds,\n      min: opts.min,\n      max: opts.max,\n      precision: tickOpts.precision,\n      step: tickOpts.stepSize,\n      count: tickOpts.count,\n      maxDigits: me._maxDigits(),\n      horizontal: me.isHorizontal(),\n      minRotation: tickOpts.minRotation || 0,\n      includeBounds: tickOpts.includeBounds !== false\n    };\n    const dataRange = me._range || me;\n    const ticks = generateTicks$1(numericGeneratorOptions, dataRange);\n    if (opts.bounds === 'ticks') {\n      _setMinAndMaxByKey(ticks, me, 'value');\n    }\n    if (opts.reverse) {\n      ticks.reverse();\n      me.start = me.max;\n      me.end = me.min;\n    } else {\n      me.start = me.min;\n      me.end = me.max;\n    }\n    return ticks;\n  }\n  configure() {\n    const me = this;\n    const ticks = me.ticks;\n    let start = me.min;\n    let end = me.max;\n    super.configure();\n    if (me.options.offset && ticks.length) {\n      const offset = (end - start) / Math.max(ticks.length - 1, 1) / 2;\n      start -= offset;\n      end += offset;\n    }\n    me._startValue = start;\n    me._endValue = end;\n    me._valueRange = end - start;\n  }\n  getLabelForValue(value) {\n    return formatNumber(value, this.chart.options.locale);\n  }\n}\n\nclass LinearScale extends LinearScaleBase {\n  determineDataLimits() {\n    const me = this;\n    const {min, max} = me.getMinMax(true);\n    me.min = isNumberFinite(min) ? min : 0;\n    me.max = isNumberFinite(max) ? max : 1;\n    me.handleTickRangeOptions();\n  }\n  computeTickLimit() {\n    const me = this;\n    const horizontal = me.isHorizontal();\n    const length = horizontal ? me.width : me.height;\n    const minRotation = toRadians(me.options.ticks.minRotation);\n    const ratio = (horizontal ? Math.sin(minRotation) : Math.cos(minRotation)) || 0.001;\n    const tickFont = me._resolveTickFontOptions(0);\n    return Math.ceil(length / Math.min(40, tickFont.lineHeight / ratio));\n  }\n  getPixelForValue(value) {\n    return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n  }\n  getValueForPixel(pixel) {\n    return this._startValue + this.getDecimalForPixel(pixel) * this._valueRange;\n  }\n}\nLinearScale.id = 'linear';\nLinearScale.defaults = {\n  ticks: {\n    callback: Ticks.formatters.numeric\n  }\n};\n\nfunction isMajor(tickVal) {\n  const remain = tickVal / (Math.pow(10, Math.floor(log10(tickVal))));\n  return remain === 1;\n}\nfunction generateTicks(generationOptions, dataRange) {\n  const endExp = Math.floor(log10(dataRange.max));\n  const endSignificand = Math.ceil(dataRange.max / Math.pow(10, endExp));\n  const ticks = [];\n  let tickVal = finiteOrDefault(generationOptions.min, Math.pow(10, Math.floor(log10(dataRange.min))));\n  let exp = Math.floor(log10(tickVal));\n  let significand = Math.floor(tickVal / Math.pow(10, exp));\n  let precision = exp < 0 ? Math.pow(10, Math.abs(exp)) : 1;\n  do {\n    ticks.push({value: tickVal, major: isMajor(tickVal)});\n    ++significand;\n    if (significand === 10) {\n      significand = 1;\n      ++exp;\n      precision = exp >= 0 ? 1 : precision;\n    }\n    tickVal = Math.round(significand * Math.pow(10, exp) * precision) / precision;\n  } while (exp < endExp || (exp === endExp && significand < endSignificand));\n  const lastTick = finiteOrDefault(generationOptions.max, tickVal);\n  ticks.push({value: lastTick, major: isMajor(tickVal)});\n  return ticks;\n}\nclass LogarithmicScale extends Scale {\n  constructor(cfg) {\n    super(cfg);\n    this.start = undefined;\n    this.end = undefined;\n    this._startValue = undefined;\n    this._valueRange = 0;\n  }\n  parse(raw, index) {\n    const value = LinearScaleBase.prototype.parse.apply(this, [raw, index]);\n    if (value === 0) {\n      this._zero = true;\n      return undefined;\n    }\n    return isNumberFinite(value) && value > 0 ? value : null;\n  }\n  determineDataLimits() {\n    const me = this;\n    const {min, max} = me.getMinMax(true);\n    me.min = isNumberFinite(min) ? Math.max(0, min) : null;\n    me.max = isNumberFinite(max) ? Math.max(0, max) : null;\n    if (me.options.beginAtZero) {\n      me._zero = true;\n    }\n    me.handleTickRangeOptions();\n  }\n  handleTickRangeOptions() {\n    const me = this;\n    const {minDefined, maxDefined} = me.getUserBounds();\n    let min = me.min;\n    let max = me.max;\n    const setMin = v => (min = minDefined ? min : v);\n    const setMax = v => (max = maxDefined ? max : v);\n    const exp = (v, m) => Math.pow(10, Math.floor(log10(v)) + m);\n    if (min === max) {\n      if (min <= 0) {\n        setMin(1);\n        setMax(10);\n      } else {\n        setMin(exp(min, -1));\n        setMax(exp(max, +1));\n      }\n    }\n    if (min <= 0) {\n      setMin(exp(max, -1));\n    }\n    if (max <= 0) {\n      setMax(exp(min, +1));\n    }\n    if (me._zero && me.min !== me._suggestedMin && min === exp(me.min, 0)) {\n      setMin(exp(min, -1));\n    }\n    me.min = min;\n    me.max = max;\n  }\n  buildTicks() {\n    const me = this;\n    const opts = me.options;\n    const generationOptions = {\n      min: me._userMin,\n      max: me._userMax\n    };\n    const ticks = generateTicks(generationOptions, me);\n    if (opts.bounds === 'ticks') {\n      _setMinAndMaxByKey(ticks, me, 'value');\n    }\n    if (opts.reverse) {\n      ticks.reverse();\n      me.start = me.max;\n      me.end = me.min;\n    } else {\n      me.start = me.min;\n      me.end = me.max;\n    }\n    return ticks;\n  }\n  getLabelForValue(value) {\n    return value === undefined ? '0' : formatNumber(value, this.chart.options.locale);\n  }\n  configure() {\n    const me = this;\n    const start = me.min;\n    super.configure();\n    me._startValue = log10(start);\n    me._valueRange = log10(me.max) - log10(start);\n  }\n  getPixelForValue(value) {\n    const me = this;\n    if (value === undefined || value === 0) {\n      value = me.min;\n    }\n    if (value === null || isNaN(value)) {\n      return NaN;\n    }\n    return me.getPixelForDecimal(value === me.min\n      ? 0\n      : (log10(value) - me._startValue) / me._valueRange);\n  }\n  getValueForPixel(pixel) {\n    const me = this;\n    const decimal = me.getDecimalForPixel(pixel);\n    return Math.pow(10, me._startValue + decimal * me._valueRange);\n  }\n}\nLogarithmicScale.id = 'logarithmic';\nLogarithmicScale.defaults = {\n  ticks: {\n    callback: Ticks.formatters.logarithmic,\n    major: {\n      enabled: true\n    }\n  }\n};\n\nfunction getTickBackdropHeight(opts) {\n  const tickOpts = opts.ticks;\n  if (tickOpts.display && opts.display) {\n    const padding = toPadding(tickOpts.backdropPadding);\n    return valueOrDefault(tickOpts.font && tickOpts.font.size, defaults.font.size) + padding.height;\n  }\n  return 0;\n}\nfunction measureLabelSize(ctx, lineHeight, label) {\n  if (isArray(label)) {\n    return {\n      w: _longestText(ctx, ctx.font, label),\n      h: label.length * lineHeight\n    };\n  }\n  return {\n    w: ctx.measureText(label).width,\n    h: lineHeight\n  };\n}\nfunction determineLimits(angle, pos, size, min, max) {\n  if (angle === min || angle === max) {\n    return {\n      start: pos - (size / 2),\n      end: pos + (size / 2)\n    };\n  } else if (angle < min || angle > max) {\n    return {\n      start: pos - size,\n      end: pos\n    };\n  }\n  return {\n    start: pos,\n    end: pos + size\n  };\n}\nfunction fitWithPointLabels(scale) {\n  const furthestLimits = {\n    l: 0,\n    r: scale.width,\n    t: 0,\n    b: scale.height - scale.paddingTop\n  };\n  const furthestAngles = {};\n  let i, textSize, pointPosition;\n  const labelSizes = [];\n  const padding = [];\n  const valueCount = scale.getLabels().length;\n  for (i = 0; i < valueCount; i++) {\n    const opts = scale.options.pointLabels.setContext(scale.getContext(i));\n    padding[i] = opts.padding;\n    pointPosition = scale.getPointPosition(i, scale.drawingArea + padding[i]);\n    const plFont = toFont(opts.font);\n    scale.ctx.font = plFont.string;\n    textSize = measureLabelSize(scale.ctx, plFont.lineHeight, scale._pointLabels[i]);\n    labelSizes[i] = textSize;\n    const angleRadians = scale.getIndexAngle(i);\n    const angle = toDegrees(angleRadians);\n    const hLimits = determineLimits(angle, pointPosition.x, textSize.w, 0, 180);\n    const vLimits = determineLimits(angle, pointPosition.y, textSize.h, 90, 270);\n    if (hLimits.start < furthestLimits.l) {\n      furthestLimits.l = hLimits.start;\n      furthestAngles.l = angleRadians;\n    }\n    if (hLimits.end > furthestLimits.r) {\n      furthestLimits.r = hLimits.end;\n      furthestAngles.r = angleRadians;\n    }\n    if (vLimits.start < furthestLimits.t) {\n      furthestLimits.t = vLimits.start;\n      furthestAngles.t = angleRadians;\n    }\n    if (vLimits.end > furthestLimits.b) {\n      furthestLimits.b = vLimits.end;\n      furthestAngles.b = angleRadians;\n    }\n  }\n  scale._setReductions(scale.drawingArea, furthestLimits, furthestAngles);\n  scale._pointLabelItems = [];\n  const opts = scale.options;\n  const tickBackdropHeight = getTickBackdropHeight(opts);\n  const outerDistance = scale.getDistanceFromCenterForValue(opts.ticks.reverse ? scale.min : scale.max);\n  for (i = 0; i < valueCount; i++) {\n    const extra = (i === 0 ? tickBackdropHeight / 2 : 0);\n    const pointLabelPosition = scale.getPointPosition(i, outerDistance + extra + padding[i]);\n    const angle = toDegrees(scale.getIndexAngle(i));\n    const size = labelSizes[i];\n    adjustPointPositionForLabelHeight(angle, size, pointLabelPosition);\n    const textAlign = getTextAlignForAngle(angle);\n    let left;\n    if (textAlign === 'left') {\n      left = pointLabelPosition.x;\n    } else if (textAlign === 'center') {\n      left = pointLabelPosition.x - (size.w / 2);\n    } else {\n      left = pointLabelPosition.x - size.w;\n    }\n    const right = left + size.w;\n    scale._pointLabelItems[i] = {\n      x: pointLabelPosition.x,\n      y: pointLabelPosition.y,\n      textAlign,\n      left,\n      top: pointLabelPosition.y,\n      right,\n      bottom: pointLabelPosition.y + size.h,\n    };\n  }\n}\nfunction getTextAlignForAngle(angle) {\n  if (angle === 0 || angle === 180) {\n    return 'center';\n  } else if (angle < 180) {\n    return 'left';\n  }\n  return 'right';\n}\nfunction adjustPointPositionForLabelHeight(angle, textSize, position) {\n  if (angle === 90 || angle === 270) {\n    position.y -= (textSize.h / 2);\n  } else if (angle > 270 || angle < 90) {\n    position.y -= textSize.h;\n  }\n}\nfunction drawPointLabels(scale, labelCount) {\n  const {ctx, options: {pointLabels}} = scale;\n  for (let i = labelCount - 1; i >= 0; i--) {\n    const optsAtIndex = pointLabels.setContext(scale.getContext(i));\n    const plFont = toFont(optsAtIndex.font);\n    const {x, y, textAlign, left, top, right, bottom} = scale._pointLabelItems[i];\n    const {backdropColor} = optsAtIndex;\n    if (!isNullOrUndef(backdropColor)) {\n      const padding = toPadding(optsAtIndex.backdropPadding);\n      ctx.fillStyle = backdropColor;\n      ctx.fillRect(left - padding.left, top - padding.top, right - left + padding.width, bottom - top + padding.height);\n    }\n    renderText(\n      ctx,\n      scale._pointLabels[i],\n      x,\n      y + (plFont.lineHeight / 2),\n      plFont,\n      {\n        color: optsAtIndex.color,\n        textAlign: textAlign,\n        textBaseline: 'middle'\n      }\n    );\n  }\n}\nfunction pathRadiusLine(scale, radius, circular, labelCount) {\n  const {ctx} = scale;\n  if (circular) {\n    ctx.arc(scale.xCenter, scale.yCenter, radius, 0, TAU);\n  } else {\n    let pointPosition = scale.getPointPosition(0, radius);\n    ctx.moveTo(pointPosition.x, pointPosition.y);\n    for (let i = 1; i < labelCount; i++) {\n      pointPosition = scale.getPointPosition(i, radius);\n      ctx.lineTo(pointPosition.x, pointPosition.y);\n    }\n  }\n}\nfunction drawRadiusLine(scale, gridLineOpts, radius, labelCount) {\n  const ctx = scale.ctx;\n  const circular = gridLineOpts.circular;\n  const {color, lineWidth} = gridLineOpts;\n  if ((!circular && !labelCount) || !color || !lineWidth || radius < 0) {\n    return;\n  }\n  ctx.save();\n  ctx.strokeStyle = color;\n  ctx.lineWidth = lineWidth;\n  ctx.setLineDash(gridLineOpts.borderDash);\n  ctx.lineDashOffset = gridLineOpts.borderDashOffset;\n  ctx.beginPath();\n  pathRadiusLine(scale, radius, circular, labelCount);\n  ctx.closePath();\n  ctx.stroke();\n  ctx.restore();\n}\nfunction numberOrZero(param) {\n  return isNumber(param) ? param : 0;\n}\nclass RadialLinearScale extends LinearScaleBase {\n  constructor(cfg) {\n    super(cfg);\n    this.xCenter = undefined;\n    this.yCenter = undefined;\n    this.drawingArea = undefined;\n    this._pointLabels = [];\n    this._pointLabelItems = [];\n  }\n  setDimensions() {\n    const me = this;\n    me.width = me.maxWidth;\n    me.height = me.maxHeight;\n    me.paddingTop = getTickBackdropHeight(me.options) / 2;\n    me.xCenter = Math.floor(me.width / 2);\n    me.yCenter = Math.floor((me.height - me.paddingTop) / 2);\n    me.drawingArea = Math.min(me.height - me.paddingTop, me.width) / 2;\n  }\n  determineDataLimits() {\n    const me = this;\n    const {min, max} = me.getMinMax(false);\n    me.min = isNumberFinite(min) && !isNaN(min) ? min : 0;\n    me.max = isNumberFinite(max) && !isNaN(max) ? max : 0;\n    me.handleTickRangeOptions();\n  }\n  computeTickLimit() {\n    return Math.ceil(this.drawingArea / getTickBackdropHeight(this.options));\n  }\n  generateTickLabels(ticks) {\n    const me = this;\n    LinearScaleBase.prototype.generateTickLabels.call(me, ticks);\n    me._pointLabels = me.getLabels().map((value, index) => {\n      const label = callback(me.options.pointLabels.callback, [value, index], me);\n      return label || label === 0 ? label : '';\n    });\n  }\n  fit() {\n    const me = this;\n    const opts = me.options;\n    if (opts.display && opts.pointLabels.display) {\n      fitWithPointLabels(me);\n    } else {\n      me.setCenterPoint(0, 0, 0, 0);\n    }\n  }\n  _setReductions(largestPossibleRadius, furthestLimits, furthestAngles) {\n    const me = this;\n    let radiusReductionLeft = furthestLimits.l / Math.sin(furthestAngles.l);\n    let radiusReductionRight = Math.max(furthestLimits.r - me.width, 0) / Math.sin(furthestAngles.r);\n    let radiusReductionTop = -furthestLimits.t / Math.cos(furthestAngles.t);\n    let radiusReductionBottom = -Math.max(furthestLimits.b - (me.height - me.paddingTop), 0) / Math.cos(furthestAngles.b);\n    radiusReductionLeft = numberOrZero(radiusReductionLeft);\n    radiusReductionRight = numberOrZero(radiusReductionRight);\n    radiusReductionTop = numberOrZero(radiusReductionTop);\n    radiusReductionBottom = numberOrZero(radiusReductionBottom);\n    me.drawingArea = Math.max(largestPossibleRadius / 2, Math.min(\n      Math.floor(largestPossibleRadius - (radiusReductionLeft + radiusReductionRight) / 2),\n      Math.floor(largestPossibleRadius - (radiusReductionTop + radiusReductionBottom) / 2)));\n    me.setCenterPoint(radiusReductionLeft, radiusReductionRight, radiusReductionTop, radiusReductionBottom);\n  }\n  setCenterPoint(leftMovement, rightMovement, topMovement, bottomMovement) {\n    const me = this;\n    const maxRight = me.width - rightMovement - me.drawingArea;\n    const maxLeft = leftMovement + me.drawingArea;\n    const maxTop = topMovement + me.drawingArea;\n    const maxBottom = (me.height - me.paddingTop) - bottomMovement - me.drawingArea;\n    me.xCenter = Math.floor(((maxLeft + maxRight) / 2) + me.left);\n    me.yCenter = Math.floor(((maxTop + maxBottom) / 2) + me.top + me.paddingTop);\n  }\n  getIndexAngle(index) {\n    const angleMultiplier = TAU / this.getLabels().length;\n    const startAngle = this.options.startAngle || 0;\n    return _normalizeAngle(index * angleMultiplier + toRadians(startAngle));\n  }\n  getDistanceFromCenterForValue(value) {\n    const me = this;\n    if (isNullOrUndef(value)) {\n      return NaN;\n    }\n    const scalingFactor = me.drawingArea / (me.max - me.min);\n    if (me.options.reverse) {\n      return (me.max - value) * scalingFactor;\n    }\n    return (value - me.min) * scalingFactor;\n  }\n  getValueForDistanceFromCenter(distance) {\n    if (isNullOrUndef(distance)) {\n      return NaN;\n    }\n    const me = this;\n    const scaledDistance = distance / (me.drawingArea / (me.max - me.min));\n    return me.options.reverse ? me.max - scaledDistance : me.min + scaledDistance;\n  }\n  getPointPosition(index, distanceFromCenter) {\n    const me = this;\n    const angle = me.getIndexAngle(index) - HALF_PI;\n    return {\n      x: Math.cos(angle) * distanceFromCenter + me.xCenter,\n      y: Math.sin(angle) * distanceFromCenter + me.yCenter,\n      angle\n    };\n  }\n  getPointPositionForValue(index, value) {\n    return this.getPointPosition(index, this.getDistanceFromCenterForValue(value));\n  }\n  getBasePosition(index) {\n    return this.getPointPositionForValue(index || 0, this.getBaseValue());\n  }\n  getPointLabelPosition(index) {\n    const {left, top, right, bottom} = this._pointLabelItems[index];\n    return {\n      left,\n      top,\n      right,\n      bottom,\n    };\n  }\n  drawBackground() {\n    const me = this;\n    const {backgroundColor, grid: {circular}} = me.options;\n    if (backgroundColor) {\n      const ctx = me.ctx;\n      ctx.save();\n      ctx.beginPath();\n      pathRadiusLine(me, me.getDistanceFromCenterForValue(me._endValue), circular, me.getLabels().length);\n      ctx.closePath();\n      ctx.fillStyle = backgroundColor;\n      ctx.fill();\n      ctx.restore();\n    }\n  }\n  drawGrid() {\n    const me = this;\n    const ctx = me.ctx;\n    const opts = me.options;\n    const {angleLines, grid} = opts;\n    const labelCount = me.getLabels().length;\n    let i, offset, position;\n    if (opts.pointLabels.display) {\n      drawPointLabels(me, labelCount);\n    }\n    if (grid.display) {\n      me.ticks.forEach((tick, index) => {\n        if (index !== 0) {\n          offset = me.getDistanceFromCenterForValue(tick.value);\n          const optsAtIndex = grid.setContext(me.getContext(index - 1));\n          drawRadiusLine(me, optsAtIndex, offset, labelCount);\n        }\n      });\n    }\n    if (angleLines.display) {\n      ctx.save();\n      for (i = me.getLabels().length - 1; i >= 0; i--) {\n        const optsAtIndex = angleLines.setContext(me.getContext(i));\n        const {color, lineWidth} = optsAtIndex;\n        if (!lineWidth || !color) {\n          continue;\n        }\n        ctx.lineWidth = lineWidth;\n        ctx.strokeStyle = color;\n        ctx.setLineDash(optsAtIndex.borderDash);\n        ctx.lineDashOffset = optsAtIndex.borderDashOffset;\n        offset = me.getDistanceFromCenterForValue(opts.ticks.reverse ? me.min : me.max);\n        position = me.getPointPosition(i, offset);\n        ctx.beginPath();\n        ctx.moveTo(me.xCenter, me.yCenter);\n        ctx.lineTo(position.x, position.y);\n        ctx.stroke();\n      }\n      ctx.restore();\n    }\n  }\n  drawBorder() {}\n  drawLabels() {\n    const me = this;\n    const ctx = me.ctx;\n    const opts = me.options;\n    const tickOpts = opts.ticks;\n    if (!tickOpts.display) {\n      return;\n    }\n    const startAngle = me.getIndexAngle(0);\n    let offset, width;\n    ctx.save();\n    ctx.translate(me.xCenter, me.yCenter);\n    ctx.rotate(startAngle);\n    ctx.textAlign = 'center';\n    ctx.textBaseline = 'middle';\n    me.ticks.forEach((tick, index) => {\n      if (index === 0 && !opts.reverse) {\n        return;\n      }\n      const optsAtIndex = tickOpts.setContext(me.getContext(index));\n      const tickFont = toFont(optsAtIndex.font);\n      offset = me.getDistanceFromCenterForValue(me.ticks[index].value);\n      if (optsAtIndex.showLabelBackdrop) {\n        width = ctx.measureText(tick.label).width;\n        ctx.fillStyle = optsAtIndex.backdropColor;\n        const padding = toPadding(optsAtIndex.backdropPadding);\n        ctx.fillRect(\n          -width / 2 - padding.left,\n          -offset - tickFont.size / 2 - padding.top,\n          width + padding.width,\n          tickFont.size + padding.height\n        );\n      }\n      renderText(ctx, tick.label, 0, -offset, tickFont, {\n        color: optsAtIndex.color,\n      });\n    });\n    ctx.restore();\n  }\n  drawTitle() {}\n}\nRadialLinearScale.id = 'radialLinear';\nRadialLinearScale.defaults = {\n  display: true,\n  animate: true,\n  position: 'chartArea',\n  angleLines: {\n    display: true,\n    lineWidth: 1,\n    borderDash: [],\n    borderDashOffset: 0.0\n  },\n  grid: {\n    circular: false\n  },\n  startAngle: 0,\n  ticks: {\n    showLabelBackdrop: true,\n    callback: Ticks.formatters.numeric\n  },\n  pointLabels: {\n    backdropColor: undefined,\n    backdropPadding: 2,\n    display: true,\n    font: {\n      size: 10\n    },\n    callback(label) {\n      return label;\n    },\n    padding: 5\n  }\n};\nRadialLinearScale.defaultRoutes = {\n  'angleLines.color': 'borderColor',\n  'pointLabels.color': 'color',\n  'ticks.color': 'color'\n};\nRadialLinearScale.descriptors = {\n  angleLines: {\n    _fallback: 'grid'\n  }\n};\n\nconst INTERVALS = {\n  millisecond: {common: true, size: 1, steps: 1000},\n  second: {common: true, size: 1000, steps: 60},\n  minute: {common: true, size: 60000, steps: 60},\n  hour: {common: true, size: 3600000, steps: 24},\n  day: {common: true, size: 86400000, steps: 30},\n  week: {common: false, size: 604800000, steps: 4},\n  month: {common: true, size: 2.628e9, steps: 12},\n  quarter: {common: false, size: 7.884e9, steps: 4},\n  year: {common: true, size: 3.154e10}\n};\nconst UNITS = (Object.keys(INTERVALS));\nfunction sorter(a, b) {\n  return a - b;\n}\nfunction parse(scale, input) {\n  if (isNullOrUndef(input)) {\n    return null;\n  }\n  const adapter = scale._adapter;\n  const {parser, round, isoWeekday} = scale._parseOpts;\n  let value = input;\n  if (typeof parser === 'function') {\n    value = parser(value);\n  }\n  if (!isNumberFinite(value)) {\n    value = typeof parser === 'string'\n      ? adapter.parse(value, parser)\n      : adapter.parse(value);\n  }\n  if (value === null) {\n    return null;\n  }\n  if (round) {\n    value = round === 'week' && (isNumber(isoWeekday) || isoWeekday === true)\n      ? adapter.startOf(value, 'isoWeek', isoWeekday)\n      : adapter.startOf(value, round);\n  }\n  return +value;\n}\nfunction determineUnitForAutoTicks(minUnit, min, max, capacity) {\n  const ilen = UNITS.length;\n  for (let i = UNITS.indexOf(minUnit); i < ilen - 1; ++i) {\n    const interval = INTERVALS[UNITS[i]];\n    const factor = interval.steps ? interval.steps : Number.MAX_SAFE_INTEGER;\n    if (interval.common && Math.ceil((max - min) / (factor * interval.size)) <= capacity) {\n      return UNITS[i];\n    }\n  }\n  return UNITS[ilen - 1];\n}\nfunction determineUnitForFormatting(scale, numTicks, minUnit, min, max) {\n  for (let i = UNITS.length - 1; i >= UNITS.indexOf(minUnit); i--) {\n    const unit = UNITS[i];\n    if (INTERVALS[unit].common && scale._adapter.diff(max, min, unit) >= numTicks - 1) {\n      return unit;\n    }\n  }\n  return UNITS[minUnit ? UNITS.indexOf(minUnit) : 0];\n}\nfunction determineMajorUnit(unit) {\n  for (let i = UNITS.indexOf(unit) + 1, ilen = UNITS.length; i < ilen; ++i) {\n    if (INTERVALS[UNITS[i]].common) {\n      return UNITS[i];\n    }\n  }\n}\nfunction addTick(ticks, time, timestamps) {\n  if (!timestamps) {\n    ticks[time] = true;\n  } else if (timestamps.length) {\n    const {lo, hi} = _lookup(timestamps, time);\n    const timestamp = timestamps[lo] >= time ? timestamps[lo] : timestamps[hi];\n    ticks[timestamp] = true;\n  }\n}\nfunction setMajorTicks(scale, ticks, map, majorUnit) {\n  const adapter = scale._adapter;\n  const first = +adapter.startOf(ticks[0].value, majorUnit);\n  const last = ticks[ticks.length - 1].value;\n  let major, index;\n  for (major = first; major <= last; major = +adapter.add(major, 1, majorUnit)) {\n    index = map[major];\n    if (index >= 0) {\n      ticks[index].major = true;\n    }\n  }\n  return ticks;\n}\nfunction ticksFromTimestamps(scale, values, majorUnit) {\n  const ticks = [];\n  const map = {};\n  const ilen = values.length;\n  let i, value;\n  for (i = 0; i < ilen; ++i) {\n    value = values[i];\n    map[value] = i;\n    ticks.push({\n      value,\n      major: false\n    });\n  }\n  return (ilen === 0 || !majorUnit) ? ticks : setMajorTicks(scale, ticks, map, majorUnit);\n}\nclass TimeScale extends Scale {\n  constructor(props) {\n    super(props);\n    this._cache = {\n      data: [],\n      labels: [],\n      all: []\n    };\n    this._unit = 'day';\n    this._majorUnit = undefined;\n    this._offsets = {};\n    this._normalized = false;\n    this._parseOpts = undefined;\n  }\n  init(scaleOpts, opts) {\n    const time = scaleOpts.time || (scaleOpts.time = {});\n    const adapter = this._adapter = new _adapters._date(scaleOpts.adapters.date);\n    mergeIf(time.displayFormats, adapter.formats());\n    this._parseOpts = {\n      parser: time.parser,\n      round: time.round,\n      isoWeekday: time.isoWeekday\n    };\n    super.init(scaleOpts);\n    this._normalized = opts.normalized;\n  }\n  parse(raw, index) {\n    if (raw === undefined) {\n      return null;\n    }\n    return parse(this, raw);\n  }\n  beforeLayout() {\n    super.beforeLayout();\n    this._cache = {\n      data: [],\n      labels: [],\n      all: []\n    };\n  }\n  determineDataLimits() {\n    const me = this;\n    const options = me.options;\n    const adapter = me._adapter;\n    const unit = options.time.unit || 'day';\n    let {min, max, minDefined, maxDefined} = me.getUserBounds();\n    function _applyBounds(bounds) {\n      if (!minDefined && !isNaN(bounds.min)) {\n        min = Math.min(min, bounds.min);\n      }\n      if (!maxDefined && !isNaN(bounds.max)) {\n        max = Math.max(max, bounds.max);\n      }\n    }\n    if (!minDefined || !maxDefined) {\n      _applyBounds(me._getLabelBounds());\n      if (options.bounds !== 'ticks' || options.ticks.source !== 'labels') {\n        _applyBounds(me.getMinMax(false));\n      }\n    }\n    min = isNumberFinite(min) && !isNaN(min) ? min : +adapter.startOf(Date.now(), unit);\n    max = isNumberFinite(max) && !isNaN(max) ? max : +adapter.endOf(Date.now(), unit) + 1;\n    me.min = Math.min(min, max - 1);\n    me.max = Math.max(min + 1, max);\n  }\n  _getLabelBounds() {\n    const arr = this.getLabelTimestamps();\n    let min = Number.POSITIVE_INFINITY;\n    let max = Number.NEGATIVE_INFINITY;\n    if (arr.length) {\n      min = arr[0];\n      max = arr[arr.length - 1];\n    }\n    return {min, max};\n  }\n  buildTicks() {\n    const me = this;\n    const options = me.options;\n    const timeOpts = options.time;\n    const tickOpts = options.ticks;\n    const timestamps = tickOpts.source === 'labels' ? me.getLabelTimestamps() : me._generate();\n    if (options.bounds === 'ticks' && timestamps.length) {\n      me.min = me._userMin || timestamps[0];\n      me.max = me._userMax || timestamps[timestamps.length - 1];\n    }\n    const min = me.min;\n    const max = me.max;\n    const ticks = _filterBetween(timestamps, min, max);\n    me._unit = timeOpts.unit || (tickOpts.autoSkip\n      ? determineUnitForAutoTicks(timeOpts.minUnit, me.min, me.max, me._getLabelCapacity(min))\n      : determineUnitForFormatting(me, ticks.length, timeOpts.minUnit, me.min, me.max));\n    me._majorUnit = !tickOpts.major.enabled || me._unit === 'year' ? undefined\n      : determineMajorUnit(me._unit);\n    me.initOffsets(timestamps);\n    if (options.reverse) {\n      ticks.reverse();\n    }\n    return ticksFromTimestamps(me, ticks, me._majorUnit);\n  }\n  initOffsets(timestamps) {\n    const me = this;\n    let start = 0;\n    let end = 0;\n    let first, last;\n    if (me.options.offset && timestamps.length) {\n      first = me.getDecimalForValue(timestamps[0]);\n      if (timestamps.length === 1) {\n        start = 1 - first;\n      } else {\n        start = (me.getDecimalForValue(timestamps[1]) - first) / 2;\n      }\n      last = me.getDecimalForValue(timestamps[timestamps.length - 1]);\n      if (timestamps.length === 1) {\n        end = last;\n      } else {\n        end = (last - me.getDecimalForValue(timestamps[timestamps.length - 2])) / 2;\n      }\n    }\n    const limit = timestamps.length < 3 ? 0.5 : 0.25;\n    start = _limitValue(start, 0, limit);\n    end = _limitValue(end, 0, limit);\n    me._offsets = {start, end, factor: 1 / (start + 1 + end)};\n  }\n  _generate() {\n    const me = this;\n    const adapter = me._adapter;\n    const min = me.min;\n    const max = me.max;\n    const options = me.options;\n    const timeOpts = options.time;\n    const minor = timeOpts.unit || determineUnitForAutoTicks(timeOpts.minUnit, min, max, me._getLabelCapacity(min));\n    const stepSize = valueOrDefault(timeOpts.stepSize, 1);\n    const weekday = minor === 'week' ? timeOpts.isoWeekday : false;\n    const hasWeekday = isNumber(weekday) || weekday === true;\n    const ticks = {};\n    let first = min;\n    let time, count;\n    if (hasWeekday) {\n      first = +adapter.startOf(first, 'isoWeek', weekday);\n    }\n    first = +adapter.startOf(first, hasWeekday ? 'day' : minor);\n    if (adapter.diff(max, min, minor) > 100000 * stepSize) {\n      throw new Error(min + ' and ' + max + ' are too far apart with stepSize of ' + stepSize + ' ' + minor);\n    }\n    const timestamps = options.ticks.source === 'data' && me.getDataTimestamps();\n    for (time = first, count = 0; time < max; time = +adapter.add(time, stepSize, minor), count++) {\n      addTick(ticks, time, timestamps);\n    }\n    if (time === max || options.bounds === 'ticks' || count === 1) {\n      addTick(ticks, time, timestamps);\n    }\n    return Object.keys(ticks).sort((a, b) => a - b).map(x => +x);\n  }\n  getLabelForValue(value) {\n    const me = this;\n    const adapter = me._adapter;\n    const timeOpts = me.options.time;\n    if (timeOpts.tooltipFormat) {\n      return adapter.format(value, timeOpts.tooltipFormat);\n    }\n    return adapter.format(value, timeOpts.displayFormats.datetime);\n  }\n  _tickFormatFunction(time, index, ticks, format) {\n    const me = this;\n    const options = me.options;\n    const formats = options.time.displayFormats;\n    const unit = me._unit;\n    const majorUnit = me._majorUnit;\n    const minorFormat = unit && formats[unit];\n    const majorFormat = majorUnit && formats[majorUnit];\n    const tick = ticks[index];\n    const major = majorUnit && majorFormat && tick && tick.major;\n    const label = me._adapter.format(time, format || (major ? majorFormat : minorFormat));\n    const formatter = options.ticks.callback;\n    return formatter ? callback(formatter, [label, index, ticks], me) : label;\n  }\n  generateTickLabels(ticks) {\n    let i, ilen, tick;\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      tick = ticks[i];\n      tick.label = this._tickFormatFunction(tick.value, i, ticks);\n    }\n  }\n  getDecimalForValue(value) {\n    const me = this;\n    return value === null ? NaN : (value - me.min) / (me.max - me.min);\n  }\n  getPixelForValue(value) {\n    const me = this;\n    const offsets = me._offsets;\n    const pos = me.getDecimalForValue(value);\n    return me.getPixelForDecimal((offsets.start + pos) * offsets.factor);\n  }\n  getValueForPixel(pixel) {\n    const me = this;\n    const offsets = me._offsets;\n    const pos = me.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n    return me.min + pos * (me.max - me.min);\n  }\n  _getLabelSize(label) {\n    const me = this;\n    const ticksOpts = me.options.ticks;\n    const tickLabelWidth = me.ctx.measureText(label).width;\n    const angle = toRadians(me.isHorizontal() ? ticksOpts.maxRotation : ticksOpts.minRotation);\n    const cosRotation = Math.cos(angle);\n    const sinRotation = Math.sin(angle);\n    const tickFontSize = me._resolveTickFontOptions(0).size;\n    return {\n      w: (tickLabelWidth * cosRotation) + (tickFontSize * sinRotation),\n      h: (tickLabelWidth * sinRotation) + (tickFontSize * cosRotation)\n    };\n  }\n  _getLabelCapacity(exampleTime) {\n    const me = this;\n    const timeOpts = me.options.time;\n    const displayFormats = timeOpts.displayFormats;\n    const format = displayFormats[timeOpts.unit] || displayFormats.millisecond;\n    const exampleLabel = me._tickFormatFunction(exampleTime, 0, ticksFromTimestamps(me, [exampleTime], me._majorUnit), format);\n    const size = me._getLabelSize(exampleLabel);\n    const capacity = Math.floor(me.isHorizontal() ? me.width / size.w : me.height / size.h) - 1;\n    return capacity > 0 ? capacity : 1;\n  }\n  getDataTimestamps() {\n    const me = this;\n    let timestamps = me._cache.data || [];\n    let i, ilen;\n    if (timestamps.length) {\n      return timestamps;\n    }\n    const metas = me.getMatchingVisibleMetas();\n    if (me._normalized && metas.length) {\n      return (me._cache.data = metas[0].controller.getAllParsedValues(me));\n    }\n    for (i = 0, ilen = metas.length; i < ilen; ++i) {\n      timestamps = timestamps.concat(metas[i].controller.getAllParsedValues(me));\n    }\n    return (me._cache.data = me.normalize(timestamps));\n  }\n  getLabelTimestamps() {\n    const me = this;\n    const timestamps = me._cache.labels || [];\n    let i, ilen;\n    if (timestamps.length) {\n      return timestamps;\n    }\n    const labels = me.getLabels();\n    for (i = 0, ilen = labels.length; i < ilen; ++i) {\n      timestamps.push(parse(me, labels[i]));\n    }\n    return (me._cache.labels = me._normalized ? timestamps : me.normalize(timestamps));\n  }\n  normalize(values) {\n    return _arrayUnique(values.sort(sorter));\n  }\n}\nTimeScale.id = 'time';\nTimeScale.defaults = {\n  bounds: 'data',\n  adapters: {},\n  time: {\n    parser: false,\n    unit: false,\n    round: false,\n    isoWeekday: false,\n    minUnit: 'millisecond',\n    displayFormats: {}\n  },\n  ticks: {\n    source: 'auto',\n    major: {\n      enabled: false\n    }\n  }\n};\n\nfunction interpolate(table, val, reverse) {\n  let prevSource, nextSource, prevTarget, nextTarget;\n  if (reverse) {\n    prevSource = Math.floor(val);\n    nextSource = Math.ceil(val);\n    prevTarget = table[prevSource];\n    nextTarget = table[nextSource];\n  } else {\n    const result = _lookup(table, val);\n    prevTarget = result.lo;\n    nextTarget = result.hi;\n    prevSource = table[prevTarget];\n    nextSource = table[nextTarget];\n  }\n  const span = nextSource - prevSource;\n  return span ? prevTarget + (nextTarget - prevTarget) * (val - prevSource) / span : prevTarget;\n}\nclass TimeSeriesScale extends TimeScale {\n  constructor(props) {\n    super(props);\n    this._table = [];\n    this._maxIndex = undefined;\n  }\n  initOffsets() {\n    const me = this;\n    const timestamps = me._getTimestampsForTable();\n    me._table = me.buildLookupTable(timestamps);\n    me._maxIndex = me._table.length - 1;\n    super.initOffsets(timestamps);\n  }\n  buildLookupTable(timestamps) {\n    const me = this;\n    const {min, max} = me;\n    if (!timestamps.length) {\n      return [\n        {time: min, pos: 0},\n        {time: max, pos: 1}\n      ];\n    }\n    const items = [min];\n    let i, ilen, curr;\n    for (i = 0, ilen = timestamps.length; i < ilen; ++i) {\n      curr = timestamps[i];\n      if (curr > min && curr < max) {\n        items.push(curr);\n      }\n    }\n    items.push(max);\n    return items;\n  }\n  _getTimestampsForTable() {\n    const me = this;\n    let timestamps = me._cache.all || [];\n    if (timestamps.length) {\n      return timestamps;\n    }\n    const data = me.getDataTimestamps();\n    const label = me.getLabelTimestamps();\n    if (data.length && label.length) {\n      timestamps = me.normalize(data.concat(label));\n    } else {\n      timestamps = data.length ? data : label;\n    }\n    timestamps = me._cache.all = timestamps;\n    return timestamps;\n  }\n  getPixelForValue(value, index) {\n    const me = this;\n    const offsets = me._offsets;\n    const pos = me._normalized && me._maxIndex > 0 && !isNullOrUndef(index)\n      ? index / me._maxIndex : me.getDecimalForValue(value);\n    return me.getPixelForDecimal((offsets.start + pos) * offsets.factor);\n  }\n  getDecimalForValue(value) {\n    return interpolate(this._table, value) / this._maxIndex;\n  }\n  getValueForPixel(pixel) {\n    const me = this;\n    const offsets = me._offsets;\n    const decimal = me.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n    return interpolate(me._table, decimal * this._maxIndex, true);\n  }\n}\nTimeSeriesScale.id = 'timeseries';\nTimeSeriesScale.defaults = TimeScale.defaults;\n\nvar scales = /*#__PURE__*/Object.freeze({\n__proto__: null,\nCategoryScale: CategoryScale,\nLinearScale: LinearScale,\nLogarithmicScale: LogarithmicScale,\nRadialLinearScale: RadialLinearScale,\nTimeScale: TimeScale,\nTimeSeriesScale: TimeSeriesScale\n});\n\nChart.register(controllers, scales, elements, plugins);\nChart.helpers = {...helpers};\nChart._adapters = _adapters;\nChart.Animation = Animation;\nChart.Animations = Animations;\nChart.animator = animator;\nChart.controllers = registry.controllers.items;\nChart.DatasetController = DatasetController;\nChart.Element = Element;\nChart.elements = elements;\nChart.Interaction = Interaction;\nChart.layouts = layouts;\nChart.platforms = platforms;\nChart.Scale = Scale;\nChart.Ticks = Ticks;\nObject.assign(Chart, controllers, scales, elements, plugins, platforms);\nChart.Chart = Chart;\nif (typeof window !== 'undefined') {\n  window.Chart = Chart;\n}\n\nreturn Chart;\n\n})));\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}