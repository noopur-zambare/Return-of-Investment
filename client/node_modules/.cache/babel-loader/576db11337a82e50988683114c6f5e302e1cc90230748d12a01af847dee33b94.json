{"ast":null,"code":"var _jsxFileName = \"/Users/noopurnishikantzambare/Downloads/ROI Website/client/src/components/MLdropdown.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport Dropdown from './GridDropdown';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst MLdropdown = _ref => {\n  _s();\n  let {\n    onModelSelect,\n    trainData,\n    testData\n  } = _ref;\n  const options = [{\n    label: 'Logistic Regression',\n    value: 'logistic_regression'\n  }, {\n    label: 'Naive Bayes',\n    value: 'naive_bayes'\n  }, {\n    label: 'Random Forest',\n    value: 'random_forest'\n  }, {\n    label: 'Support Vector Machine',\n    value: 'support_vector_machine'\n  }, {\n    label: 'Decision Tree',\n    value: 'decision_tree'\n  }];\n  const [showUpload, setShowUpload] = useState(false);\n  const [report, setReport] = useState(null);\n  const [x, setX] = useState(null);\n  const handleOptionSelect = async selectedValue => {\n    console.log('Selected option:', selectedValue);\n    onModelSelect(selectedValue);\n    if (selectedValue === 'logistic_regression') {\n      setShowUpload(true);\n      setReport(null);\n      setX(null);\n    } else {\n      setShowUpload(false);\n      setReport(null);\n    }\n  };\n  const handleShowAnalysis = () => {\n    const formData = new FormData();\n    formData.append('file', trainData);\n    axios.post('/logistic_regression', formData).then(response => {\n      console.log(response.data);\n      if (response.data.success) {\n        setReport(response.data.classification_report);\n      }\n    }).catch(error => {\n      console.error(error);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"ML Model\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Dropdown, {\n      options: options,\n      onSelect: handleOptionSelect\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), showUpload && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleShowAnalysis,\n        children: \"Upload\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Report: \", x]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 12\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n};\n_s(MLdropdown, \"gGbX4AklflyFBQF5pDqMeKoSsks=\");\n_c = MLdropdown;\nexport default MLdropdown;\nvar _c;\n$RefreshReg$(_c, \"MLdropdown\");","map":{"version":3,"names":["React","useState","Dropdown","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","MLdropdown","_ref","_s","onModelSelect","trainData","testData","options","label","value","showUpload","setShowUpload","report","setReport","x","setX","handleOptionSelect","selectedValue","console","log","handleShowAnalysis","formData","FormData","append","post","then","response","data","success","classification_report","catch","error","children","fileName","_jsxFileName","lineNumber","columnNumber","onSelect","onClick","_c","$RefreshReg$"],"sources":["/Users/noopurnishikantzambare/Downloads/ROI Website/client/src/components/MLdropdown.js"],"sourcesContent":["import React, { useState } from 'react';\nimport Dropdown from './GridDropdown';\nimport axios from 'axios';\n\nconst MLdropdown = ({ onModelSelect, trainData, testData }) => {\n  const options = [\n    { label: 'Logistic Regression', value: 'logistic_regression' },\n    { label: 'Naive Bayes', value: 'naive_bayes' },\n    { label: 'Random Forest', value: 'random_forest' },\n    { label: 'Support Vector Machine', value: 'support_vector_machine' },\n    { label: 'Decision Tree', value: 'decision_tree' },\n  ];\n  const [showUpload, setShowUpload] = useState(false);\n  const [report, setReport] = useState(null);\n  const [x, setX] = useState(null);\n\n  const handleOptionSelect = async (selectedValue) => {\n    console.log('Selected option:', selectedValue);\n    onModelSelect(selectedValue);\n\n    if (selectedValue === 'logistic_regression') {\n      setShowUpload(true);\n      setReport(null);\n      setX(null);\n    } else {\n      setShowUpload(false);\n      setReport(null);\n    }\n  };\n\n  const handleShowAnalysis = () => {\n    const formData = new FormData();\n    formData.append('file', trainData);\n  \n    axios\n      .post('/logistic_regression', formData)\n      .then((response) => {\n        console.log(response.data);\n        if (response.data.success) {\n          setReport(response.data.classification_report);\n        }\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  };\n  \n\n  return (\n    <div>\n      <h1>ML Model</h1>\n      <Dropdown options={options} onSelect={handleOptionSelect} />\n      {showUpload && (\n        <>\n          <button onClick={handleShowAnalysis}>Upload</button>\n          {<p>Report: {x}</p>}\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default MLdropdown;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}