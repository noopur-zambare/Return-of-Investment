{"ast":null,"code":"var _jsxFileName = \"/Users/noopurnishikantzambare/Downloads/ROI Website/client/src/components/ColumnFilter.js\";\nimport React, { Component } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { default as ReactSelect, components } from \"react-select\";\nimport { parse } from \"papaparse\"; // CSV parsing library\nimport \"./ColumnFilter.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Option = props => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(components.Option, {\n      ...props,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\",\n        checked: props.isSelected,\n        onChange: () => null\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 9\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"label\", {\n        children: props.label\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 5\n  }, this);\n};\n_c = Option;\nconst customStyles = {\n  control: provided => ({\n    ...provided,\n    backgroundColor: \"blue\",\n    // Change the background color\n    color: \"white\" // Change the text color\n  })\n};\n\nexport default class Example extends Component {\n  constructor(props) {\n    super(props);\n    this.handleChange = selected => {\n      this.setState({\n        optionSelected: selected\n      });\n    };\n    this.state = {\n      optionSelected: null,\n      columnNames: [],\n      csvData: []\n    };\n  }\n  componentDidMount() {\n    // Load the CSV file from a relative path\n    const csvFilePath = require(\"./data.csv\");\n    fetch(csvFilePath).then(response => response.text()).then(csvText => {\n      const {\n        data\n      } = parse(csvText, {\n        header: true\n      });\n      const columnNames = Object.keys(data[0]);\n      const csvData = data.map(row => Object.values(row));\n      this.setState({\n        columnNames,\n        csvData\n      });\n    }).catch(error => {\n      console.error(\"Error loading CSV file:\", error);\n    });\n  }\n  render() {\n    const {\n      columnNames,\n      optionSelected,\n      csvData\n    } = this.state;\n    const topRows = csvData.slice(0, 3); // Display only the top 3 rows\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [columnNames.length > 0 && /*#__PURE__*/_jsxDEV(ReactSelect, {\n        styles: customStyles,\n        options: columnNames.map(name => ({\n          value: name,\n          label: name\n        })),\n        isMulti: true,\n        closeMenuOnSelect: false,\n        hideSelectedOptions: false,\n        components: {\n          Option\n        },\n        onChange: this.handleChange,\n        allowSelectAll: true,\n        value: optionSelected\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 11\n      }, this), topRows.length > 0 && /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"csv-table\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: columnNames.map(name => /*#__PURE__*/_jsxDEV(\"th\", {\n              children: name\n            }, name, false, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: topRows.map((row, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: row.map((value, colIndex) => /*#__PURE__*/_jsxDEV(\"td\", {\n              children: value\n            }, colIndex, false, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 21\n            }, this))\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this);\n  }\n}\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render( /*#__PURE__*/_jsxDEV(Example, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 111,\n  columnNumber: 17\n}, this), rootElement);\nvar _c;\n$RefreshReg$(_c, \"Option\");","map":{"version":3,"names":["React","Component","ReactDOM","default","ReactSelect","components","parse","jsxDEV","_jsxDEV","Option","props","children","type","checked","isSelected","onChange","fileName","_jsxFileName","lineNumber","columnNumber","label","_c","customStyles","control","provided","backgroundColor","color","Example","constructor","handleChange","selected","setState","optionSelected","state","columnNames","csvData","componentDidMount","csvFilePath","require","fetch","then","response","text","csvText","data","header","Object","keys","map","row","values","catch","error","console","render","topRows","slice","length","styles","options","name","value","isMulti","closeMenuOnSelect","hideSelectedOptions","allowSelectAll","className","index","colIndex","rootElement","document","getElementById","$RefreshReg$"],"sources":["/Users/noopurnishikantzambare/Downloads/ROI Website/client/src/components/ColumnFilter.js"],"sourcesContent":["import React, { Component } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { default as ReactSelect, components } from \"react-select\";\nimport { parse } from \"papaparse\"; // CSV parsing library\nimport \"./ColumnFilter.css\";\n\nconst Option = (props) => {\n  return (\n    <div>\n      <components.Option {...props}>\n        <input\n          type=\"checkbox\"\n          checked={props.isSelected}\n          onChange={() => null}\n        />{\" \"}\n        <label>{props.label}</label>\n      </components.Option>\n    </div>\n  );\n};\n\nconst customStyles = {\n  control: (provided) => ({\n    ...provided,\n    backgroundColor: \"blue\", // Change the background color\n    color: \"white\", // Change the text color\n  }),\n};\n\nexport default class Example extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      optionSelected: null,\n      columnNames: [],\n      csvData: [],\n    };\n  }\n\n  componentDidMount() {\n    // Load the CSV file from a relative path\n    const csvFilePath = require(\"./data.csv\");\n\n    fetch(csvFilePath)\n      .then((response) => response.text())\n      .then((csvText) => {\n        const { data } = parse(csvText, { header: true });\n        const columnNames = Object.keys(data[0]);\n        const csvData = data.map((row) => Object.values(row));\n        this.setState({ columnNames, csvData });\n      })\n      .catch((error) => {\n        console.error(\"Error loading CSV file:\", error);\n      });\n  }\n\n  handleChange = (selected) => {\n    this.setState({\n      optionSelected: selected,\n    });\n  };\n\n  render() {\n    const { columnNames, optionSelected, csvData } = this.state;\n    const topRows = csvData.slice(0, 3); // Display only the top 3 rows\n\n    return (\n      <div>\n        {columnNames.length > 0 && (\n          <ReactSelect\n            styles={customStyles}\n            options={columnNames.map((name) => ({ value: name, label: name }))}\n            isMulti\n            closeMenuOnSelect={false}\n            hideSelectedOptions={false}\n            components={{\n              Option,\n            }}\n            onChange={this.handleChange}\n            allowSelectAll={true}\n            value={optionSelected}\n          />\n        )}\n\n        {topRows.length > 0 && (\n          <table className=\"csv-table\">\n            <thead>\n              <tr>\n                {columnNames.map((name) => (\n                  <th key={name}>{name}</th>\n                ))}\n              </tr>\n            </thead>\n            <tbody>\n              {topRows.map((row, index) => (\n                <tr key={index}>\n                  {row.map((value, colIndex) => (\n                    <td key={colIndex}>{value}</td>\n                  ))}\n                </tr>\n              ))}\n            </tbody>\n          </table>\n        )}\n      </div>\n    );\n  }\n}\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(<Example />, rootElement);\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,OAAOC,QAAQ,MAAM,WAAW;AAChC,SAASC,OAAO,IAAIC,WAAW,EAAEC,UAAU,QAAQ,cAAc;AACjE,SAASC,KAAK,QAAQ,WAAW,CAAC,CAAC;AACnC,OAAO,oBAAoB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5B,MAAMC,MAAM,GAAIC,KAAK,IAAK;EACxB,oBACEF,OAAA;IAAAG,QAAA,eACEH,OAAA,CAACH,UAAU,CAACI,MAAM;MAAA,GAAKC,KAAK;MAAAC,QAAA,gBAC1BH,OAAA;QACEI,IAAI,EAAC,UAAU;QACfC,OAAO,EAAEH,KAAK,CAACI,UAAW;QAC1BC,QAAQ,EAAEA,CAAA,KAAM;MAAK;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACtB,CAAC,EAAC,GAAG,eACNX,OAAA;QAAAG,QAAA,EAAQD,KAAK,CAACU;MAAK;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACX;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACjB,CAAC;AAEV,CAAC;AAACE,EAAA,GAbIZ,MAAM;AAeZ,MAAMa,YAAY,GAAG;EACnBC,OAAO,EAAGC,QAAQ,KAAM;IACtB,GAAGA,QAAQ;IACXC,eAAe,EAAE,MAAM;IAAE;IACzBC,KAAK,EAAE,OAAO,CAAE;EAClB,CAAC;AACH,CAAC;;AAED,eAAe,MAAMC,OAAO,SAAS1B,SAAS,CAAC;EAC7C2B,WAAWA,CAAClB,KAAK,EAAE;IACjB,KAAK,CAACA,KAAK,CAAC;IAAC,KAyBfmB,YAAY,GAAIC,QAAQ,IAAK;MAC3B,IAAI,CAACC,QAAQ,CAAC;QACZC,cAAc,EAAEF;MAClB,CAAC,CAAC;IACJ,CAAC;IA5BC,IAAI,CAACG,KAAK,GAAG;MACXD,cAAc,EAAE,IAAI;MACpBE,WAAW,EAAE,EAAE;MACfC,OAAO,EAAE;IACX,CAAC;EACH;EAEAC,iBAAiBA,CAAA,EAAG;IAClB;IACA,MAAMC,WAAW,GAAGC,OAAO,CAAC,YAAY,CAAC;IAEzCC,KAAK,CAACF,WAAW,CAAC,CACfG,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACnCF,IAAI,CAAEG,OAAO,IAAK;MACjB,MAAM;QAAEC;MAAK,CAAC,GAAGtC,KAAK,CAACqC,OAAO,EAAE;QAAEE,MAAM,EAAE;MAAK,CAAC,CAAC;MACjD,MAAMX,WAAW,GAAGY,MAAM,CAACC,IAAI,CAACH,IAAI,CAAC,CAAC,CAAC,CAAC;MACxC,MAAMT,OAAO,GAAGS,IAAI,CAACI,GAAG,CAAEC,GAAG,IAAKH,MAAM,CAACI,MAAM,CAACD,GAAG,CAAC,CAAC;MACrD,IAAI,CAAClB,QAAQ,CAAC;QAAEG,WAAW;QAAEC;MAAQ,CAAC,CAAC;IACzC,CAAC,CAAC,CACDgB,KAAK,CAAEC,KAAK,IAAK;MAChBC,OAAO,CAACD,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;IACjD,CAAC,CAAC;EACN;EAQAE,MAAMA,CAAA,EAAG;IACP,MAAM;MAAEpB,WAAW;MAAEF,cAAc;MAAEG;IAAQ,CAAC,GAAG,IAAI,CAACF,KAAK;IAC3D,MAAMsB,OAAO,GAAGpB,OAAO,CAACqB,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;;IAErC,oBACEhD,OAAA;MAAAG,QAAA,GACGuB,WAAW,CAACuB,MAAM,GAAG,CAAC,iBACrBjD,OAAA,CAACJ,WAAW;QACVsD,MAAM,EAAEpC,YAAa;QACrBqC,OAAO,EAAEzB,WAAW,CAACc,GAAG,CAAEY,IAAI,KAAM;UAAEC,KAAK,EAAED,IAAI;UAAExC,KAAK,EAAEwC;QAAK,CAAC,CAAC,CAAE;QACnEE,OAAO;QACPC,iBAAiB,EAAE,KAAM;QACzBC,mBAAmB,EAAE,KAAM;QAC3B3D,UAAU,EAAE;UACVI;QACF,CAAE;QACFM,QAAQ,EAAE,IAAI,CAACc,YAAa;QAC5BoC,cAAc,EAAE,IAAK;QACrBJ,KAAK,EAAE7B;MAAe;QAAAhB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACvB,CACF,EAEAoC,OAAO,CAACE,MAAM,GAAG,CAAC,iBACjBjD,OAAA;QAAO0D,SAAS,EAAC,WAAW;QAAAvD,QAAA,gBAC1BH,OAAA;UAAAG,QAAA,eACEH,OAAA;YAAAG,QAAA,EACGuB,WAAW,CAACc,GAAG,CAAEY,IAAI,iBACpBpD,OAAA;cAAAG,QAAA,EAAgBiD;YAAI,GAAXA,IAAI;cAAA5C,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAY,CAC1B;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACA;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACA,CAAC,eACRX,OAAA;UAAAG,QAAA,EACG4C,OAAO,CAACP,GAAG,CAAC,CAACC,GAAG,EAAEkB,KAAK,kBACtB3D,OAAA;YAAAG,QAAA,EACGsC,GAAG,CAACD,GAAG,CAAC,CAACa,KAAK,EAAEO,QAAQ,kBACvB5D,OAAA;cAAAG,QAAA,EAAoBkD;YAAK,GAAhBO,QAAQ;cAAApD,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAa,CAC/B;UAAC,GAHKgD,KAAK;YAAAnD,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAIV,CACL;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACG,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CACR;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CAAC;EAEV;AACF;AAEA,MAAMkD,WAAW,GAAGC,QAAQ,CAACC,cAAc,CAAC,MAAM,CAAC;AACnDrE,QAAQ,CAACoD,MAAM,eAAC9C,OAAA,CAACmB,OAAO;EAAAX,QAAA,EAAAC,YAAA;EAAAC,UAAA;EAAAC,YAAA;AAAA,OAAE,CAAC,EAAEkD,WAAW,CAAC;AAAC,IAAAhD,EAAA;AAAAmD,YAAA,CAAAnD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}