{"ast":null,"code":"var _jsxFileName = \"/Users/noopurnishikantzambare/Downloads/ROI Website/client/src/components/ChartComponent.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { Bar } from 'react-chartjs-2';\nimport Papa from 'papaparse';\nimport './ChartComponent.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Home() {\n  _s();\n  const [chartData, setChartData] = useState(null);\n  const [labelCountData, setLabelCountData] = useState([]);\n  const [clickedLabelIndex, setClickedLabelIndex] = useState(null);\n  useEffect(() => {\n    Papa.parse('/static/data.csv', {\n      download: true,\n      header: true,\n      dynamicTyping: true,\n      complete: result => {\n        const labelCounts = {};\n        result.data.forEach(item => {\n          const label = item['req1Product'];\n          if (label) {\n            if (labelCounts[label]) {\n              labelCounts[label] += 1;\n            } else {\n              labelCounts[label] = 1;\n            }\n          }\n        });\n        setChartData({\n          labels: Object.keys(labelCounts),\n          datasets: [{\n            label: 'Count',\n            data: Object.values(labelCounts),\n            borderColor: 'black',\n            backgroundColor: 'red'\n          }]\n        });\n      }\n    });\n  }, []);\n  const handleColumnClick = async (event, activeElements) => {\n    if (activeElements.length > 0) {\n      const labelIndex = activeElements[0].index;\n      setClickedLabelIndex(labelIndex);\n      const clickedLabel = chartData.labels[labelIndex];\n      const predictionLabelCounts = {};\n      await new Promise((resolve, reject) => {\n        Papa.parse('/static/data.csv', {\n          download: true,\n          header: true,\n          dynamicTyping: true,\n          complete: result => {\n            result.data.forEach(item => {\n              const prediction = item['prediction'];\n              const label = item['req1Product'];\n              if (label === clickedLabel && prediction !== undefined) {\n                if (predictionLabelCounts[prediction]) {\n                  predictionLabelCounts[prediction] += 1;\n                } else {\n                  predictionLabelCounts[prediction] = 1;\n                }\n              }\n            });\n            const labelCountChartData = {\n              labels: Object.keys(predictionLabelCounts),\n              datasets: [{\n                label: 'Count',\n                data: Object.values(predictionLabelCounts),\n                borderColor: 'black',\n                backgroundColor: ['red', 'blue']\n              }]\n            };\n            const labelCountChartOptions = {\n              responsive: true,\n              plugins: {\n                legend: {\n                  position: 'top'\n                },\n                title: {\n                  display: true,\n                  text: `Label Count for ${clickedLabel}`\n                }\n              },\n              scales: {\n                y: {\n                  beginAtZero: true,\n                  title: {\n                    display: true,\n                    text: 'Count'\n                  }\n                }\n              }\n            };\n            setLabelCountData(prevData => {\n              const newData = [...prevData];\n              newData[labelIndex] = {\n                chartData: labelCountChartData,\n                chartOptions: labelCountChartOptions\n              };\n              return newData;\n            });\n            resolve();\n          },\n          error: error => {\n            reject(error);\n          }\n        });\n      });\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Analysis\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 7\n    }, this), chartData ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"graph-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Bar, {\n          options: {\n            onClick: handleColumnClick\n          },\n          data: chartData\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: labelCountData.length > 0 && labelCountData[clickedLabelIndex] && /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: [\"Label Count for \", chartData.labels[clickedLabelIndex]]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Bar, {\n            options: labelCountData[clickedLabelIndex].chartOptions,\n            data: labelCountData[clickedLabelIndex].chartData\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 123,\n    columnNumber: 5\n  }, this);\n}\n_s(Home, \"bU5ASz2yWMzPtr4mz6Gfh8S9NHQ=\");\n_c = Home;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useEffect","useState","Bar","Papa","jsxDEV","_jsxDEV","Home","_s","chartData","setChartData","labelCountData","setLabelCountData","clickedLabelIndex","setClickedLabelIndex","parse","download","header","dynamicTyping","complete","result","labelCounts","data","forEach","item","label","labels","Object","keys","datasets","values","borderColor","backgroundColor","handleColumnClick","event","activeElements","length","labelIndex","index","clickedLabel","predictionLabelCounts","Promise","resolve","reject","prediction","undefined","labelCountChartData","labelCountChartOptions","responsive","plugins","legend","position","title","display","text","scales","y","beginAtZero","prevData","newData","chartOptions","error","children","fileName","_jsxFileName","lineNumber","columnNumber","className","options","onClick","_c","$RefreshReg$"],"sources":["/Users/noopurnishikantzambare/Downloads/ROI Website/client/src/components/ChartComponent.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { Bar } from 'react-chartjs-2';\nimport Papa from 'papaparse';\nimport './ChartComponent.css'\n\nfunction Home() {\n  const [chartData, setChartData] = useState(null);\n  const [labelCountData, setLabelCountData] = useState([]);\n  const [clickedLabelIndex, setClickedLabelIndex] = useState(null);\n\n  useEffect(() => {\n    Papa.parse('/static/data.csv', {\n      download: true,\n      header: true,\n      dynamicTyping: true,\n      complete: (result) => {\n        const labelCounts = {};\n        result.data.forEach((item) => {\n          const label = item['req1Product'];\n          if (label) {\n            if (labelCounts[label]) {\n              labelCounts[label] += 1;\n            } else {\n              labelCounts[label] = 1;\n            }\n          }\n        });\n        setChartData({\n          labels: Object.keys(labelCounts),\n          datasets: [\n            {\n              label: 'Count',\n              data: Object.values(labelCounts),\n              borderColor: 'black',\n              backgroundColor: 'red',\n            },\n          ],\n        });\n      },\n    });\n  }, []);\n\n  const handleColumnClick = async (event, activeElements) => {\n    if (activeElements.length > 0) {\n      const labelIndex = activeElements[0].index;\n      setClickedLabelIndex(labelIndex);\n\n      const clickedLabel = chartData.labels[labelIndex];\n\n      const predictionLabelCounts = {};\n      await new Promise((resolve, reject) => {\n        Papa.parse('/static/data.csv', {\n          download: true,\n          header: true,\n          dynamicTyping: true,\n          complete: (result) => {\n            result.data.forEach((item) => {\n              const prediction = item['prediction'];\n              const label = item['req1Product'];\n\n              if (label === clickedLabel && prediction !== undefined) {\n                if (predictionLabelCounts[prediction]) {\n                  predictionLabelCounts[prediction] += 1;\n                } else {\n                  predictionLabelCounts[prediction] = 1;\n                }\n              }\n            });\n\n            const labelCountChartData = {\n              labels: Object.keys(predictionLabelCounts),\n              datasets: [\n                {\n                  label: 'Count',\n                  data: Object.values(predictionLabelCounts),\n                  borderColor: 'black',\n                  backgroundColor: ['red', 'blue'],\n                },\n              ],\n            };\n\n            const labelCountChartOptions = {\n              responsive: true,\n              plugins: {\n                legend: {\n                  position: 'top',\n                },\n                title: {\n                  display: true,\n                  text: `Label Count for ${clickedLabel}`,\n                },\n              },\n              scales: {\n                y: {\n                  beginAtZero: true,\n                  title: {\n                    display: true,\n                    text: 'Count',\n                  },\n                },\n              },\n            };\n\n            setLabelCountData((prevData) => {\n              const newData = [...prevData];\n              newData[labelIndex] = {\n                chartData: labelCountChartData,\n                chartOptions: labelCountChartOptions,\n              };\n              return newData;\n            });\n\n            resolve();\n          },\n          error: (error) => {\n            reject(error);\n          },\n        });\n      });\n    }\n  };\n  return (\n    <div>\n      <h3>Analysis</h3>\n      {chartData ? (\n        <div className=\"graph-container\">\n          <div>\n            <Bar options={{ onClick: handleColumnClick }} data={chartData} />\n          </div>\n          <div>\n            {labelCountData.length > 0 && labelCountData[clickedLabelIndex] && (\n              <div>\n                <h2>Label Count for {chartData.labels[clickedLabelIndex]}</h2>\n                <Bar\n                  options={labelCountData[clickedLabelIndex].chartOptions}\n                  data={labelCountData[clickedLabelIndex].chartData}\n                />\n              </div>\n            )}\n          </div>\n        </div>\n      ) : (\n        <div>Loading...</div>\n      )}\n    </div>\n  );\n  \n}\n\nexport default Home;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,GAAG,QAAQ,iBAAiB;AACrC,OAAOC,IAAI,MAAM,WAAW;AAC5B,OAAO,sBAAsB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE7B,SAASC,IAAIA,CAAA,EAAG;EAAAC,EAAA;EACd,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGR,QAAQ,CAAC,IAAI,CAAC;EAChD,MAAM,CAACS,cAAc,EAAEC,iBAAiB,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EACxD,MAAM,CAACW,iBAAiB,EAAEC,oBAAoB,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC;EAEhED,SAAS,CAAC,MAAM;IACdG,IAAI,CAACW,KAAK,CAAC,kBAAkB,EAAE;MAC7BC,QAAQ,EAAE,IAAI;MACdC,MAAM,EAAE,IAAI;MACZC,aAAa,EAAE,IAAI;MACnBC,QAAQ,EAAGC,MAAM,IAAK;QACpB,MAAMC,WAAW,GAAG,CAAC,CAAC;QACtBD,MAAM,CAACE,IAAI,CAACC,OAAO,CAAEC,IAAI,IAAK;UAC5B,MAAMC,KAAK,GAAGD,IAAI,CAAC,aAAa,CAAC;UACjC,IAAIC,KAAK,EAAE;YACT,IAAIJ,WAAW,CAACI,KAAK,CAAC,EAAE;cACtBJ,WAAW,CAACI,KAAK,CAAC,IAAI,CAAC;YACzB,CAAC,MAAM;cACLJ,WAAW,CAACI,KAAK,CAAC,GAAG,CAAC;YACxB;UACF;QACF,CAAC,CAAC;QACFf,YAAY,CAAC;UACXgB,MAAM,EAAEC,MAAM,CAACC,IAAI,CAACP,WAAW,CAAC;UAChCQ,QAAQ,EAAE,CACR;YACEJ,KAAK,EAAE,OAAO;YACdH,IAAI,EAAEK,MAAM,CAACG,MAAM,CAACT,WAAW,CAAC;YAChCU,WAAW,EAAE,OAAO;YACpBC,eAAe,EAAE;UACnB,CAAC;QAEL,CAAC,CAAC;MACJ;IACF,CAAC,CAAC;EACJ,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMC,iBAAiB,GAAG,MAAAA,CAAOC,KAAK,EAAEC,cAAc,KAAK;IACzD,IAAIA,cAAc,CAACC,MAAM,GAAG,CAAC,EAAE;MAC7B,MAAMC,UAAU,GAAGF,cAAc,CAAC,CAAC,CAAC,CAACG,KAAK;MAC1CxB,oBAAoB,CAACuB,UAAU,CAAC;MAEhC,MAAME,YAAY,GAAG9B,SAAS,CAACiB,MAAM,CAACW,UAAU,CAAC;MAEjD,MAAMG,qBAAqB,GAAG,CAAC,CAAC;MAChC,MAAM,IAAIC,OAAO,CAAC,CAACC,OAAO,EAAEC,MAAM,KAAK;QACrCvC,IAAI,CAACW,KAAK,CAAC,kBAAkB,EAAE;UAC7BC,QAAQ,EAAE,IAAI;UACdC,MAAM,EAAE,IAAI;UACZC,aAAa,EAAE,IAAI;UACnBC,QAAQ,EAAGC,MAAM,IAAK;YACpBA,MAAM,CAACE,IAAI,CAACC,OAAO,CAAEC,IAAI,IAAK;cAC5B,MAAMoB,UAAU,GAAGpB,IAAI,CAAC,YAAY,CAAC;cACrC,MAAMC,KAAK,GAAGD,IAAI,CAAC,aAAa,CAAC;cAEjC,IAAIC,KAAK,KAAKc,YAAY,IAAIK,UAAU,KAAKC,SAAS,EAAE;gBACtD,IAAIL,qBAAqB,CAACI,UAAU,CAAC,EAAE;kBACrCJ,qBAAqB,CAACI,UAAU,CAAC,IAAI,CAAC;gBACxC,CAAC,MAAM;kBACLJ,qBAAqB,CAACI,UAAU,CAAC,GAAG,CAAC;gBACvC;cACF;YACF,CAAC,CAAC;YAEF,MAAME,mBAAmB,GAAG;cAC1BpB,MAAM,EAAEC,MAAM,CAACC,IAAI,CAACY,qBAAqB,CAAC;cAC1CX,QAAQ,EAAE,CACR;gBACEJ,KAAK,EAAE,OAAO;gBACdH,IAAI,EAAEK,MAAM,CAACG,MAAM,CAACU,qBAAqB,CAAC;gBAC1CT,WAAW,EAAE,OAAO;gBACpBC,eAAe,EAAE,CAAC,KAAK,EAAE,MAAM;cACjC,CAAC;YAEL,CAAC;YAED,MAAMe,sBAAsB,GAAG;cAC7BC,UAAU,EAAE,IAAI;cAChBC,OAAO,EAAE;gBACPC,MAAM,EAAE;kBACNC,QAAQ,EAAE;gBACZ,CAAC;gBACDC,KAAK,EAAE;kBACLC,OAAO,EAAE,IAAI;kBACbC,IAAI,EAAG,mBAAkBf,YAAa;gBACxC;cACF,CAAC;cACDgB,MAAM,EAAE;gBACNC,CAAC,EAAE;kBACDC,WAAW,EAAE,IAAI;kBACjBL,KAAK,EAAE;oBACLC,OAAO,EAAE,IAAI;oBACbC,IAAI,EAAE;kBACR;gBACF;cACF;YACF,CAAC;YAED1C,iBAAiB,CAAE8C,QAAQ,IAAK;cAC9B,MAAMC,OAAO,GAAG,CAAC,GAAGD,QAAQ,CAAC;cAC7BC,OAAO,CAACtB,UAAU,CAAC,GAAG;gBACpB5B,SAAS,EAAEqC,mBAAmB;gBAC9Bc,YAAY,EAAEb;cAChB,CAAC;cACD,OAAOY,OAAO;YAChB,CAAC,CAAC;YAEFjB,OAAO,CAAC,CAAC;UACX,CAAC;UACDmB,KAAK,EAAGA,KAAK,IAAK;YAChBlB,MAAM,CAACkB,KAAK,CAAC;UACf;QACF,CAAC,CAAC;MACJ,CAAC,CAAC;IACJ;EACF,CAAC;EACD,oBACEvD,OAAA;IAAAwD,QAAA,gBACExD,OAAA;MAAAwD,QAAA,EAAI;IAAQ;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EAChBzD,SAAS,gBACRH,OAAA;MAAK6D,SAAS,EAAC,iBAAiB;MAAAL,QAAA,gBAC9BxD,OAAA;QAAAwD,QAAA,eACExD,OAAA,CAACH,GAAG;UAACiE,OAAO,EAAE;YAAEC,OAAO,EAAEpC;UAAkB,CAAE;UAACX,IAAI,EAAEb;QAAU;UAAAsD,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC9D,CAAC,eACN5D,OAAA;QAAAwD,QAAA,EACGnD,cAAc,CAACyB,MAAM,GAAG,CAAC,IAAIzB,cAAc,CAACE,iBAAiB,CAAC,iBAC7DP,OAAA;UAAAwD,QAAA,gBACExD,OAAA;YAAAwD,QAAA,GAAI,kBAAgB,EAACrD,SAAS,CAACiB,MAAM,CAACb,iBAAiB,CAAC;UAAA;YAAAkD,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,eAC9D5D,OAAA,CAACH,GAAG;YACFiE,OAAO,EAAEzD,cAAc,CAACE,iBAAiB,CAAC,CAAC+C,YAAa;YACxDtC,IAAI,EAAEX,cAAc,CAACE,iBAAiB,CAAC,CAACJ;UAAU;YAAAsD,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACnD,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACC;MACN;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,gBAEN5D,OAAA;MAAAwD,QAAA,EAAK;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CACrB;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAGV;AAAC1D,EAAA,CA9IQD,IAAI;AAAA+D,EAAA,GAAJ/D,IAAI;AAgJb,eAAeA,IAAI;AAAC,IAAA+D,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}