{"ast":null,"code":"import _objectSpread from\"/Users/noopurnishikantzambare/Downloads/ROI_Website_GitHub_Noopur/2023/client/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import _regeneratorRuntime from\"/Users/noopurnishikantzambare/Downloads/ROI_Website_GitHub_Noopur/2023/client/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";import _toConsumableArray from\"/Users/noopurnishikantzambare/Downloads/ROI_Website_GitHub_Noopur/2023/client/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";import _asyncToGenerator from\"/Users/noopurnishikantzambare/Downloads/ROI_Website_GitHub_Noopur/2023/client/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _slicedToArray from\"/Users/noopurnishikantzambare/Downloads/ROI_Website_GitHub_Noopur/2023/client/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";/* Function - Displays train data, count of occurances of each product requirement in requirements and count of occurances of its label\n        Pass In: train data & test data (.csv)\n        Pass Out: interactive graphs\n    Endfunction */import Papa from'papaparse';import{useEffect,useState}from'react';import{Bar}from'react-chartjs-2';import{Chart as ChartJS,CategoryScale,LinearScale,BarElement,Title,Tooltip,Legend}from'chart.js';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";ChartJS.register(CategoryScale,LinearScale,BarElement,Title,Tooltip,Legend);function Home(){var _useState=useState({datasets:[]}),_useState2=_slicedToArray(_useState,2),chartData=_useState2[0],setChartData=_useState2[1];var _useState3=useState({}),_useState4=_slicedToArray(_useState3,2),chartOptions=_useState4[0],setChartOptions=_useState4[1];var _useState5=useState([]),_useState6=_slicedToArray(_useState5,2),labelCountData=_useState6[0],setLabelCountData=_useState6[1];var _useState7=useState(null),_useState8=_slicedToArray(_useState7,2),clickedLabelIndex=_useState8[0],setClickedLabelIndex=_useState8[1];var _useState9=useState(true),_useState10=_slicedToArray(_useState9,2),showDoubleBarGraph=_useState10[0],setShowDoubleBarGraph=_useState10[1];useEffect(function(){Papa.parse('/static/data.csv',{download:true,header:true,dynamicTyping:true,delimiter:\"\",complete:function complete(result){var labelCounts={};result.data.forEach(function(item){var label=item['req1Product'];if(label){if(labelCounts[label]){labelCounts[label]+=1;}else{labelCounts[label]=1;}}});setChartData({labels:Object.keys(labelCounts),datasets:[{label:\"Count\",data:Object.values(labelCounts),borderColor:\"white\",backgroundColor:\"#defde0\"}]});setChartOptions({responsive:true,plugins:{legend:{position:'top'},title:{display:true,text:\"Count of req1Product Values\",color:'white'}},scales:{x:{ticks:{color:'white'}},y:{beginAtZero:true,title:{display:true,text:\"Count\",color:'white'},ticks:{color:'white'}}}});}});},[]);var handleColumnClick=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(event,activeElements){var labelIndex,clickedLabel,predictionLabelCounts,req2ProductCounts;return _regeneratorRuntime().wrap(function _callee$(_context){while(1)switch(_context.prev=_context.next){case 0:if(!(activeElements.length>0)){_context.next=13;break;}labelIndex=activeElements[0].index;setClickedLabelIndex(labelIndex);clickedLabel=chartData.labels[labelIndex];if(!showDoubleBarGraph){_context.next=10;break;}predictionLabelCounts={};_context.next=8;return new Promise(function(resolve,reject){Papa.parse('/static/data.csv',{download:true,header:true,dynamicTyping:true,delimiter:\"\",complete:function complete(result){result.data.forEach(function(item){var prediction=item['Label'];var label=item['req1Product'];if(label===clickedLabel&&prediction!==undefined){if(predictionLabelCounts[prediction]){predictionLabelCounts[prediction]+=1;}else{predictionLabelCounts[prediction]=1;}}});var labelCountChartData={labels:Object.keys(predictionLabelCounts),datasets:[{label:\"Count\",data:Object.values(predictionLabelCounts),borderColor:\"white\",backgroundColor:[\"#ff4040\",\"#B6E4EB\",\"#ffc500\"]}]};var labelCountChartOptions={responsive:true,plugins:{legend:{position:'top'},title:{display:true,text:\"Label Count for \".concat(clickedLabel),color:'white'}},scales:{x:{ticks:{color:'white'}},y:{beginAtZero:true,title:{display:true,text:\"Count\",color:'white'},ticks:{color:'white'}}}};setLabelCountData(function(prevData){var newData=_toConsumableArray(prevData);newData[labelIndex]={chartData:labelCountChartData,chartOptions:labelCountChartOptions};return newData;});resolve();},error:function error(_error){reject(_error);}});});case 8:_context.next=13;break;case 10:req2ProductCounts={};_context.next=13;return new Promise(function(resolve,reject){Papa.parse('/static/data.csv',{download:true,header:true,dynamicTyping:true,delimiter:\"\",complete:function complete(result){result.data.forEach(function(item){var req2Product=item['req2Product'];var label=item['req1Product'];if(label===clickedLabel&&req2Product){if(req2ProductCounts[req2Product]){req2ProductCounts[req2Product]+=1;}else{req2ProductCounts[req2Product]=1;}}});var req2ProductChartData={labels:Object.keys(req2ProductCounts),datasets:[{label:\"Count\",data:Object.values(req2ProductCounts),borderColor:\"white\",backgroundColor:[\"#ff4040\",\"#B6E4EB\",\"#ffc500\"]}]};var req2ProductChartOptions={responsive:true,plugins:{legend:{position:'top'},title:{display:true,text:\"Req2Product Count for \".concat(clickedLabel),color:'white'}},scales:{x:{ticks:{color:'white'}},y:{beginAtZero:true,title:{display:true,text:\"Count\",color:'white'},ticks:{color:'white'}}}};setLabelCountData(function(prevData){var newData=_toConsumableArray(prevData);newData[labelIndex]={chartData:req2ProductChartData,chartOptions:req2ProductChartOptions};return newData;});resolve();},error:function error(_error2){reject(_error2);}});});case 13:case\"end\":return _context.stop();}},_callee);}));return function handleColumnClick(_x,_x2){return _ref.apply(this,arguments);};}();var handleCountButtonClick=function handleCountButtonClick(){setShowDoubleBarGraph(!showDoubleBarGraph);};return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h4\",{children:\"Analysis\"}),/*#__PURE__*/_jsx(\"div\",{className:\"import-boxes\"}),chartData?/*#__PURE__*/_jsxs(\"div\",{className:\"graph-container\",children:[/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(Bar,{options:_objectSpread({onClick:handleColumnClick},chartOptions),data:chartData}),/*#__PURE__*/_jsx(\"button\",{onClick:handleCountButtonClick,children:showDoubleBarGraph?\"Interdependency among other products\":\"Individual Feature Count\"})]}),/*#__PURE__*/_jsx(\"div\",{children:labelCountData.length>0&&labelCountData[clickedLabelIndex]&&/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h4\",{children:showDoubleBarGraph?\"Label Count for \".concat(chartData.labels[clickedLabelIndex]):\"Req2Product Count for \".concat(chartData.labels[clickedLabelIndex])}),/*#__PURE__*/_jsx(Bar,{options:labelCountData[clickedLabelIndex].chartOptions,data:labelCountData[clickedLabelIndex].chartData})]})})]}):/*#__PURE__*/_jsx(\"div\",{children:\"Loading...\"}),/*#__PURE__*/_jsx(\"style\",{children:\"\\n        .graph-container {\\n          width: 600px;\\n          height: 400px;\\n          margin: 0 auto;\\n        }\\n      \"})]});}export default Home;","map":{"version":3,"names":["Papa","useEffect","useState","Bar","Chart","ChartJS","CategoryScale","LinearScale","BarElement","Title","Tooltip","Legend","jsx","_jsx","jsxs","_jsxs","register","Home","_useState","datasets","_useState2","_slicedToArray","chartData","setChartData","_useState3","_useState4","chartOptions","setChartOptions","_useState5","_useState6","labelCountData","setLabelCountData","_useState7","_useState8","clickedLabelIndex","setClickedLabelIndex","_useState9","_useState10","showDoubleBarGraph","setShowDoubleBarGraph","parse","download","header","dynamicTyping","delimiter","complete","result","labelCounts","data","forEach","item","label","labels","Object","keys","values","borderColor","backgroundColor","responsive","plugins","legend","position","title","display","text","color","scales","x","ticks","y","beginAtZero","handleColumnClick","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","event","activeElements","labelIndex","clickedLabel","predictionLabelCounts","req2ProductCounts","wrap","_callee$","_context","prev","next","length","index","Promise","resolve","reject","prediction","undefined","labelCountChartData","labelCountChartOptions","concat","prevData","newData","_toConsumableArray","error","req2Product","req2ProductChartData","req2ProductChartOptions","stop","_x","_x2","apply","arguments","handleCountButtonClick","children","className","options","_objectSpread","onClick"],"sources":["/Users/noopurnishikantzambare/Downloads/ROI_Website_GitHub_Noopur/2023/client/src/components/ChartComponent.js"],"sourcesContent":["/* Function - Displays train data, count of occurances of each product requirement in requirements and count of occurances of its label\n        Pass In: train data & test data (.csv)\n        Pass Out: interactive graphs\n    Endfunction */\n\nimport Papa from 'papaparse';\nimport { useEffect, useState } from 'react';\nimport { Bar } from 'react-chartjs-2';\nimport { Chart as ChartJS, CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend } from 'chart.js';\n\nChartJS.register(CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend);\n\nfunction Home() {\n  const [chartData, setChartData] = useState({\n    datasets: []\n  });\n  const [chartOptions, setChartOptions] = useState({});\n  const [labelCountData, setLabelCountData] = useState([]);\n  const [clickedLabelIndex, setClickedLabelIndex] = useState(null);\n  const [showDoubleBarGraph, setShowDoubleBarGraph] = useState(true);\n  \n  useEffect(() => {\n    Papa.parse('/static/data.csv', {\n      download: true,\n      header: true,\n      dynamicTyping: true,\n      delimiter: \"\",\n      complete: (result) => {\n        const labelCounts = {};\n\n        result.data.forEach((item) => {\n          const label = item['req1Product'];\n\n          if (label) {\n            if (labelCounts[label]) {\n              labelCounts[label] += 1;\n            } else {\n              labelCounts[label] = 1;\n            }\n          }\n        });\n\n        setChartData({\n          labels: Object.keys(labelCounts),\n          datasets: [\n            {\n              label: \"Count\",\n              data: Object.values(labelCounts),\n              borderColor: \"white\",\n              backgroundColor: \"#defde0\"\n            }\n          ]\n        });\n\n        setChartOptions({\n          responsive: true,\n          plugins: {\n            legend: {\n              position: 'top'\n            },\n            title: {\n              display: true,\n              text: \"Count of req1Product Values\",\n              color: 'white'\n            }\n          },\n          scales: {\n            x: {\n              ticks: {\n                color: 'white'\n              }\n            },\n            y: {\n              beginAtZero: true,\n              title: {\n                display: true,\n                text: \"Count\",\n                color: 'white'\n              },\n              ticks: {\n                color: 'white'\n              }\n            }\n          }\n        });\n      }\n    });\n  }, []);\n\n  const handleColumnClick = async (event, activeElements) => {\n    if (activeElements.length > 0) {\n      const labelIndex = activeElements[0].index;\n      setClickedLabelIndex(labelIndex); \n\n      const clickedLabel = chartData.labels[labelIndex];\n\n      if (showDoubleBarGraph) {\n      \n        const predictionLabelCounts = {};\n        await new Promise((resolve, reject) => {\n          Papa.parse('/static/data.csv', {\n            download: true,\n            header: true,\n            dynamicTyping: true,\n            delimiter: \"\",\n            complete: (result) => {\n              result.data.forEach((item) => {\n                const prediction = item['Label'];\n                const label = item['req1Product'];\n\n                if (label === clickedLabel && prediction !== undefined) {\n                  if (predictionLabelCounts[prediction]) {\n                    predictionLabelCounts[prediction] += 1;\n                  } else {\n                    predictionLabelCounts[prediction] = 1;\n                  }\n                }\n              });\n\n              const labelCountChartData = {\n                labels: Object.keys(predictionLabelCounts),\n                datasets: [\n                  {\n                    label: \"Count\",\n                    data: Object.values(predictionLabelCounts),\n                    borderColor: \"white\",\n                    backgroundColor: [\"#ff4040\", \"#B6E4EB\",\"#ffc500\"]\n                  }\n                ]\n              };\n\n              const labelCountChartOptions = {\n                responsive: true,\n                plugins: {\n                  legend: {\n                    position: 'top'\n                  },\n                  title: {\n                    display: true,\n                    text: `Label Count for ${clickedLabel}`,\n                    color: 'white'\n                  }\n                },\n                scales: {\n                  x: {\n                    ticks: {\n                      color: 'white'\n                    }\n                  },\n                  y: {\n                    beginAtZero: true,\n                    title: {\n                      display: true,\n                      text: \"Count\",\n                      color: 'white'\n                    },\n                    ticks: {\n                      color: 'white'\n                    }\n                  }\n                }\n              };\n\n              setLabelCountData((prevData) => {\n                const newData = [...prevData];\n                newData[labelIndex] = {\n                  chartData: labelCountChartData,\n                  chartOptions: labelCountChartOptions\n                };\n                return newData;\n              });\n\n              resolve();\n            },\n            error: (error) => {\n              reject(error);\n            }\n          });\n        });\n      } else {\n       \n        const req2ProductCounts = {};\n        await new Promise((resolve, reject) => {\n          Papa.parse('/static/data.csv', {\n            download: true,\n            header: true,\n            dynamicTyping: true,\n            delimiter: \"\",\n            complete: (result) => {\n              result.data.forEach((item) => {\n                const req2Product = item['req2Product'];\n                const label = item['req1Product'];\n\n                if (label === clickedLabel && req2Product) {\n                  if (req2ProductCounts[req2Product]) {\n                    req2ProductCounts[req2Product] += 1;\n                  } else {\n                    req2ProductCounts[req2Product] = 1;\n                  }\n                }\n              });\n\n              const req2ProductChartData = {\n                labels: Object.keys(req2ProductCounts),\n                datasets: [\n                  {\n                    label: \"Count\",\n                    data: Object.values(req2ProductCounts),\n                    borderColor: \"white\",\n                    backgroundColor: [\"#ff4040\", \"#B6E4EB\", \"#ffc500\"]\n                  }\n                ]\n              };\n\n              const req2ProductChartOptions = {\n                responsive: true,\n                plugins: {\n                  legend: {\n                    position: 'top'\n                  },\n                  title: {\n                    display: true,\n                    text: `Req2Product Count for ${clickedLabel}`,\n                    color: 'white'\n                  }\n                },\n                scales: {\n                  x: {\n                    ticks: {\n                      color: 'white'\n                    }\n                  },\n                  y: {\n                    beginAtZero: true,\n                    title: {\n                      display: true,\n                      text: \"Count\",\n                      color: 'white'\n                    },\n                    ticks: {\n                      color: 'white'\n                    }\n                  }\n                }\n              };\n\n              setLabelCountData((prevData) => {\n                const newData = [...prevData];\n                newData[labelIndex] = {\n                  chartData: req2ProductChartData,\n                  chartOptions: req2ProductChartOptions\n                };\n                return newData;\n              });\n\n              resolve();\n            },\n            error: (error) => {\n              reject(error);\n            }\n          });\n        });\n      }\n    }\n  };\n\n  const handleCountButtonClick = () => {\n    setShowDoubleBarGraph(!showDoubleBarGraph);\n  };\n\n  return (\n    <div>\n      <h4>Analysis</h4>\n      <div className=\"import-boxes\"></div>\n      {chartData ? (\n        <div className=\"graph-container\">\n          <div>\n            <Bar options={{ onClick: handleColumnClick, ...chartOptions }} data={chartData} />\n            <button onClick={handleCountButtonClick}>\n              {showDoubleBarGraph ? \"Interdependency among other products\" : \"Individual Feature Count\"}\n            </button>\n          </div>\n          <div>\n            {labelCountData.length > 0 && labelCountData[clickedLabelIndex] && (\n              <div>\n                <h4>\n                  {showDoubleBarGraph\n                    ? `Label Count for ${chartData.labels[clickedLabelIndex]}`\n                    : `Req2Product Count for ${chartData.labels[clickedLabelIndex]}`}\n                </h4>\n                <Bar\n                  options={labelCountData[clickedLabelIndex].chartOptions}\n                  data={labelCountData[clickedLabelIndex].chartData}\n                />\n              </div>\n            )}\n          </div>\n        </div>\n      ) : (\n        <div>Loading...</div>\n      )}\n      <style>{`\n        .graph-container {\n          width: 600px;\n          height: 400px;\n          margin: 0 auto;\n        }\n      `}</style>\n    </div>\n  );\n}\n\nexport default Home;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}