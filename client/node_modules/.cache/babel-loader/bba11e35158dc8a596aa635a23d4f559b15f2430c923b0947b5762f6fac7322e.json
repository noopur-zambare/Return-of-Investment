{"ast":null,"code":"var _jsxFileName = \"/Users/noopurnishikantzambare/Downloads/ROI Website/client/src/components/ColumnFilter.js\";\nimport React, { Component } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { default as ReactSelect, components } from \"react-select\";\nimport { parse } from \"papaparse\"; // CSV parsing library\nimport \"./ColumnFilter.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Option = props => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(components.Option, {\n      ...props,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\",\n        checked: props.isSelected,\n        onChange: () => null\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 9\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"label\", {\n        children: props.label\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 5\n  }, this);\n};\n_c = Option;\nconst customStyles = {\n  control: provided => ({\n    ...provided,\n    backgroundColor: \"white\",\n    // Change the background color\n    color: \"black\" // Change the text color\n  }),\n\n  option: (provided, state) => ({\n    ...provided,\n    backgroundColor: state.isFocused ? \"#e6f7ff\" : \"transparent\",\n    // Change the hover color\n    color: \"black\" // Change the text color\n  })\n};\n\nexport default class Example extends Component {\n  constructor(props) {\n    super(props);\n    this.handleFileUpload = event => {\n      const file = event.target.files[0];\n      const reader = new FileReader();\n      reader.onload = e => {\n        const csvText = e.target.result;\n        const {\n          data\n        } = parse(csvText, {\n          header: true\n        });\n        const columnNames = Object.keys(data[0]);\n        this.setState({\n          columnNames\n        });\n      };\n      reader.readAsText(file);\n    };\n    this.handleChange = selected => {\n      this.setState({\n        optionSelected: selected\n      });\n    };\n    this.state = {\n      optionSelected: null,\n      columnNames: []\n    };\n  }\n  render() {\n    const {\n      columnNames,\n      optionSelected\n    } = this.state;\n    if (columnNames.length === 0) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          onChange: this.handleFileUpload\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Loading...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this);\n    }\n    const options = [{\n      value: \"select-all\",\n      label: \"Select All\"\n    }, ...columnNames.map(name => ({\n      value: name,\n      label: name\n    }))];\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        onChange: this.handleFileUpload\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ReactSelect, {\n        styles: customStyles,\n        options: options,\n        isMulti: true,\n        closeMenuOnSelect: false,\n        hideSelectedOptions: false,\n        components: {\n          Option\n        },\n        onChange: this.handleChange,\n        allowSelectAll: true,\n        value: optionSelected,\n        placeholder: \"Custom Placeholder\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this);\n  }\n}\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render( /*#__PURE__*/_jsxDEV(Example, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 104,\n  columnNumber: 17\n}, this), rootElement);\nvar _c;\n$RefreshReg$(_c, \"Option\");","map":{"version":3,"names":["React","Component","ReactDOM","default","ReactSelect","components","parse","jsxDEV","_jsxDEV","Option","props","children","type","checked","isSelected","onChange","fileName","_jsxFileName","lineNumber","columnNumber","label","_c","customStyles","control","provided","backgroundColor","color","option","state","isFocused","Example","constructor","handleFileUpload","event","file","target","files","reader","FileReader","onload","e","csvText","result","data","header","columnNames","Object","keys","setState","readAsText","handleChange","selected","optionSelected","render","length","options","value","map","name","styles","isMulti","closeMenuOnSelect","hideSelectedOptions","allowSelectAll","placeholder","rootElement","document","getElementById","$RefreshReg$"],"sources":["/Users/noopurnishikantzambare/Downloads/ROI Website/client/src/components/ColumnFilter.js"],"sourcesContent":["import React, { Component } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { default as ReactSelect, components } from \"react-select\";\nimport { parse } from \"papaparse\"; // CSV parsing library\nimport \"./ColumnFilter.css\";\n\nconst Option = (props) => {\n  return (\n    <div>\n      <components.Option {...props}>\n        <input\n          type=\"checkbox\"\n          checked={props.isSelected}\n          onChange={() => null}\n        />{\" \"}\n        <label>{props.label}</label>\n      </components.Option>\n    </div>\n  );\n};\n\nconst customStyles = {\n  control: (provided) => ({\n    ...provided,\n    backgroundColor: \"white\", // Change the background color\n    color: \"black\", // Change the text color\n  }),\n  option: (provided, state) => ({\n    ...provided,\n    backgroundColor: state.isFocused ? \"#e6f7ff\" : \"transparent\", // Change the hover color\n    color: \"black\", // Change the text color\n  }),\n};\n\nexport default class Example extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      optionSelected: null,\n      columnNames: [],\n    };\n  }\n\n  handleFileUpload = (event) => {\n    const file = event.target.files[0];\n    const reader = new FileReader();\n\n    reader.onload = (e) => {\n      const csvText = e.target.result;\n      const { data } = parse(csvText, { header: true });\n      const columnNames = Object.keys(data[0]);\n      this.setState({ columnNames });\n    };\n\n    reader.readAsText(file);\n  };\n\n  handleChange = (selected) => {\n    this.setState({\n      optionSelected: selected,\n    });\n  };\n\n  render() {\n    const { columnNames, optionSelected } = this.state;\n\n    if (columnNames.length === 0) {\n      return (\n        <div>\n          <input type=\"file\" onChange={this.handleFileUpload} />\n          <p>Loading...</p>\n        </div>\n      );\n    }\n\n    const options = [\n      { value: \"select-all\", label: \"Select All\" },\n      ...columnNames.map((name) => ({ value: name, label: name })),\n    ];\n\n    return (\n      <div>\n        <input type=\"file\" onChange={this.handleFileUpload} />\n        <ReactSelect\n          styles={customStyles}\n          options={options}\n          isMulti\n          closeMenuOnSelect={false}\n          hideSelectedOptions={false}\n          components={{\n            Option,\n          }}\n          onChange={this.handleChange}\n          allowSelectAll={true}\n          value={optionSelected}\n          placeholder=\"Custom Placeholder\"\n        />\n      </div>\n    );\n  }\n}\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(<Example />, rootElement);\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}