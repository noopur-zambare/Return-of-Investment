{"ast":null,"code":"var _jsxFileName = \"/Users/noopurnishikantzambare/Downloads/ROI Website/client/src/components/ColumnFilter.js\";\nimport React, { Component } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { default as ReactSelect, components } from \"react-select\";\nimport { parse } from \"papaparse\"; // CSV parsing library\nimport \"./ColumnFilter.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Option = props => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(components.Option, {\n      ...props,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\",\n        checked: props.isSelected,\n        onChange: () => null\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 9\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"label\", {\n        children: props.label\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 5\n  }, this);\n};\n_c = Option;\nconst customStyles = {\n  control: provided => ({\n    ...provided,\n    backgroundColor: \"white\",\n    // Change the background color\n    color: \"black\" // Change the text color\n  }),\n\n  option: (provided, state) => ({\n    ...provided,\n    backgroundColor: state.isFocused ? \"#e6f7ff\" : \"transparent\",\n    // Change the hover color\n    color: \"black\" // Change the text color\n  })\n};\n\nexport default class Example extends Component {\n  constructor(props) {\n    super(props);\n    this.handleChange = selected => {\n      this.setState({\n        optionSelected: selected\n      });\n    };\n    this.state = {\n      optionSelected: null,\n      columnNames: []\n    };\n  }\n  componentDidMount() {\n    // Load the CSV file from a relative path\n    const {\n      trainData\n    } = this.props;\n    const reader = new FileReader();\n    reader.onload = e => {\n      const csvText = e.target.result;\n      const {\n        data\n      } = parse(csvText, {\n        header: true\n      });\n      const columnNames = Object.keys(data[0]);\n      this.setState({\n        columnNames\n      });\n    };\n    reader.readAsText(trainData);\n  }\n  render() {\n    const {\n      columnNames,\n      optionSelected\n    } = this.state;\n    if (columnNames.length === 0) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 14\n      }, this);\n    }\n    const options = [{\n      value: \"select-all\",\n      label: \"Select All\"\n    }, ...columnNames.map(name => ({\n      value: name,\n      label: name\n    }))];\n    return /*#__PURE__*/_jsxDEV(ReactSelect, {\n      styles: customStyles,\n      options: options,\n      isMulti: true,\n      closeMenuOnSelect: false,\n      hideSelectedOptions: false,\n      components: {\n        Option\n      },\n      onChange: this.handleChange,\n      allowSelectAll: true,\n      value: optionSelected,\n      placeholder: \"Custom Placeholder\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this);\n  }\n}\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render( /*#__PURE__*/_jsxDEV(Example, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 97,\n  columnNumber: 17\n}, this), rootElement);\nvar _c;\n$RefreshReg$(_c, \"Option\");","map":{"version":3,"names":["React","Component","ReactDOM","default","ReactSelect","components","parse","jsxDEV","_jsxDEV","Option","props","children","type","checked","isSelected","onChange","fileName","_jsxFileName","lineNumber","columnNumber","label","_c","customStyles","control","provided","backgroundColor","color","option","state","isFocused","Example","constructor","handleChange","selected","setState","optionSelected","columnNames","componentDidMount","trainData","reader","FileReader","onload","e","csvText","target","result","data","header","Object","keys","readAsText","render","length","options","value","map","name","styles","isMulti","closeMenuOnSelect","hideSelectedOptions","allowSelectAll","placeholder","rootElement","document","getElementById","$RefreshReg$"],"sources":["/Users/noopurnishikantzambare/Downloads/ROI Website/client/src/components/ColumnFilter.js"],"sourcesContent":["import React, { Component } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { default as ReactSelect, components } from \"react-select\";\nimport { parse } from \"papaparse\"; // CSV parsing library\nimport \"./ColumnFilter.css\";\n\nconst Option = (props) => {\n  return (\n    <div>\n      <components.Option {...props}>\n        <input\n          type=\"checkbox\"\n          checked={props.isSelected}\n          onChange={() => null}\n        />{\" \"}\n        <label>{props.label}</label>\n      </components.Option>\n    </div>\n  );\n};\n\nconst customStyles = {\n  control: (provided) => ({\n    ...provided,\n    backgroundColor: \"white\", // Change the background color\n    color: \"black\", // Change the text color\n  }),\n  option: (provided, state) => ({\n    ...provided,\n    backgroundColor: state.isFocused ? \"#e6f7ff\" : \"transparent\", // Change the hover color\n    color: \"black\", // Change the text color\n  }),\n};\n\nexport default class Example extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      optionSelected: null,\n      columnNames: [],\n    };\n  }\n\n  componentDidMount() {\n    // Load the CSV file from a relative path\n    const { trainData } = this.props;\n\n    const reader = new FileReader();\n    reader.onload = (e) => {\n      const csvText = e.target.result;\n      const { data } = parse(csvText, { header: true });\n      const columnNames = Object.keys(data[0]);\n      this.setState({ columnNames });\n    };\n\n    reader.readAsText(trainData);\n  }\n\n  handleChange = (selected) => {\n    this.setState({\n      optionSelected: selected,\n    });\n  };\n\n  render() {\n    const { columnNames, optionSelected } = this.state;\n\n    if (columnNames.length === 0) {\n      return <div>Loading...</div>;\n    }\n\n    const options = [\n      { value: \"select-all\", label: \"Select All\" },\n      ...columnNames.map((name) => ({ value: name, label: name })),\n    ];\n\n    return (\n      <ReactSelect\n        styles={customStyles}\n        options={options}\n        isMulti\n        closeMenuOnSelect={false}\n        hideSelectedOptions={false}\n        components={{\n          Option,\n        }}\n        onChange={this.handleChange}\n        allowSelectAll={true}\n        value={optionSelected}\n        placeholder=\"Custom Placeholder\"\n      />\n    );\n  }\n}\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(<Example />, rootElement);\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}