{"ast":null,"code":"var _jsxFileName = \"/Users/noopurnishikantzambare/Downloads/ROI Website/client/src/components/ChartComponent.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { Line } from 'react-chartjs-2';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChartComponent = () => {\n  _s();\n  const [data, setData] = useState(null);\n  useEffect(() => {\n    // Fetch data from Flask backend\n    fetch('/api/data') // Replace with your Flask API endpoint\n    .then(response => response.json()).then(jsonData => {\n      setData(jsonData);\n    });\n  }, []);\n  const getChartData = () => {\n    // Process the data and format it for Chart.js\n    // You'll need to modify this according to your specific dataset structure\n    const labels = data.map(item => item.label);\n    const values = data.map(item => item.value);\n    return {\n      labels,\n      datasets: [{\n        label: 'Dataset',\n        data: values,\n        fill: false,\n        borderColor: 'rgb(75, 192, 192)',\n        tension: 0.1\n      }]\n    };\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: data ? /*#__PURE__*/_jsxDEV(Line, {\n      data: getChartData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading data...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n};\n_s(ChartComponent, \"fQZRxy/+nAZ7NLS1X4dVhrlp8Go=\");\n_c = ChartComponent;\nexport default ChartComponent;\nvar _c;\n$RefreshReg$(_c, \"ChartComponent\");","map":{"version":3,"names":["React","useEffect","useState","Line","jsxDEV","_jsxDEV","ChartComponent","_s","data","setData","fetch","then","response","json","jsonData","getChartData","labels","map","item","label","values","value","datasets","fill","borderColor","tension","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/noopurnishikantzambare/Downloads/ROI Website/client/src/components/ChartComponent.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { Line } from 'react-chartjs-2';\n\nconst ChartComponent = () => {\n  const [data, setData] = useState(null);\n\n  useEffect(() => {\n    // Fetch data from Flask backend\n    fetch('/api/data') // Replace with your Flask API endpoint\n      .then((response) => response.json())\n      .then((jsonData) => {\n        setData(jsonData);\n      });\n  }, []);\n\n  const getChartData = () => {\n    // Process the data and format it for Chart.js\n    // You'll need to modify this according to your specific dataset structure\n    const labels = data.map((item) => item.label);\n    const values = data.map((item) => item.value);\n\n    return {\n      labels,\n      datasets: [\n        {\n          label: 'Dataset',\n          data: values,\n          fill: false,\n          borderColor: 'rgb(75, 192, 192)',\n          tension: 0.1,\n        },\n      ],\n    };\n  };\n\n  return (\n    <div>\n      {data ? (\n        <Line data={getChartData} />\n      ) : (\n        <p>Loading data...</p>\n      )}\n    </div>\n  );\n};\n\nexport default ChartComponent;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,IAAI,QAAQ,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvC,MAAMC,cAAc,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC3B,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGP,QAAQ,CAAC,IAAI,CAAC;EAEtCD,SAAS,CAAC,MAAM;IACd;IACAS,KAAK,CAAC,WAAW,CAAC,CAAC;IAAA,CAChBC,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACnCF,IAAI,CAAEG,QAAQ,IAAK;MAClBL,OAAO,CAACK,QAAQ,CAAC;IACnB,CAAC,CAAC;EACN,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMC,YAAY,GAAGA,CAAA,KAAM;IACzB;IACA;IACA,MAAMC,MAAM,GAAGR,IAAI,CAACS,GAAG,CAAEC,IAAI,IAAKA,IAAI,CAACC,KAAK,CAAC;IAC7C,MAAMC,MAAM,GAAGZ,IAAI,CAACS,GAAG,CAAEC,IAAI,IAAKA,IAAI,CAACG,KAAK,CAAC;IAE7C,OAAO;MACLL,MAAM;MACNM,QAAQ,EAAE,CACR;QACEH,KAAK,EAAE,SAAS;QAChBX,IAAI,EAAEY,MAAM;QACZG,IAAI,EAAE,KAAK;QACXC,WAAW,EAAE,mBAAmB;QAChCC,OAAO,EAAE;MACX,CAAC;IAEL,CAAC;EACH,CAAC;EAED,oBACEpB,OAAA;IAAAqB,QAAA,EACGlB,IAAI,gBACHH,OAAA,CAACF,IAAI;MAACK,IAAI,EAAEO;IAAa;MAAAY,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,gBAE5BzB,OAAA;MAAAqB,QAAA,EAAG;IAAe;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG;EACtB;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAACvB,EAAA,CAzCID,cAAc;AAAAyB,EAAA,GAAdzB,cAAc;AA2CpB,eAAeA,cAAc;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}