{"ast":null,"code":"var _jsxFileName = \"/Users/noopurnishikantzambare/Downloads/ROI Website/client/src/components/CrossFilterChart.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { ChartRow, DataTable, RowChart } from 'react-dc';\nimport crossfilter from 'crossfilter2';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CrossFilterChart = () => {\n  _s();\n  const [data, setData] = useState([]);\n  useEffect(() => {\n    fetchData();\n  }, []);\n  const fetchData = async () => {\n    try {\n      const response = await axios.get('/api/data');\n      setData(response.data);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  useEffect(() => {\n    if (data && data.length > 0) {\n      createChart();\n    }\n  }, [data]);\n  const createChart = () => {\n    const ndx = crossfilter(data);\n\n    // Create dimensions and groups\n    const dimension1 = ndx.dimension(d => d.column1); // Replace \"column1\" with the actual column name from your dataset\n    const group1 = dimension1.group().reduceCount();\n    const dimension2 = ndx.dimension(d => d.column2); // Replace \"column2\" with the actual column name from your dataset\n    const group2 = dimension2.group().reduceCount();\n\n    // Render charts\n    const charts = [/*#__PURE__*/_jsxDEV(ChartRow, {\n      children: /*#__PURE__*/_jsxDEV(RowChart, {\n        dimension: dimension1,\n        group: group1,\n        width: 400,\n        height: 300\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this)\n    }, \"row1\", false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ChartRow, {\n      children: /*#__PURE__*/_jsxDEV(RowChart, {\n        dimension: dimension2,\n        group: group2,\n        width: 400,\n        height: 300\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)\n    }, \"row2\", false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)];\n    const table = /*#__PURE__*/_jsxDEV(DataTable, {\n      width: 800,\n      height: 400,\n      dimension: ndx,\n      showPagination: true\n    }, \"table\", false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 19\n    }, this);\n    const container = /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [charts, table]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this);\n    dc.renderAll();\n    return container;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: data.length > 0 ? createChart() : null\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 10\n  }, this);\n};\n_s(CrossFilterChart, \"MNW7rnkI9oNPb711ySWHHHkbM9Y=\");\n_c = CrossFilterChart;\nexport default CrossFilterChart;\nvar _c;\n$RefreshReg$(_c, \"CrossFilterChart\");","map":{"version":3,"names":["React","useEffect","useState","axios","ChartRow","DataTable","RowChart","crossfilter","jsxDEV","_jsxDEV","CrossFilterChart","_s","data","setData","fetchData","response","get","error","console","log","length","createChart","ndx","dimension1","dimension","d","column1","group1","group","reduceCount","dimension2","column2","group2","charts","children","width","height","fileName","_jsxFileName","lineNumber","columnNumber","table","showPagination","container","dc","renderAll","_c","$RefreshReg$"],"sources":["/Users/noopurnishikantzambare/Downloads/ROI Website/client/src/components/CrossFilterChart.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { ChartRow, DataTable, RowChart } from 'react-dc';\nimport crossfilter from 'crossfilter2';\n\nconst CrossFilterChart = () => {\n  const [data, setData] = useState([]);\n\n  useEffect(() => {\n    fetchData();\n  }, []);\n\n  const fetchData = async () => {\n    try {\n      const response = await axios.get('/api/data');\n      setData(response.data);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  useEffect(() => {\n    if (data && data.length > 0) {\n      createChart();\n    }\n  }, [data]);\n\n  const createChart = () => {\n    const ndx = crossfilter(data);\n\n    // Create dimensions and groups\n    const dimension1 = ndx.dimension((d) => d.column1); // Replace \"column1\" with the actual column name from your dataset\n    const group1 = dimension1.group().reduceCount();\n\n    const dimension2 = ndx.dimension((d) => d.column2); // Replace \"column2\" with the actual column name from your dataset\n    const group2 = dimension2.group().reduceCount();\n\n    // Render charts\n    const charts = [\n      <ChartRow key=\"row1\">\n        <RowChart dimension={dimension1} group={group1} width={400} height={300} />\n      </ChartRow>,\n      <ChartRow key=\"row2\">\n        <RowChart dimension={dimension2} group={group2} width={400} height={300} />\n      </ChartRow>,\n    ];\n\n    const table = <DataTable key=\"table\" width={800} height={400} dimension={ndx} showPagination={true} />;\n\n    const container = (\n      <div>\n        {charts}\n        {table}\n      </div>\n    );\n\n    dc.renderAll();\n\n    return container;\n  };\n\n  return <div>{data.length > 0 ? createChart() : null}</div>;\n};\n\nexport default CrossFilterChart;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}