{"ast":null,"code":"var _jsxFileName = \"/Users/noopurnishikantzambare/Downloads/ROI Website/client/src/components/ChartComponent.js\",\n  _s = $RefreshSig$();\nimport OscarData from './data.csv';\nimport Papa from 'papaparse';\nimport { useEffect, useState } from 'react';\nimport { Bar } from 'react-chartjs-2';\nimport { Chart as ChartJS, CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend } from 'chart.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend);\nfunction Home() {\n  _s();\n  const [chartData, setChartData] = useState({\n    datasets: []\n  });\n  const [chartOptions, setChartOptions] = useState({});\n  const [labelCountData, setLabelCountData] = useState(null);\n  const [clickedLabel, setClickedLabel] = useState(null);\n  useEffect(() => {\n    Papa.parse(OscarData, {\n      download: true,\n      header: true,\n      dynamicTyping: true,\n      delimiter: \"\",\n      complete: result => {\n        console.log(result);\n        const labelCounts = {};\n        result.data.forEach(item => {\n          const label = item['req1Product'];\n          if (label) {\n            if (labelCounts[label]) {\n              labelCounts[label] += 1;\n            } else {\n              labelCounts[label] = 1;\n            }\n          }\n        });\n        setChartData({\n          labels: Object.keys(labelCounts),\n          datasets: [{\n            label: \"Count\",\n            data: Object.values(labelCounts),\n            borderColor: \"black\",\n            backgroundColor: \"red\"\n          }]\n        });\n        setChartOptions({\n          responsive: true,\n          plugins: {\n            legend: {\n              position: 'top'\n            },\n            title: {\n              display: true,\n              text: \"Count of req1Product Values\"\n            }\n          },\n          scales: {\n            y: {\n              beginAtZero: true,\n              title: {\n                display: true,\n                text: \"Count\"\n              }\n            }\n          }\n        });\n      }\n    });\n  }, []);\n  const handleColumnClick = (event, activeElements) => {\n    if (activeElements.length > 0) {\n      const clickedIndex = activeElements[0].index;\n      const clickedLabel = chartData.labels[clickedIndex];\n      setClickedLabel(clickedLabel);\n      Papa.parse(OscarData, {\n        download: true,\n        header: true,\n        dynamicTyping: true,\n        delimiter: \"\",\n        complete: result => {\n          const labelCounts = {};\n          result.data.forEach(item => {\n            const label = item['req1Product'];\n            const prediction = item['prediction'];\n            if (label === clickedLabel && prediction !== undefined) {\n              if (labelCounts[prediction]) {\n                labelCounts[prediction] += 1;\n              } else {\n                labelCounts[prediction] = 1;\n              }\n            }\n          });\n          const labelCountChartData = {\n            labels: Object.keys(labelCounts),\n            datasets: [{\n              label: \"Count\",\n              data: Object.values(labelCounts),\n              borderColor: \"black\",\n              backgroundColor: [\"red\", \"blue\"]\n            }]\n          };\n          const labelCountChartOptions = {\n            responsive: true,\n            plugins: {\n              legend: {\n                position: 'top'\n              },\n              title: {\n                display: true,\n                text: `Count of 'prediction' Values for '${clickedLabel}'`\n              }\n            },\n            scales: {\n              y: {\n                beginAtZero: true,\n                title: {\n                  display: true,\n                  text: \"Count\"\n                }\n              }\n            }\n          };\n          setLabelCountData({\n            chartData: labelCountChartData,\n            chartOptions: labelCountChartOptions\n          });\n        }\n      });\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"HOME PAGE\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 7\n    }, this), chartData.datasets.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Bar, {\n        options: {\n          ...chartOptions,\n          onClick: handleColumnClick\n        },\n        data: chartData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 11\n      }, this), labelCountData && clickedLabel && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: [\"Count of 'prediction' Values for '\", clickedLabel, \"'\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Bar, {\n          options: labelCountData.chartOptions,\n          data: labelCountData.chartData\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 147,\n    columnNumber: 5\n  }, this);\n}\n_s(Home, \"Q1rj3o2SGRCcrjCRJ7j++9kAZn4=\");\n_c = Home;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["OscarData","Papa","useEffect","useState","Bar","Chart","ChartJS","CategoryScale","LinearScale","BarElement","Title","Tooltip","Legend","jsxDEV","_jsxDEV","register","Home","_s","chartData","setChartData","datasets","chartOptions","setChartOptions","labelCountData","setLabelCountData","clickedLabel","setClickedLabel","parse","download","header","dynamicTyping","delimiter","complete","result","console","log","labelCounts","data","forEach","item","label","labels","Object","keys","values","borderColor","backgroundColor","responsive","plugins","legend","position","title","display","text","scales","y","beginAtZero","handleColumnClick","event","activeElements","length","clickedIndex","index","prediction","undefined","labelCountChartData","labelCountChartOptions","children","fileName","_jsxFileName","lineNumber","columnNumber","options","onClick","_c","$RefreshReg$"],"sources":["/Users/noopurnishikantzambare/Downloads/ROI Website/client/src/components/ChartComponent.js"],"sourcesContent":["import OscarData from './data.csv';\nimport Papa from 'papaparse';\nimport { useEffect, useState } from 'react';\nimport { Bar } from 'react-chartjs-2';\nimport { Chart as ChartJS, CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend } from 'chart.js';\n\nChartJS.register(CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend);\n\nfunction Home() {\n  const [chartData, setChartData] = useState({\n    datasets: []\n  });\n  const [chartOptions, setChartOptions] = useState({});\n  const [labelCountData, setLabelCountData] = useState(null);\n  const [clickedLabel, setClickedLabel] = useState(null);\n\n  useEffect(() => {\n    Papa.parse(OscarData, {\n      download: true,\n      header: true,\n      dynamicTyping: true,\n      delimiter: \"\",\n      complete: (result) => {\n        console.log(result);\n        const labelCounts = {};\n\n        result.data.forEach((item) => {\n          const label = item['req1Product'];\n\n          if (label) {\n            if (labelCounts[label]) {\n              labelCounts[label] += 1;\n            } else {\n              labelCounts[label] = 1;\n            }\n          }\n        });\n\n        setChartData({\n          labels: Object.keys(labelCounts),\n          datasets: [\n            {\n              label: \"Count\",\n              data: Object.values(labelCounts),\n              borderColor: \"black\",\n              backgroundColor: \"red\"\n            }\n          ]\n        });\n\n        setChartOptions({\n          responsive: true,\n          plugins: {\n            legend: {\n              position: 'top'\n            },\n            title: {\n              display: true,\n              text: \"Count of req1Product Values\"\n            }\n          },\n          scales: {\n            y: {\n              beginAtZero: true,\n              title: {\n                display: true,\n                text: \"Count\"\n              }\n            }\n          }\n        });\n      }\n    });\n  }, []);\n\n  const handleColumnClick = (event, activeElements) => {\n    if (activeElements.length > 0) {\n      const clickedIndex = activeElements[0].index;\n      const clickedLabel = chartData.labels[clickedIndex];\n      setClickedLabel(clickedLabel);\n\n      Papa.parse(OscarData, {\n        download: true,\n        header: true,\n        dynamicTyping: true,\n        delimiter: \"\",\n        complete: (result) => {\n          const labelCounts = {};\n\n          result.data.forEach((item) => {\n            const label = item['req1Product'];\n            const prediction = item['prediction'];\n\n            if (label === clickedLabel && prediction !== undefined) {\n              if (labelCounts[prediction]) {\n                labelCounts[prediction] += 1;\n              } else {\n                labelCounts[prediction] = 1;\n              }\n            }\n          });\n\n          const labelCountChartData = {\n            labels: Object.keys(labelCounts),\n            datasets: [\n              {\n                label: \"Count\",\n                data: Object.values(labelCounts),\n                borderColor: \"black\",\n                backgroundColor: [\"red\", \"blue\"]\n              }\n            ]\n          };\n\n          const labelCountChartOptions = {\n            responsive: true,\n            plugins: {\n              legend: {\n                position: 'top'\n              },\n              title: {\n                display: true,\n                text: `Count of 'prediction' Values for '${clickedLabel}'`\n              }\n            },\n            scales: {\n              y: {\n                beginAtZero: true,\n                title: {\n                  display: true,\n                  text: \"Count\"\n                }\n              }\n            }\n          };\n\n          setLabelCountData({\n            chartData: labelCountChartData,\n            chartOptions: labelCountChartOptions\n          });\n        }\n      });\n    }\n  };\n\n  return (\n    <div>\n      <h1>HOME PAGE</h1>\n      {chartData.datasets.length > 0 ? (\n        <div>\n          <Bar options={{ ...chartOptions, onClick: handleColumnClick }} data={chartData} />\n          {labelCountData && clickedLabel && (\n            <div>\n              <h2>Count of 'prediction' Values for '{clickedLabel}'</h2>\n              <Bar options={labelCountData.chartOptions} data={labelCountData.chartData} />\n            </div>\n          )}\n        </div>\n      ) : (\n        <div>Loading...</div>\n      )}\n    </div>\n  );\n}\n\nexport default Home;\n"],"mappings":";;AAAA,OAAOA,SAAS,MAAM,YAAY;AAClC,OAAOC,IAAI,MAAM,WAAW;AAC5B,SAASC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,SAASC,GAAG,QAAQ,iBAAiB;AACrC,SAASC,KAAK,IAAIC,OAAO,EAAEC,aAAa,EAAEC,WAAW,EAAEC,UAAU,EAAEC,KAAK,EAAEC,OAAO,EAAEC,MAAM,QAAQ,UAAU;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5GR,OAAO,CAACS,QAAQ,CAACR,aAAa,EAAEC,WAAW,EAAEC,UAAU,EAAEC,KAAK,EAAEC,OAAO,EAAEC,MAAM,CAAC;AAEhF,SAASI,IAAIA,CAAA,EAAG;EAAAC,EAAA;EACd,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGhB,QAAQ,CAAC;IACzCiB,QAAQ,EAAE;EACZ,CAAC,CAAC;EACF,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGnB,QAAQ,CAAC,CAAC,CAAC,CAAC;EACpD,MAAM,CAACoB,cAAc,EAAEC,iBAAiB,CAAC,GAAGrB,QAAQ,CAAC,IAAI,CAAC;EAC1D,MAAM,CAACsB,YAAY,EAAEC,eAAe,CAAC,GAAGvB,QAAQ,CAAC,IAAI,CAAC;EAEtDD,SAAS,CAAC,MAAM;IACdD,IAAI,CAAC0B,KAAK,CAAC3B,SAAS,EAAE;MACpB4B,QAAQ,EAAE,IAAI;MACdC,MAAM,EAAE,IAAI;MACZC,aAAa,EAAE,IAAI;MACnBC,SAAS,EAAE,EAAE;MACbC,QAAQ,EAAGC,MAAM,IAAK;QACpBC,OAAO,CAACC,GAAG,CAACF,MAAM,CAAC;QACnB,MAAMG,WAAW,GAAG,CAAC,CAAC;QAEtBH,MAAM,CAACI,IAAI,CAACC,OAAO,CAAEC,IAAI,IAAK;UAC5B,MAAMC,KAAK,GAAGD,IAAI,CAAC,aAAa,CAAC;UAEjC,IAAIC,KAAK,EAAE;YACT,IAAIJ,WAAW,CAACI,KAAK,CAAC,EAAE;cACtBJ,WAAW,CAACI,KAAK,CAAC,IAAI,CAAC;YACzB,CAAC,MAAM;cACLJ,WAAW,CAACI,KAAK,CAAC,GAAG,CAAC;YACxB;UACF;QACF,CAAC,CAAC;QAEFrB,YAAY,CAAC;UACXsB,MAAM,EAAEC,MAAM,CAACC,IAAI,CAACP,WAAW,CAAC;UAChChB,QAAQ,EAAE,CACR;YACEoB,KAAK,EAAE,OAAO;YACdH,IAAI,EAAEK,MAAM,CAACE,MAAM,CAACR,WAAW,CAAC;YAChCS,WAAW,EAAE,OAAO;YACpBC,eAAe,EAAE;UACnB,CAAC;QAEL,CAAC,CAAC;QAEFxB,eAAe,CAAC;UACdyB,UAAU,EAAE,IAAI;UAChBC,OAAO,EAAE;YACPC,MAAM,EAAE;cACNC,QAAQ,EAAE;YACZ,CAAC;YACDC,KAAK,EAAE;cACLC,OAAO,EAAE,IAAI;cACbC,IAAI,EAAE;YACR;UACF,CAAC;UACDC,MAAM,EAAE;YACNC,CAAC,EAAE;cACDC,WAAW,EAAE,IAAI;cACjBL,KAAK,EAAE;gBACLC,OAAO,EAAE,IAAI;gBACbC,IAAI,EAAE;cACR;YACF;UACF;QACF,CAAC,CAAC;MACJ;IACF,CAAC,CAAC;EACJ,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMI,iBAAiB,GAAGA,CAACC,KAAK,EAAEC,cAAc,KAAK;IACnD,IAAIA,cAAc,CAACC,MAAM,GAAG,CAAC,EAAE;MAC7B,MAAMC,YAAY,GAAGF,cAAc,CAAC,CAAC,CAAC,CAACG,KAAK;MAC5C,MAAMrC,YAAY,GAAGP,SAAS,CAACuB,MAAM,CAACoB,YAAY,CAAC;MACnDnC,eAAe,CAACD,YAAY,CAAC;MAE7BxB,IAAI,CAAC0B,KAAK,CAAC3B,SAAS,EAAE;QACpB4B,QAAQ,EAAE,IAAI;QACdC,MAAM,EAAE,IAAI;QACZC,aAAa,EAAE,IAAI;QACnBC,SAAS,EAAE,EAAE;QACbC,QAAQ,EAAGC,MAAM,IAAK;UACpB,MAAMG,WAAW,GAAG,CAAC,CAAC;UAEtBH,MAAM,CAACI,IAAI,CAACC,OAAO,CAAEC,IAAI,IAAK;YAC5B,MAAMC,KAAK,GAAGD,IAAI,CAAC,aAAa,CAAC;YACjC,MAAMwB,UAAU,GAAGxB,IAAI,CAAC,YAAY,CAAC;YAErC,IAAIC,KAAK,KAAKf,YAAY,IAAIsC,UAAU,KAAKC,SAAS,EAAE;cACtD,IAAI5B,WAAW,CAAC2B,UAAU,CAAC,EAAE;gBAC3B3B,WAAW,CAAC2B,UAAU,CAAC,IAAI,CAAC;cAC9B,CAAC,MAAM;gBACL3B,WAAW,CAAC2B,UAAU,CAAC,GAAG,CAAC;cAC7B;YACF;UACF,CAAC,CAAC;UAEF,MAAME,mBAAmB,GAAG;YAC1BxB,MAAM,EAAEC,MAAM,CAACC,IAAI,CAACP,WAAW,CAAC;YAChChB,QAAQ,EAAE,CACR;cACEoB,KAAK,EAAE,OAAO;cACdH,IAAI,EAAEK,MAAM,CAACE,MAAM,CAACR,WAAW,CAAC;cAChCS,WAAW,EAAE,OAAO;cACpBC,eAAe,EAAE,CAAC,KAAK,EAAE,MAAM;YACjC,CAAC;UAEL,CAAC;UAED,MAAMoB,sBAAsB,GAAG;YAC7BnB,UAAU,EAAE,IAAI;YAChBC,OAAO,EAAE;cACPC,MAAM,EAAE;gBACNC,QAAQ,EAAE;cACZ,CAAC;cACDC,KAAK,EAAE;gBACLC,OAAO,EAAE,IAAI;gBACbC,IAAI,EAAG,qCAAoC5B,YAAa;cAC1D;YACF,CAAC;YACD6B,MAAM,EAAE;cACNC,CAAC,EAAE;gBACDC,WAAW,EAAE,IAAI;gBACjBL,KAAK,EAAE;kBACLC,OAAO,EAAE,IAAI;kBACbC,IAAI,EAAE;gBACR;cACF;YACF;UACF,CAAC;UAED7B,iBAAiB,CAAC;YAChBN,SAAS,EAAE+C,mBAAmB;YAC9B5C,YAAY,EAAE6C;UAChB,CAAC,CAAC;QACJ;MACF,CAAC,CAAC;IACJ;EACF,CAAC;EAED,oBACEpD,OAAA;IAAAqD,QAAA,gBACErD,OAAA;MAAAqD,QAAA,EAAI;IAAS;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACjBrD,SAAS,CAACE,QAAQ,CAACwC,MAAM,GAAG,CAAC,gBAC5B9C,OAAA;MAAAqD,QAAA,gBACErD,OAAA,CAACV,GAAG;QAACoE,OAAO,EAAE;UAAE,GAAGnD,YAAY;UAAEoD,OAAO,EAAEhB;QAAkB,CAAE;QAACpB,IAAI,EAAEnB;MAAU;QAAAkD,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,EACjFhD,cAAc,IAAIE,YAAY,iBAC7BX,OAAA;QAAAqD,QAAA,gBACErD,OAAA;UAAAqD,QAAA,GAAI,oCAAkC,EAAC1C,YAAY,EAAC,GAAC;QAAA;UAAA2C,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eAC1DzD,OAAA,CAACV,GAAG;UAACoE,OAAO,EAAEjD,cAAc,CAACF,YAAa;UAACgB,IAAI,EAAEd,cAAc,CAACL;QAAU;UAAAkD,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC1E,CACN;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CAAC,gBAENzD,OAAA;MAAAqD,QAAA,EAAK;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CACrB;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV;AAACtD,EAAA,CA3JQD,IAAI;AAAA0D,EAAA,GAAJ1D,IAAI;AA6Jb,eAAeA,IAAI;AAAC,IAAA0D,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}