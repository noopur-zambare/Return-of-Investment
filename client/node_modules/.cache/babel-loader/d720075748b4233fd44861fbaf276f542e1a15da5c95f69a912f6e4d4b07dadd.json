{"ast":null,"code":"var _jsxFileName = \"/Users/noopurnishikantzambare/Downloads/ROI Website/client/src/components/ImportCSV.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport './ImportCSV.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ImportCSV() {\n  _s();\n  const [trainData, setTrainData] = useState(null);\n  const [graphUrl, setGraphUrl] = useState(null);\n  const [graphRowCount, setGraphRowCount] = useState(null);\n  const [graphColumnCount, setGraphColumnCount] = useState(null);\n  const handleTrainDataUpload = event => {\n    setTrainData(event.target.files[0]);\n  };\n  const handleGraphUpload = () => {\n    const formData = new FormData();\n    formData.append('file', trainData);\n    axios.post('/upload/train_data', formData).then(response => {\n      console.log(response.data);\n      if (response.data.success) {\n        setGraphUrl(response.data.graph_url);\n        setGraphRowCount(response.data.rows);\n        setGraphColumnCount(response.data.columns);\n      }\n    }).catch(error => {\n      console.error(error);\n      // Handle error if necessary\n    });\n  };\n\n  const handleLogisticRegression = () => {\n    axios.post('/logistic_regression').then(response => {\n      console.log(response.data);\n      // Handle the logistic regression response as needed\n    }).catch(error => {\n      console.error(error);\n      // Handle error if necessary\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Train Data\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        onChange: handleTrainDataUpload\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleGraphUpload,\n        children: \"Upload\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), graphUrl && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"result\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: graphUrl,\n          alt: \"Graph\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Graph Rows: \", graphRowCount]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Graph Columns: \", graphColumnCount]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"ML Model\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleLogisticRegression,\n        children: \"Logistic Regression\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n}\n_s(ImportCSV, \"v6XYT37Sk9CMi+3IiP0IQe3AJu0=\");\n_c = ImportCSV;\nexport default ImportCSV;\nvar _c;\n$RefreshReg$(_c, \"ImportCSV\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","ImportCSV","_s","trainData","setTrainData","graphUrl","setGraphUrl","graphRowCount","setGraphRowCount","graphColumnCount","setGraphColumnCount","handleTrainDataUpload","event","target","files","handleGraphUpload","formData","FormData","append","post","then","response","console","log","data","success","graph_url","rows","columns","catch","error","handleLogisticRegression","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","onClick","src","alt","_c","$RefreshReg$"],"sources":["/Users/noopurnishikantzambare/Downloads/ROI Website/client/src/components/ImportCSV.js"],"sourcesContent":["import React, { useState } from 'react';\nimport axios from 'axios';\nimport './ImportCSV.css';\n\nfunction ImportCSV() {\n  const [trainData, setTrainData] = useState(null);\n  const [graphUrl, setGraphUrl] = useState(null);\n  const [graphRowCount, setGraphRowCount] = useState(null);\n  const [graphColumnCount, setGraphColumnCount] = useState(null);\n\n  const handleTrainDataUpload = (event) => {\n    setTrainData(event.target.files[0]);\n  };\n\n  const handleGraphUpload = () => {\n    const formData = new FormData();\n    formData.append('file', trainData);\n\n    axios\n      .post('/upload/train_data', formData)\n      .then((response) => {\n        console.log(response.data);\n        if (response.data.success) {\n          setGraphUrl(response.data.graph_url);\n          setGraphRowCount(response.data.rows);\n          setGraphColumnCount(response.data.columns);\n        }\n      })\n      .catch((error) => {\n        console.error(error);\n        // Handle error if necessary\n      });\n  };\n\n  const handleLogisticRegression = () => {\n    axios\n      .post('/logistic_regression')\n      .then((response) => {\n        console.log(response.data);\n        // Handle the logistic regression response as needed\n      })\n      .catch((error) => {\n        console.error(error);\n        // Handle error if necessary\n      });\n  };\n\n  return (\n    <div className=\"container\">\n      <div className=\"section\">\n        <h2>Train Data</h2>\n        <input type=\"file\" onChange={handleTrainDataUpload} />\n        <button onClick={handleGraphUpload}>Upload</button>\n\n        {graphUrl && (\n          <div className=\"result\">\n            <img src={graphUrl} alt=\"Graph\" />\n            <p>Graph Rows: {graphRowCount}</p>\n            <p>Graph Columns: {graphColumnCount}</p>\n          </div>\n        )}\n      </div>\n\n      <div className=\"section\">\n        <h2>ML Model</h2>\n        <button onClick={handleLogisticRegression}>Logistic Regression</button>\n      </div>\n    </div>\n  );\n}\n\nexport default ImportCSV;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}