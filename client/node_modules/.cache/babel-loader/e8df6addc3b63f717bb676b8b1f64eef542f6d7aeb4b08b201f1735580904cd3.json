{"ast":null,"code":"var _jsxFileName = \"/Users/noopurnishikantzambare/Downloads/ROI Website/client/src/components/ChartComponent.js\",\n  _s = $RefreshSig$();\nimport Papa from 'papaparse';\nimport { useEffect, useState } from 'react';\nimport { Bar } from 'react-chartjs-2';\nimport { Chart as ChartJS, CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend } from 'chart.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend);\nfunction Home() {\n  _s();\n  const [chartData, setChartData] = useState({\n    datasets: []\n  });\n  const [chartOptions, setChartOptions] = useState({});\n  const [labelCountData, setLabelCountData] = useState([]);\n  const [clickedLabelIndex, setClickedLabelIndex] = useState(null);\n  const [showDoubleBarGraph, setShowDoubleBarGraph] = useState(true);\n  const [dataCSV, setDataCSV] = useState([]);\n  useEffect(() => {\n    Papa.parse('/static/data.csv', {\n      download: true,\n      header: true,\n      dynamicTyping: true,\n      delimiter: \"\",\n      complete: result => {\n        const labelCounts = {};\n        result.data.forEach(item => {\n          const label = item['req1Product'];\n          if (label) {\n            if (labelCounts[label]) {\n              labelCounts[label] += 1;\n            } else {\n              labelCounts[label] = 1;\n            }\n          }\n        });\n        setChartData({\n          labels: Object.keys(labelCounts),\n          datasets: [{\n            label: \"Count\",\n            data: Object.values(labelCounts),\n            borderColor: \"white\",\n            backgroundColor: \"#defde0\"\n          }]\n        });\n        setChartOptions({\n          responsive: true,\n          plugins: {\n            legend: {\n              position: 'top'\n            },\n            title: {\n              display: true,\n              text: \"Count of req1Product Values\",\n              color: 'white'\n            }\n          },\n          scales: {\n            x: {\n              type: 'category',\n              ticks: {\n                color: 'white'\n              }\n            },\n            y: {\n              beginAtZero: true,\n              title: {\n                display: true,\n                text: \"Count\",\n                color: 'white'\n              },\n              ticks: {\n                color: 'white'\n              }\n            }\n          }\n        });\n        setDataCSV(result.data);\n      }\n    });\n  }, []);\n  const handleColumnClick = async (event, activeElements) => {\n    if (activeElements.length > 0) {\n      const labelIndex = activeElements[0].index;\n      setClickedLabelIndex(labelIndex); // Update clicked label index\n\n      const clickedLabel = chartData.labels[labelIndex];\n      const filteredData = dataCSV.filter(item => item['req1Product'] === clickedLabel);\n      const csv = Papa.unparse(filteredData);\n      const csvData = new Blob([csv], {\n        type: 'text/csv'\n      });\n      const csvURL = window.URL.createObjectURL(csvData);\n      const tempLink = document.createElement('a');\n      tempLink.href = csvURL;\n      tempLink.setAttribute('download', 'filtered_data.csv');\n      tempLink.click();\n    }\n  };\n  const handleCountButtonClick = () => {\n    setShowDoubleBarGraph(!showDoubleBarGraph);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n      children: \"Analysis\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"import-boxes\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }, this), chartData ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"graph-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(Bar, {\n          options: {\n            onClick: handleColumnClick,\n            ...chartOptions\n          },\n          data: chartData\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleCountButtonClick,\n          children: showDoubleBarGraph ? \"Interdependency among other products\" : \"Individual Feature Count\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: labelCountData.length > 0 && labelCountData[clickedLabelIndex] && /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: showDoubleBarGraph ? `Label Count for ${chartData.labels[clickedLabelIndex]}` : `Req2Product Count for ${chartData.labels[clickedLabelIndex]}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Bar, {\n            options: labelCountData[clickedLabelIndex].chartOptions,\n            data: labelCountData[clickedLabelIndex].chartData\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"style\", {\n      children: `\n        .graph-container {\n          width: 600px;\n          height: 400px;\n          margin: 0 auto;\n        }\n      `\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 113,\n    columnNumber: 5\n  }, this);\n}\n_s(Home, \"hg6MQBvGh7ry9eFHGsQdMaT27j4=\");\n_c = Home;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["Papa","useEffect","useState","Bar","Chart","ChartJS","CategoryScale","LinearScale","BarElement","Title","Tooltip","Legend","jsxDEV","_jsxDEV","register","Home","_s","chartData","setChartData","datasets","chartOptions","setChartOptions","labelCountData","setLabelCountData","clickedLabelIndex","setClickedLabelIndex","showDoubleBarGraph","setShowDoubleBarGraph","dataCSV","setDataCSV","parse","download","header","dynamicTyping","delimiter","complete","result","labelCounts","data","forEach","item","label","labels","Object","keys","values","borderColor","backgroundColor","responsive","plugins","legend","position","title","display","text","color","scales","x","type","ticks","y","beginAtZero","handleColumnClick","event","activeElements","length","labelIndex","index","clickedLabel","filteredData","filter","csv","unparse","csvData","Blob","csvURL","window","URL","createObjectURL","tempLink","document","createElement","href","setAttribute","click","handleCountButtonClick","children","fileName","_jsxFileName","lineNumber","columnNumber","className","options","onClick","_c","$RefreshReg$"],"sources":["/Users/noopurnishikantzambare/Downloads/ROI Website/client/src/components/ChartComponent.js"],"sourcesContent":["import Papa from 'papaparse';\nimport { useEffect, useState } from 'react';\nimport { Bar } from 'react-chartjs-2';\nimport { Chart as ChartJS, CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend } from 'chart.js';\n\nChartJS.register(CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend);\n\nfunction Home() {\n  const [chartData, setChartData] = useState({\n    datasets: []\n  });\n  const [chartOptions, setChartOptions] = useState({});\n  const [labelCountData, setLabelCountData] = useState([]);\n  const [clickedLabelIndex, setClickedLabelIndex] = useState(null);\n  const [showDoubleBarGraph, setShowDoubleBarGraph] = useState(true);\n  const [dataCSV, setDataCSV] = useState([]);\n\n  useEffect(() => {\n    Papa.parse('/static/data.csv', {\n      download: true,\n      header: true,\n      dynamicTyping: true,\n      delimiter: \"\",\n      complete: (result) => {\n        const labelCounts = {};\n\n        result.data.forEach((item) => {\n          const label = item['req1Product'];\n\n          if (label) {\n            if (labelCounts[label]) {\n              labelCounts[label] += 1;\n            } else {\n              labelCounts[label] = 1;\n            }\n          }\n        });\n\n        setChartData({\n          labels: Object.keys(labelCounts),\n          datasets: [\n            {\n              label: \"Count\",\n              data: Object.values(labelCounts),\n              borderColor: \"white\",\n              backgroundColor: \"#defde0\"\n            }\n          ]\n        });\n\n        setChartOptions({\n          responsive: true,\n          plugins: {\n            legend: {\n              position: 'top'\n            },\n            title: {\n              display: true,\n              text: \"Count of req1Product Values\",\n              color: 'white'\n            }\n          },\n          scales: {\n            x: {\n              type: 'category',\n              ticks: {\n                color: 'white'\n              }\n            },\n            y: {\n              beginAtZero: true,\n              title: {\n                display: true,\n                text: \"Count\",\n                color: 'white'\n              },\n              ticks: {\n                color: 'white'\n              }\n            }\n          }\n        });\n\n        setDataCSV(result.data);\n      }\n    });\n  }, []);\n\n  const handleColumnClick = async (event, activeElements) => {\n    if (activeElements.length > 0) {\n      const labelIndex = activeElements[0].index;\n      setClickedLabelIndex(labelIndex); // Update clicked label index\n\n      const clickedLabel = chartData.labels[labelIndex];\n\n      const filteredData = dataCSV.filter((item) => item['req1Product'] === clickedLabel);\n\n      const csv = Papa.unparse(filteredData);\n      const csvData = new Blob([csv], { type: 'text/csv' });\n      const csvURL = window.URL.createObjectURL(csvData);\n      const tempLink = document.createElement('a');\n      tempLink.href = csvURL;\n      tempLink.setAttribute('download', 'filtered_data.csv');\n      tempLink.click();\n    }\n  };\n\n  const handleCountButtonClick = () => {\n    setShowDoubleBarGraph(!showDoubleBarGraph);\n  };\n\n  return (\n    <div>\n      <h4>Analysis</h4>\n      <div className=\"import-boxes\"></div>\n      {chartData ? (\n        <div className=\"graph-container\">\n          <div>\n            <Bar options={{ onClick: handleColumnClick, ...chartOptions }} data={chartData} />\n            <button onClick={handleCountButtonClick}>\n              {showDoubleBarGraph ? \"Interdependency among other products\" : \"Individual Feature Count\"}\n            </button>\n          </div>\n          <div>\n            {labelCountData.length > 0 && labelCountData[clickedLabelIndex] && (\n              <div>\n                <h4>\n                  {showDoubleBarGraph\n                    ? `Label Count for ${chartData.labels[clickedLabelIndex]}`\n                    : `Req2Product Count for ${chartData.labels[clickedLabelIndex]}`}\n                </h4>\n                <Bar\n                  options={labelCountData[clickedLabelIndex].chartOptions}\n                  data={labelCountData[clickedLabelIndex].chartData}\n                />\n              </div>\n            )}\n          </div>\n        </div>\n      ) : (\n        <div>Loading...</div>\n      )}\n      <style>{`\n        .graph-container {\n          width: 600px;\n          height: 400px;\n          margin: 0 auto;\n        }\n      `}</style>\n    </div>\n  );\n}\n\nexport default Home;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}